{"version":3,"sources":["GenericApp.js"],"names":["window","localStorage","getItem","setItem","GenericApp","props","settings","id","obj","socket","systemLang","common","language","I18n","setLanguage","_systemConfig","expertMode","setState","getExpertMode","message","data","newThemeName","Utils","getThemeName","setThemeName","theme","createTheme","themeName","themeType","getThemeType","onThemeChange","onThemeChanged","onToggleExpertMode","console","warn","JSON","stringify","resizeTimer","clearTimeout","setTimeout","width","getWidth","query","location","search","replace","args","trim","split","filter","t","forEach","b","parts","length","instance","undefined","parseInt","slice","tmp","pathname","adapterName","instanceId","Router","getLocation","tab","themeInstance","state","selectedTab","selectedTabNum","errorText","changed","connected","loaded","isConfigurationError","toast","bottomButtons","translations","require","Object","keys","lang","assign","setTranslations","savedNative","encryptedFields","Connection","name","doNotLoadAllObjects","onProgress","progress","PROGRESS","CONNECTING","READY","onReady","objects","scripts","subscribeObject","onSystemConfigChanged","then","getSystemConfig","_secret","secret","getObject","waitPromise","sentryInited","host","uuidObj","uuid","Sentry","configureScope","scope","setUser","Promise","resolve","onPrepareLoad","parse","onConnectionReady","onError","err","error","showError","addEventListener","onResize","onReceiveMessage","removeEventListener","palette","type","sessionStorage","value","result","i","String","fromCharCode","charCodeAt","selectTab","index","attr","encrypt","decrypt","_socket","emit","doc","rows","item","webExtendable","map","reject","ip","_host","IPs4","address","family","IPs6","hardware","networkInterfaces","eth","inter","push","isClose","oldObj","_oldObj","a","hasOwnProperty","onPrepareSave","setObject","globalThis","onClose","e","vertical","horizontal","classes","close","native","isChanged","newNative","getIsChanged","onSave","attrs","shift","Error","_updateNativeValue","cb","text","renderError","renderToast","renderSaveCloseButtons","SIZES","xs","sm","md","lg","xl","innerWidth","reverse","widthComputed","find","key","parent","$iframeDialog","postMessage","propTypes","PropTypes","string","func","object","array","bool"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport Connection, {PROGRESS} from './Connection';\r\nimport * as Sentry from '@sentry/browser';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport DialogError from './Dialogs/Error';\r\nimport Snackbar from '@material-ui/core/Snackbar';\r\nimport IconButton from '@material-ui/core/IconButton';\r\n\r\nimport IconClose from '@material-ui/icons/Close';\r\n\r\nimport printPrompt from './Prompt';\r\nimport theme from './Theme';\r\nimport Loader from './Components/Loader';\r\nimport Router from './Components/Router';\r\nimport Utils from './Components/Utils';\r\nimport SaveCloseButtons from './Components/SaveCloseButtons';\r\nimport I18n from './i18n';\r\n\r\nimport './index.css';\r\n\r\nif (!window.localStorage) {\r\n    window.localStorage = {\r\n        getItem: () => null,\r\n        setItem: () => null,\r\n    };\r\n}\r\n\r\n/**\r\n * @extends {Router<import('./types').GenericAppProps, import('./types').GenericAppState>}\r\n */\r\nclass GenericApp extends Router {\r\n    /**\r\n     * @param {import('./types').GenericAppProps} props\r\n     * @param {import('./types').GenericAppSettings | undefined} settings\r\n     */\r\n    constructor(props, settings) {\r\n        super(props);\r\n\r\n        printPrompt();\r\n\r\n        let query = (window.location.search || '').replace(/^\\?/, '').replace(/#.*$/, '');\r\n        let args = {};\r\n        query.trim().split('&').filter(t => t.trim()).forEach(b => {\r\n            const parts = b.split('=');\r\n            args[parts[0]] = parts.length === 2 ? parts[1] : true;\r\n        });\r\n\r\n        // extract instance from URL\r\n        this.instance = args.instance !== undefined ? parseInt(args.instance, 10) || 0 : (parseInt(window.location.search.slice(1), 10) || 0);\r\n        // extract adapter name from URL\r\n        const tmp = window.location.pathname.split('/');\r\n        this.adapterName = settings?.adapterName || props.adapterName || window.adapterName || tmp[tmp.length - 2] || 'iot';\r\n        this.instanceId  = 'system.adapter.' + this.adapterName + '.' + this.instance;\r\n\r\n        const location = Router.getLocation();\r\n        location.tab = location.tab || window.localStorage.getItem(this.adapterName + '-adapter') || '';\r\n\r\n        const themeInstance = this.createTheme();\r\n\r\n        this.state = {\r\n            selectedTab: window.localStorage.getItem(this.adapterName + '-adapter') || '',\r\n            selectedTabNum: -1,\r\n            native: {},\r\n            errorText: '',\r\n            changed: false,\r\n            connected: false,\r\n            loaded: false,\r\n            isConfigurationError: '',\r\n            expertMode:     false,\r\n            toast: '',\r\n            theme:          themeInstance,\r\n            themeName:      this.getThemeName(themeInstance),\r\n            themeType:      this.getThemeType(themeInstance),\r\n            bottomButtons:  (settings && settings.bottomButtons) === false ? false : ((props && props.bottomButtons) === false ? false : true),\r\n            width:          GenericApp.getWidth(),\r\n        };\r\n\r\n        // init translations\r\n        const translations = {\r\n            'en': require('./i18n/en.json'),\r\n            'de': require('./i18n/de.json'),\r\n            'ru': require('./i18n/ru.json'),\r\n            'pt': require('./i18n/pt.json'),\r\n            'nl': require('./i18n/nl.json'),\r\n            'fr': require('./i18n/fr.json'),\r\n            'it': require('./i18n/it.json'),\r\n            'es': require('./i18n/es.json'),\r\n            'pl': require('./i18n/pl.json'),\r\n            'zh-cn': require('./i18n/zh-cn.json'),\r\n        };\r\n\r\n        // merge together\r\n        if (settings && settings.translations) {\r\n            Object.keys(settings.translations).forEach(lang => translations[lang] = Object.assign(translations[lang], settings.translations[lang]));\r\n        } else if (props.translations) {\r\n            Object.keys(props.translations).forEach(lang => translations[lang] = Object.assign(translations[lang], props.translations[lang]));\r\n        }\r\n\r\n        I18n.setTranslations(translations);\r\n\r\n        this.savedNative = {}; // to detect if the config changed\r\n\r\n        this.encryptedFields = props.encryptedFields || settings?.encryptedFields || [];\r\n\r\n        this.socket = new Connection({\r\n            ...(props?.socket || settings?.socket),\r\n            name: this.adapterName,\r\n            doNotLoadAllObjects: settings?.doNotLoadAllObjects,\r\n            onProgress: progress => {\r\n                if (progress === PROGRESS.CONNECTING) {\r\n                    this.setState({connected: false});\r\n                } else if (progress === PROGRESS.READY) {\r\n                    this.setState({connected: true});\r\n                } else {\r\n                    this.setState({connected: true});\r\n                }\r\n            },\r\n            onReady: (objects, scripts) => {\r\n                I18n.setLanguage(this.socket.systemLang);\r\n\r\n                // subscribe because of language and expert mode\r\n                this.socket.subscribeObject('system.config', this.onSystemConfigChanged)\r\n                    .then(() => this.getSystemConfig())\r\n                    .then(obj => {\r\n                        this._secret = (typeof obj !== 'undefined' && obj.native && obj.native.secret) || 'Zgfr56gFe87jJOM';\r\n                        this._systemConfig = obj?.common || {};\r\n                        return this.socket.getObject(this.instanceId);\r\n                    })\r\n                    .then(obj => {\r\n                        let waitPromise;\r\n\r\n                        // read UUID and init sentry with it.\r\n                        if (!this.sentryInited) {\r\n                            this.sentryInited = true;\r\n\r\n                            if (window.location.host !== 'localhost:3000') {\r\n                                waitPromise = this.socket.getObject('system.meta.uuid')\r\n                                    .then(uuidObj => {\r\n                                        if (uuidObj && uuidObj.native && uuidObj.native.uuid) {\r\n                                            Sentry.configureScope(scope =>\r\n                                                scope.setUser({id: uuidObj.native.uuid}));\r\n                                        }\r\n                                    });\r\n                            }\r\n                        }\r\n                        waitPromise = waitPromise || Promise.resolve();\r\n\r\n                        waitPromise\r\n                            .then(() => {\r\n                                if (obj) {\r\n                                    this.common = obj && obj.common;\r\n                                    this.onPrepareLoad(obj.native); // decode all secrets\r\n                                    this.savedNative = JSON.parse(JSON.stringify(obj.native));\r\n                                    this.setState({native: obj.native, loaded: true, expertMode: this.getExpertMode()}, () =>\r\n                                        this.onConnectionReady && this.onConnectionReady());\r\n                                } else {\r\n                                    console.warn('Cannot load instance settings');\r\n                                    this.setState({native: {}, loaded: true, expertMode: this.getExpertMode()}, () => this.onConnectionReady && this.onConnectionReady());\r\n                                }\r\n                            });\r\n                    });\r\n            },\r\n            onError: err => {\r\n                console.error(err);\r\n                this.showError(err);\r\n            }\r\n        });\r\n    }\r\n\r\n    onSystemConfigChanged = (id, obj) => {\r\n        if (obj && id === 'system.config') {\r\n            if (this.socket.systemLang !== obj?.common.language) {\r\n                this.socket.systemLang = obj?.common.language || 'en';\r\n                I18n.setLanguage(this.socket.systemLang);\r\n            }\r\n\r\n            if (this._systemConfig.expertMode !== !!obj?.common?.expertMode) {\r\n                this._systemConfig = obj?.common || {};\r\n                this.setState({expertMode: this.getExpertMode()});\r\n            } else {\r\n                this._systemConfig = obj?.common || {};\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Called immediately after a component is mounted. Setting state here will trigger re-rendering.\r\n     */\r\n    componentDidMount() {\r\n        window.addEventListener('resize', this.onResize, true);\r\n        window.addEventListener('message', this.onReceiveMessage, false);\r\n        super.componentDidMount();\r\n    }\r\n\r\n    /**\r\n     * Called immediately before a component is destroyed.\r\n     */\r\n    componentWillUnmount() {\r\n        window.removeEventListener('resize', this.onResize, true);\r\n        window.removeEventListener('message', this.onReceiveMessage, false);\r\n        super.componentWillUnmount();\r\n    }\r\n\r\n    onReceiveMessage = message => {\r\n        if (message?.data) {\r\n            if (message.data === 'updateTheme') {\r\n                const newThemeName = Utils.getThemeName()\r\n                Utils.setThemeName(Utils.getThemeName());\r\n\r\n                const theme = this.createTheme(newThemeName);\r\n\r\n                this.setState({\r\n                    theme,\r\n                    themeName: this.getThemeName(theme),\r\n                    themeType: this.getThemeType(theme)\r\n                }, () => {\r\n                    this.props.onThemeChange && this.props.onThemeChange(newThemeName);\r\n                    this.onThemeChanged && this.onThemeChanged(newThemeName);\r\n                });\r\n            } else if (message.data === 'updateExpertMode') {\r\n                this.onToggleExpertMode && this.onToggleExpertMode(this.getExpertMode());\r\n            } else {\r\n                console.warn('Received unknown message: ' + JSON.stringify(message.data));\r\n            }\r\n        }\r\n    };\r\n\r\n    /**\r\n     * @private\r\n     */\r\n    onResize = () => {\r\n        this.resizeTimer && clearTimeout(this.resizeTimer);\r\n        this.resizeTimer = setTimeout(() => {\r\n            this.resizeTimer = null;\r\n            this.setState({width: GenericApp.getWidth()});\r\n        }, 200);\r\n    };\r\n\r\n    /**\r\n     * Gets the width depending on the window inner width.\r\n     * @returns {import('./types').Width}\r\n     */\r\n    static getWidth() {\r\n        /**\r\n         * innerWidth |xs      sm      md      lg      xl\r\n         *            |-------|-------|-------|-------|------>\r\n         * width      |  xs   |  sm   |  md   |  lg   |  xl\r\n         */\r\n\r\n        const SIZES = {\r\n            xs: 0,\r\n            sm: 600,\r\n            md: 960,\r\n            lg: 1280,\r\n            xl: 1920\r\n        };\r\n        const width = window.innerWidth;\r\n        const keys = Object.keys(SIZES).reverse();\r\n        const widthComputed = keys.find(key => width >= SIZES[key]);\r\n\r\n        return widthComputed || 'xs';\r\n    }\r\n\r\n    /**\r\n     * Get a theme\r\n     * @param {string} name Theme name\r\n     * @returns {import('./types').Theme}\r\n     */\r\n    createTheme(name = '') {\r\n        return theme(Utils.getThemeName(name));\r\n    }\r\n\r\n    /**\r\n     * Get the theme name\r\n     * @param {import('./types').Theme} theme Theme\r\n     * @returns {string} Theme name\r\n     */\r\n    getThemeName(theme) {\r\n        return theme.name;\r\n    }\r\n\r\n    /**\r\n     * Get the theme type\r\n     * @param {import('./types').Theme} theme Theme\r\n     * @returns {string} Theme type\r\n     */\r\n    getThemeType(theme) {\r\n        return theme.palette.type;\r\n    }\r\n\r\n    /**\r\n     * Changes the current theme\r\n     */\r\n    toggleTheme() {\r\n        const themeName = this.state.themeName;\r\n\r\n        // dark => blue => colored => light => dark\r\n        const newThemeName = themeName === 'dark' ? 'blue' :\r\n            (themeName === 'blue' ? 'colored' :\r\n                (themeName === 'colored' ? 'light' : 'dark'));\r\n\r\n        Utils.setThemeName(newThemeName);\r\n\r\n        const theme = this.createTheme(newThemeName);\r\n\r\n        this.setState({\r\n            theme,\r\n            themeName: this.getThemeName(theme),\r\n            themeType: this.getThemeType(theme)\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Gets the system configuration.\r\n     * @returns {Promise<ioBroker.OtherObject>}\r\n     */\r\n    getSystemConfig() {\r\n        if (this._systemConfig) {\r\n            return Promise.resolve(this._systemConfig);\r\n        }\r\n        if (this.socket.objects && this.socket.objects['system.config']) {\r\n            return Promise.resolve(this.socket.objects['system.config']);\r\n        } else {\r\n            // @ts-ignore\r\n            return this.socket.getObject('system.config')\r\n                .then(obj => obj?.common || {});\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Get current expert mode\r\n     * @returns {boolean}\r\n     */\r\n    getExpertMode() {\r\n        return window.sessionStorage.getItem('App.expertMode') === 'true' || !!this._systemConfig.expertMode;\r\n    }\r\n\r\n    /**\r\n     * Gets called when the socket.io connection is ready.\r\n     * You can overload this function to execute own commands.\r\n     */\r\n    onConnectionReady() {\r\n    }\r\n\r\n    /**\r\n     * Encrypts a string.\r\n     * @param {string} value\r\n     * @returns {string}\r\n     */\r\n    encrypt(value) {\r\n        let result = '';\r\n        for (let i = 0; i < value.length; i++) {\r\n            result += String.fromCharCode(this._secret[i % this._secret.length].charCodeAt(0) ^ value.charCodeAt(i));\r\n        }\r\n        return result;\r\n    }\r\n\r\n    /**\r\n     * Decrypts a string.\r\n     * @param {string} value\r\n     * @returns {string}\r\n     */\r\n    decrypt(value) {\r\n        let result = '';\r\n        for (let i = 0; i < value.length; i++) {\r\n            result += String.fromCharCode(this._secret[i % this._secret.length].charCodeAt(0) ^ value.charCodeAt(i));\r\n        }\r\n        return result;\r\n    }\r\n\r\n    /**\r\n     * Gets called when the navigation hash changes.\r\n     * You may override this if needed.\r\n     */\r\n    onHashChanged() {\r\n        const location = Router.getLocation();\r\n        if (location.tab !== this.state.selectedTab) {\r\n            this.selectTab(location.tab);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Selects the given tab.\r\n     * @param {string} tab\r\n     * @param {number} [index]\r\n     */\r\n    selectTab(tab, index) {\r\n        window.localStorage[this.adapterName + '-adapter'] = tab;\r\n        this.setState({selectedTab: tab, selectedTabNum: index})\r\n    }\r\n\r\n    /**\r\n     * Gets called before the settings are saved.\r\n     * You may override this if needed.\r\n     * @param {Record<string, any>} settings\r\n     */\r\n    onPrepareSave(settings) {\r\n        // here you can encode values\r\n        this.encryptedFields && this.encryptedFields.forEach(attr => {\r\n            if (settings[attr]) {\r\n                settings[attr] = this.encrypt(settings[attr]);\r\n            }\r\n        });\r\n\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     * Gets called after the settings are loaded.\r\n     * You may override this if needed.\r\n     * @param {Record<string, any>} settings\r\n     */\r\n    onPrepareLoad(settings) {\r\n        // here you can encode values\r\n        this.encryptedFields && this.encryptedFields.forEach(attr => {\r\n            if (settings[attr]) {\r\n                settings[attr] = this.decrypt(settings[attr]);\r\n            }\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Gets the extendable instances.\r\n     * @returns {Promise<any[]>}\r\n     */\r\n    getExtendableInstances() {\r\n        return new Promise(resolve => {\r\n            this.socket._socket.emit('getObjectView', 'system', 'instance', null, (err, doc) => {\r\n                if (err) {\r\n                    resolve([]);\r\n                } else {\r\n                    resolve(doc.rows.filter(item => item.value.common.webExtendable).map(item => item.value));\r\n                }\r\n            });\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Gets the IP addresses of the given host.\r\n     * @param {string} host\r\n     */\r\n    getIpAddresses(host) {\r\n        return new Promise((resolve, reject) => {\r\n            this.socket._socket.emit('getHostByIp', host || this.common.host, (ip, _host) => {\r\n                const IPs4 = [{name: '[IPv4] 0.0.0.0 - ' + I18n.t('ra_Listen on all IPs'), address: '0.0.0.0', family: 'ipv4'}];\r\n                const IPs6 = [{name: '[IPv6] ::',      address: '::',      family: 'ipv6'}];\r\n                if (_host) {\r\n                    host = _host;\r\n                    if (host.native.hardware && host.native.hardware.networkInterfaces) {\r\n                        Object.keys(host.native.hardware.networkInterfaces).forEach(eth =>\r\n                            host.native.hardware.networkInterfaces[eth].forEach(inter => {\r\n                                if (inter.family !== 'IPv6') {\r\n                                    IPs4.push({name: '[' + inter.family + '] ' + inter.address + ' - ' + eth, address: inter.address, family: 'ipv4'});\r\n                                } else {\r\n                                    IPs6.push({name: '[' + inter.family + '] ' + inter.address + ' - ' + eth, address: inter.address, family: 'ipv6'});\r\n                                }\r\n                            }));\r\n                    }\r\n                    IPs6.forEach(ip => IPs4.push(ip));\r\n                }\r\n                resolve(IPs4);\r\n            });\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Saves the settings to the server.\r\n     * @param {boolean} isClose True if the user is closing the dialog.\r\n     */\r\n    onSave(isClose) {\r\n        let oldObj;\r\n        if (this.state.isConfigurationError) {\r\n            this.setState({errorText: this.state.isConfigurationError});\r\n            return;\r\n        }\r\n\r\n        this.socket.getObject(this.instanceId)\r\n            .then(_oldObj => {\r\n                oldObj = _oldObj || {};\r\n\r\n                for (const a in this.state.native) {\r\n                    if (this.state.native.hasOwnProperty(a)) {\r\n                        oldObj.native[a] = this.state.native[a];\r\n                    }\r\n                }\r\n\r\n                if (this.state.common) {\r\n                    for (const b in this.state.common) {\r\n                        if (this.state.common.hasOwnProperty(b)) {\r\n                            oldObj.common[b] = this.state.common[b];\r\n                        }\r\n                    }\r\n                }\r\n\r\n                if (this.onPrepareSave(oldObj.native) !== false) {\r\n                    return this.socket.setObject(this.instanceId, oldObj);\r\n                } else {\r\n                    return Promise.reject('Invalid configuration');\r\n                }\r\n            })\r\n            .then(() => {\r\n                this.savedNative = oldObj.native;\r\n                globalThis.changed = false;\r\n                this.setState({changed: false});\r\n                isClose && GenericApp.onClose();\r\n            })\r\n            .catch(e => {\r\n                console.error(`Cannot save configuration: ${e}`);\r\n            });\r\n    }\r\n\r\n    /**\r\n     * Renders the toast.\r\n     * @returns {JSX.Element | null} The JSX element.\r\n     */\r\n    renderToast() {\r\n        if (!this.state.toast) return null;\r\n        return (\r\n            <Snackbar\r\n                anchorOrigin={{\r\n                    vertical: 'bottom',\r\n                    horizontal: 'left',\r\n                }}\r\n                open={true}\r\n                autoHideDuration={6000}\r\n                onClose={() => this.setState({toast: ''})}\r\n                ContentProps={{\r\n                    'aria-describedby': 'message-id',\r\n                }}\r\n                message={<span id=\"message-id\">{this.state.toast}</span>}\r\n                action={[\r\n                    <IconButton\r\n                        key=\"close\"\r\n                        aria-label=\"Close\"\r\n                        color=\"inherit\"\r\n                        className={this.props.classes.close}\r\n                        onClick={() => this.setState({toast: ''})}\r\n                    >\r\n                        <IconClose />\r\n                    </IconButton>,\r\n                ]}\r\n            />);\r\n    }\r\n\r\n    /**\r\n     * Closes the dialog.\r\n     * @private\r\n     */\r\n    static onClose() {\r\n        if (typeof window.parent !== 'undefined' && window.parent) {\r\n            try {\r\n                if (window.parent.$iframeDialog && typeof window.parent.$iframeDialog.close === 'function') {\r\n                    window.parent.$iframeDialog.close();\r\n                } else {\r\n                    window.parent.postMessage('close', '*');\r\n                }\r\n            } catch (e) {\r\n                window.parent.postMessage('close', '*');\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Renders the error dialog.\r\n     * @returns {JSX.Element | null} The JSX element.\r\n     */\r\n    renderError() {\r\n        if (!this.state.errorText) {\r\n            return null;\r\n        } else {\r\n            return <DialogError text={this.state.errorText} onClose={() => this.setState({errorText: ''})}/>;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Checks if the configuration has changed.\r\n     * @param {Record<string, any>} [native] the new state\r\n     */\r\n    getIsChanged(native) {\r\n        native = native || this.state.native;\r\n        const isChanged =  JSON.stringify(native) !== JSON.stringify(this.savedNative);\r\n\r\n        if(isChanged) {\r\n            globalThis.changed = true;\r\n        } else {\r\n            globalThis.changed = false;\r\n        }\r\n\r\n        return isChanged;\r\n    }\r\n\r\n    /**\r\n     * Gets called when loading the configuration.\r\n     * @param {Record<string, any>} newNative The new configuration object.\r\n     */\r\n    onLoadConfig(newNative) {\r\n        if (JSON.stringify(newNative) !== JSON.stringify(this.state.native)) {\r\n            this.setState({native: newNative, changed: this.getIsChanged(newNative)})\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Sets the configuration error.\r\n     * @param {string} errorText\r\n     */\r\n    setConfigurationError(errorText) {\r\n        if (this.state.isConfigurationError !== errorText) {\r\n            this.setState({isConfigurationError: errorText});\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Renders the save and close buttons.\r\n     * @returns {JSX.Element | undefined} The JSX element.\r\n     */\r\n    renderSaveCloseButtons() {\r\n        if (this.state.bottomButtons) {\r\n            return <SaveCloseButtons\r\n                theme={this.state.theme}\r\n                noTextOnButtons={this.state.width === 'xs' || this.state.width === 'sm' || this.state.width === 'md'}\r\n                changed={this.state.changed}\r\n                onSave={(isClose) => this.onSave(isClose)}\r\n                onClose={() => GenericApp.onClose()}\r\n            />;\r\n        } else {\r\n            return null;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @private\r\n     * @param {Record<string, any>} obj\r\n     * @param {any} attrs\r\n     * @param {any} value\r\n     * @returns {boolean | undefined}\r\n     */\r\n    _updateNativeValue(obj, attrs, value) {\r\n        if (typeof attrs !== 'object') {\r\n            attrs = attrs.split('.');\r\n        }\r\n        const attr = attrs.shift();\r\n        if (!attrs.length) {\r\n            if (value && typeof value === 'object') {\r\n                if (JSON.stringify(obj[attr]) !== JSON.stringify(value)) {\r\n                    obj[attr] = value;\r\n                    return true;\r\n                }\r\n            } else if (obj[attr] !== value) {\r\n                obj[attr] = value;\r\n                return true;\r\n            } else {\r\n                return false;\r\n            }\r\n\r\n        } else {\r\n            obj[attr] = obj[attr] || {};\r\n            if (typeof obj[attr] !== 'object') {\r\n                throw new Error('attribute ' + attr + ' is no object, but ' + typeof obj[attr]);\r\n            }\r\n            return this._updateNativeValue(obj[attr], attrs, value);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Update the native value\r\n     * @param {string} attr The attribute name with dots as delimiter.\r\n     * @param {any} value The new value.\r\n     * @param {(() => void)} [cb] Callback which will be called upon completion.\r\n     */\r\n    updateNativeValue(attr, value, cb) {\r\n        const native = JSON.parse(JSON.stringify(this.state.native));\r\n        if (this._updateNativeValue(native, attr, value)) {\r\n            const changed = this.getIsChanged(native);\r\n            this.setState({native, changed}, cb);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Set the error text to be shown.\r\n     * @param {string | JSX.Element} text\r\n     */\r\n    showError(text) {\r\n        this.setState({errorText: text});\r\n    }\r\n\r\n    /**\r\n     * Sets the toast to be shown.\r\n     * @param {string} toast\r\n     */\r\n    showToast(toast) {\r\n        this.setState({toast});\r\n    }\r\n\r\n    /**\r\n     * Renders this component.\r\n     * @returns {JSX.Element} The JSX element.\r\n     */\r\n    render() {\r\n        if (!this.state.loaded) {\r\n            return <Loader theme={this.state.themeType}/>;\r\n        }\r\n\r\n        return <div className=\"App\">\r\n            {this.renderError()}\r\n            {this.renderToast()}\r\n            {this.renderSaveCloseButtons()}\r\n        </div>;\r\n    }\r\n}\r\n\r\nGenericApp.propTypes = {\r\n    adapterName: PropTypes.string, // (optional) name of adapter\r\n    onThemeChange: PropTypes.func, // (optional) called by theme change\r\n    socket: PropTypes.object, // (optional) socket information (host, port)\r\n    encryptedFields: PropTypes.array, // (optional) list of native attributes, that must be encrypted\r\n    bottomButtons: PropTypes.bool, // If the bottom buttons (Save/Close) must be shown\r\n};\r\n\r\nexport default GenericApp;\r\n"],"file":"GenericApp.js"}