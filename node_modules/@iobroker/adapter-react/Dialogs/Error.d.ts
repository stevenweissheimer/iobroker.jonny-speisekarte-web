export default _export;
export type DialogErrorProps = {
    /**
     * The key to identify this component.
     */
    key?: string;
    /**
     * The dialog title; default: Error (translated)
     */
    title?: string;
    /**
     * The dialog text.
     */
    text: string | JSX.Element;
    /**
     * Close handler.
     */
    onClose?: () => void;
    /**
     * The styling class names.
     */
    classes: {
        titleBackground: string;
        titleColor: string;
    };
};
/** @type {typeof DialogError} */
declare const _export: typeof DialogError;
/**
 * @typedef {object} DialogErrorProps
 * @property {string} [key] The key to identify this component.
 * @property {string} [title] The dialog title; default: Error (translated)
 * @property {string | JSX.Element} text The dialog text.
 * @property {() => void} [onClose] Close handler.
 * @property {{titleBackground: string; titleColor: string}} classes The styling class names.
 *
 * @extends {React.Component<DialogErrorProps>}
 */
declare class DialogError extends React.Component<DialogErrorProps, any, any> {
    constructor(props: DialogErrorProps | Readonly<DialogErrorProps>);
    constructor(props: DialogErrorProps, context: any);
    handleOk(): void;
}
declare namespace DialogError {
    namespace propTypes {
        const key: PropTypes.Requireable<string>;
        const onClose: PropTypes.Requireable<(...args: any[]) => any>;
        const title: PropTypes.Requireable<string>;
        const text: PropTypes.Requireable<string | PropTypes.ReactElementLike>;
        const icon: PropTypes.Requireable<object>;
    }
}
import React from "react";
import PropTypes from "prop-types";
