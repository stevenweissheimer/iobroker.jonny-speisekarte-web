{"version":3,"sources":["Theme.js"],"names":["step","toInt","hex","rgb","r","g","b","length","parseInt","substr","toHex","int","Math","round","toString","getElevation","color","overlayColor","elevation","overlay","getElevations","elevations","i","backgroundColor","Theme","type","theme","name","palette","background","paper","primary","main","secondary","expert","text","overrides","MuiAppBar","colorDefault","MuiLink","root","textTransform","transition","orange","MuiPaper","toolbar","height","saveToolbar","button","borderRadius"],"mappings":"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","sourcesContent":["import { createMuiTheme } from '@material-ui/core/styles';\r\n\r\nimport orange from '@material-ui/core/colors/orange';\r\n\r\nconst step = (16 - 5) / 23 / 100;\r\n\r\n/**\r\n * Convert hex color in the format '#rrggbb' or '#rgb' to an RGB object.\r\n * @param {string} hex\r\n * @returns {{r: number, g: number, b: number}}\r\n */\r\nfunction toInt(hex) {\r\n\r\n    const rgb = {\r\n        r: 0,\r\n        g: 0,\r\n        b: 0\r\n    };\r\n\r\n    if(hex.length === 7) {\r\n        rgb.r = parseInt(hex.substr(1, 2), 16);\r\n        rgb.g = parseInt(hex.substr(3, 2), 16);\r\n        rgb.b = parseInt(hex.substr(5, 2), 16);\r\n    } else if (hex.length === 4) {\r\n\r\n        const r = hex.substr(1, 1);\r\n        const g = hex.substr(2, 1);\r\n        const b = hex.substr(3, 1);\r\n\r\n        rgb.r = parseInt(r + r, 16);\r\n        rgb.g = parseInt(g + g, 16);\r\n        rgb.b = parseInt(b + b, 16);\r\n    }\r\n\r\n    return rgb;\r\n}\r\n\r\n/**\r\n * Convert an RGB object to a hex color string in the format '#rrggbb'.\r\n * @param {{r: number, g: number, b: number}} int\r\n * @returns {string}\r\n */\r\nfunction toHex(int) {\r\n    return '#' + Math.round(int.r).toString(16) + Math.round(int.g).toString(16) + Math.round(int.b).toString(16);\r\n}\r\n\r\n/**\r\n * @param {string} color color in the format '#rrggbb' or '#rgb'\r\n * @param {string} overlayColor overlay color in the format '#rrggbb' or '#rgb'\r\n * @param {number} elevation elevation as an integer starting with 1\r\n * @returns {string} the hex color string in the format '#rrggbb'\r\n */\r\nfunction getElevation(color, overlayColor, elevation) {\r\n    const rgb = toInt(color);\r\n    const overlay = toInt(overlayColor);\r\n\r\n    rgb.r += overlay.r * (0.05 + step * (elevation - 1));\r\n    rgb.g += overlay.g * (0.05 + step * (elevation - 1));\r\n    rgb.b += overlay.b * (0.05 + step * (elevation - 1));\r\n\r\n    return toHex(rgb);\r\n}\r\n\r\n/**\r\n * Get all 24 elevations of the given color and overlay.\r\n * @param {string} color color in the format '#rrggbb' or '#rgb'\r\n * @param {string} overlay overlay color in the format '#rrggbb' or '#rgb'\r\n * @returns {import('@material-ui/core/styles/withStyles').CSSProperties}\r\n */\r\nfunction getElevations(color, overlay) {\r\n    /** @type {import('@material-ui/core/styles/withStyles').CSSProperties} */\r\n    const elevations = {};\r\n\r\n    for(let i = 1; i <= 24; i++) {\r\n        elevations['elevation' + i] = {\r\n            backgroundColor: getElevation(color, overlay, i)\r\n        }\r\n    }\r\n\r\n    return elevations;\r\n}\r\n\r\n/**\r\n * The theme creation factory function.\r\n * @param {string} type\r\n * @returns {import('./types').Theme}\r\n */\r\nconst Theme = type => {\r\n    let theme;\r\n    if (type === 'dark') {\r\n        theme = {\r\n            name: type,\r\n            palette: {\r\n                type: 'dark',\r\n                background: {\r\n                    paper: '#121212',\r\n                    default: '#121212'\r\n                },\r\n                primary: {\r\n                    main: '#4dabf5'\r\n                },\r\n                secondary: {\r\n                    main: '#436a93'\r\n                },\r\n                expert: '#14bb00',\r\n                text: {\r\n                    primary: '#ffffff',\r\n                    secondary: '#ffffff'\r\n                }\r\n            },\r\n            overrides: {\r\n                MuiAppBar: {\r\n                    colorDefault: {\r\n                        backgroundColor: '#272727'\r\n                    }\r\n                },\r\n                MuiLink: {\r\n                    root: {\r\n                        textTransform: 'uppercase',\r\n                        transition: 'color .3s ease',\r\n                        color: orange[200],\r\n                        '&:hover': {\r\n                            color: orange[100]\r\n                        }\r\n                    }\r\n                },\r\n                MuiPaper: getElevations('#121212', '#fff')\r\n            }\r\n        };\r\n    } else if (type === 'blue') {\r\n        theme = {\r\n            name: type,\r\n            palette: {\r\n                type: 'dark',\r\n                background: {\r\n                    paper: '#151d21',\r\n                    default: '#151d21'\r\n                },\r\n                primary: {\r\n                    main: '#4dabf5'\r\n                },\r\n                secondary: {\r\n                    main: '#436a93'\r\n                },\r\n                expert: '#14bb00',\r\n                text: {\r\n                    primary: '#ffffff',\r\n                    secondary: '#ffffff'\r\n                }\r\n            },\r\n            overrides: {\r\n                MuiAppBar: {\r\n                    colorDefault: {\r\n                        backgroundColor: '#2a3135'\r\n                    }\r\n                },\r\n                MuiLink: {\r\n                    root: {\r\n                        textTransform: 'uppercase',\r\n                        transition: 'color .3s ease',\r\n                        color: orange[200],\r\n                        '&:hover': {\r\n                            color: orange[100]\r\n                        }\r\n                    }\r\n                },\r\n                MuiPaper: getElevations('#151d21', '#fff')\r\n            }\r\n        };\r\n    } else if (type === 'colored') {\r\n        theme = {\r\n            name: type,\r\n            palette: {\r\n                type: 'light',\r\n                primary: {\r\n                    main: '#3399CC'\r\n                },\r\n                secondary: {\r\n                    main: '#164477'\r\n                },\r\n                expert: '#96fc96'\r\n            },\r\n            overrides: {\r\n                MuiAppBar: {\r\n                    colorDefault: {\r\n                        backgroundColor: '#3399CC'\r\n                    }\r\n                },\r\n                MuiLink: {\r\n                    root: {\r\n                        textTransform: 'uppercase',\r\n                        transition: 'color .3s ease',\r\n                        color: orange[400],\r\n                        '&:hover': {\r\n                            color: orange[300]\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        };\r\n    } else {\r\n        theme = {\r\n            name: type,\r\n            palette: {\r\n                type: 'light',\r\n                primary: {\r\n                    main: '#3399CC'\r\n                },\r\n                secondary: {\r\n                    main: '#164477'\r\n                },\r\n                expert: '#14bb00'\r\n            },\r\n            overrides: {\r\n                MuiLink: {\r\n                    root: {\r\n                        textTransform: 'uppercase',\r\n                        transition: 'color .3s ease',\r\n                        color: orange[400],\r\n                        '&:hover': {\r\n                            color: orange[300]\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        };\r\n    }\r\n\r\n    theme.toolbar = {\r\n        height: 48\r\n    };\r\n\r\n    // add save toolbar\r\n    theme.saveToolbar = {\r\n        background: theme.palette.primary.main,\r\n        button: {\r\n            borderRadius: 3,\r\n            height: 32\r\n        }\r\n    };\r\n\r\n    return createMuiTheme(theme);\r\n};\r\n\r\nexport default Theme;\r\n"],"file":"Theme.js"}