declare var _default: React.ComponentType<Pick<PropTypes.InferProps<{
    data: PropTypes.Validator<any[]>;
    className: PropTypes.Requireable<string>;
    loading: PropTypes.Requireable<boolean>;
    name: PropTypes.Requireable<string>;
    columns: PropTypes.Validator<PropTypes.InferProps<{
        cellStyle: PropTypes.Requireable<object>;
        editComponent: PropTypes.Requireable<PropTypes.ReactElementLike>;
        field: PropTypes.Requireable<string>;
        headerStyle: PropTypes.Requireable<object>;
        hidden: PropTypes.Requireable<boolean>;
        lookup: PropTypes.Requireable<object>;
        editable: PropTypes.Requireable<boolean>;
        title: PropTypes.Requireable<string>;
        type: PropTypes.Requireable<string>;
    }>[]>;
    noSort: PropTypes.Requireable<boolean>;
    onUpdate: PropTypes.Requireable<(...args: any[]) => any>;
    onDelete: PropTypes.Requireable<(...args: any[]) => any>;
    noAdd: PropTypes.Requireable<boolean>;
    themeType: PropTypes.Requireable<string>;
    glowOnChange: PropTypes.Requireable<boolean>;
    socket: PropTypes.Requireable<object>;
}>, "loading" | "data" | "columns" | "name" | "className" | "socket" | "themeType" | "noSort" | "onUpdate" | "onDelete" | "noAdd" | "glowOnChange"> & import("@material-ui/core/styles").StyledComponentProps<"table" | "cell" | "tableContainer" | "rowMainWithChildren" | "rowMainWithoutChildren" | "rowNoEdit" | "cellExpand" | "cellButton" | "cellHeader" | "width_name_nicknames" | "width_ioType" | "width_type" | "width_displayTraits" | "width_roomHint" | "rowSecondary" | "cellSecondary" | "visuallyHidden" | "fieldEditWithButton" | "fieldEdit" | "fieldButton" | "colorDialog" | "subText" | "glow">>;
export default _default;
import PropTypes from "prop-types";
import React from "react";
