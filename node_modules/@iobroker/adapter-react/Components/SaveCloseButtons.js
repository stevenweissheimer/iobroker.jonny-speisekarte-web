"use strict";

function _typeof(obj) { "@babel/helpers - typeof"; if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = void 0;

var _react = _interopRequireDefault(require("react"));

var _withStyles = _interopRequireDefault(require("@material-ui/core/styles/withStyles"));

var _Fab = _interopRequireDefault(require("@material-ui/core/Fab"));

var _propTypes = _interopRequireDefault(require("prop-types"));

var _Toolbar = _interopRequireDefault(require("@material-ui/core/Toolbar"));

var _i18n = _interopRequireDefault(require("../i18n"));

var _Save = _interopRequireDefault(require("@material-ui/icons/Save"));

var _Close = _interopRequireDefault(require("@material-ui/icons/Close"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }

function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }

function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }

function _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === "object" || typeof call === "function")) { return call; } return _assertThisInitialized(self); }

function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }

function _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }

var styles = function styles(theme) {
  return {
    buttonIcon: {
      marginRight: 8
    }
  };
};
/**
 * @typedef {object} LogoProps
 * @property {boolean} noTextOnButtons Are the buttons without text
 * @property {any} theme Theme object (from this.state.theme)
 * @property {boolean} isIFrame bottom position 0 or 38 for iFrame
 * @property {function} onSave on Save handler
 * @property {function} onClose on Close handler
 *
 * @extends {React.Component<LogoProps>}
 */


var SaveCloseButtons = /*#__PURE__*/function (_React$Component) {
  _inherits(SaveCloseButtons, _React$Component);

  var _super = _createSuper(SaveCloseButtons);

  function SaveCloseButtons(props) {
    var _this;

    _classCallCheck(this, SaveCloseButtons);

    _this = _super.call(this, props);

    try {
      _this.isIFrame = window.self !== window.top;
    } catch (e) {
      _this.isIFrame = true;
    }

    return _this;
  }

  _createClass(SaveCloseButtons, [{
    key: "render",
    value: function render() {
      var _this2 = this;

      var noTextOnButtons = this.props.noTextOnButtons;
      var buttonStyle = {
        borderRadius: this.props.theme.saveToolbar.button.borderRadius || 3,
        height: this.props.theme.saveToolbar.button.height || 32
      };
      var style = {
        bottom: this.isIFrame ? 38 : 0,
        left: this.props.paddingLeft || 0,
        right: 0,
        position: 'absolute',
        background: this.props.theme.saveToolbar.background
      };

      if (this.props.dense) {
        style.minHeight = 48;
      }

      if (this.props.error) {
        buttonStyle.border = '1px solid red';
      }

      return /*#__PURE__*/_react["default"].createElement(_Toolbar["default"], {
        position: "absolute",
        style: style
      }, /*#__PURE__*/_react["default"].createElement(_Fab["default"], {
        variant: "extended",
        "aria-label": "Save",
        disabled: !this.props.changed || this.props.error,
        onClick: function onClick() {
          return _this2.props.onSave(false);
        },
        style: buttonStyle
      }, /*#__PURE__*/_react["default"].createElement(_Save["default"], {
        className: !noTextOnButtons ? this.props.classes.buttonIcon : ''
      }), !noTextOnButtons && _i18n["default"].t('ra_Save')), /*#__PURE__*/_react["default"].createElement(_Fab["default"], {
        variant: "extended",
        "aria-label": "Save and close",
        disabled: !this.props.changed || this.props.error,
        onClick: function onClick() {
          return _this2.props.onSave(true);
        },
        style: Object.assign({}, buttonStyle, {
          marginLeft: 10
        })
      }, /*#__PURE__*/_react["default"].createElement(_Save["default"], {
        className: !noTextOnButtons ? this.props.classes.buttonIcon : ''
      }), !noTextOnButtons ? _i18n["default"].t('ra_Save and close') : '+', noTextOnButtons && /*#__PURE__*/_react["default"].createElement(_Close["default"], null)), /*#__PURE__*/_react["default"].createElement("div", {
        style: {
          flexGrow: 1
        }
      }), /*#__PURE__*/_react["default"].createElement(_Fab["default"], {
        variant: "extended",
        "aria-label": "Close",
        onClick: function onClick() {
          return _this2.props.onClose();
        },
        style: buttonStyle
      }, /*#__PURE__*/_react["default"].createElement(_Close["default"], {
        className: !noTextOnButtons ? this.props.classes.buttonIcon : ''
      }), !noTextOnButtons && _i18n["default"].t('ra_Close')));
    }
  }]);

  return SaveCloseButtons;
}(_react["default"].Component);

SaveCloseButtons.propTypes = {
  dense: _propTypes["default"].bool,
  paddingLeft: _propTypes["default"].number,
  noTextOnButtons: _propTypes["default"].bool,
  theme: _propTypes["default"].object,
  isIFrame: _propTypes["default"].bool,
  changed: _propTypes["default"].bool.isRequired,
  error: _propTypes["default"].bool,
  onSave: _propTypes["default"].func.isRequired,
  onClose: _propTypes["default"].func.isRequired
};
/** @type {typeof SaveCloseButtons} */

var _export = (0, _withStyles["default"])(styles)(SaveCloseButtons);

var _default = _export;
exports["default"] = _default;
//# sourceMappingURL=SaveCloseButtons.js.map
