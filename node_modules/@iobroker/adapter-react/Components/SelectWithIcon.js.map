{"version":3,"sources":["SelectWithIcon.js"],"names":["styles","theme","different","opacity","icon","width","height","marginRight","SelectWithIcon","props","wordDifferent","t","list","Array","isArray","map","obj","name","Utils","getObjectNameFromObj","lang","replace","value","_id","common","color","Object","values","unshift","state","item","find","it","removePrefix","style","undefined","backgroundColor","getInvertedColor","themeType","fullWidth","className","label","disabled","classes","root","el","target","pos","i","length","clone","splice","setState","onChange","Component","propTypes","PropTypes","func","string","isRequired","bool","oneOfType","array","object"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withStyles } from '@material-ui/core/styles';\r\n\r\nimport {FormControl, InputLabel, MenuItem, Select} from '@material-ui/core';\r\n\r\nimport Icon from '@iobroker/adapter-react/Components/Icon';\r\nimport Utils from '@iobroker/adapter-react/Components/Utils';\r\n\r\nconst styles = theme => ({\r\n    different: {\r\n        opacity: 0.5\r\n    },\r\n    icon: {\r\n        width: 16,\r\n        height: 16,\r\n        marginRight: 8\r\n    }\r\n});\r\n\r\nclass SelectWithIcon extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        if (this.props.different) {\r\n            this.wordDifferent = this.props.t(this.props.different);\r\n        }\r\n\r\n        let list = [];\r\n        if (Array.isArray(this.props.list)) {\r\n            list = this.props.list.map(obj => ({\r\n                name: Utils.getObjectNameFromObj(obj, this.props.lang).replace('system.group.', ''),\r\n                value: obj._id,\r\n                icon: obj.common?.icon,\r\n                color: obj.common?.color,\r\n            }))\r\n        } else {\r\n            Object.values(this.props.list).map(obj => ({\r\n                name: Utils.getObjectNameFromObj(obj, this.props.lang).replace('system.group.', ''),\r\n                value: obj._id,\r\n                icon: obj.common?.icon,\r\n                color: obj.common?.color,\r\n            }));\r\n        }\r\n\r\n        if (this.props.different && this.props.value === this.props.different) {\r\n            list.unshift({value: this.props.different, name: this.wordDifferent});\r\n        }\r\n\r\n        this.state = {\r\n            list\r\n        };\r\n    }\r\n\r\n    render() {\r\n        const item = this.state.list.find(it => it.value === this.props.value || (this.props.removePrefix && it.value.replace(this.props.removePrefix, '') === this.props.value));\r\n\r\n        const style = this.props.value === this.props.different ? {} :\r\n            {\r\n                color: item?.color || undefined,\r\n                backgroundColor: Utils.getInvertedColor(item?.color, this.props.themeType)\r\n            };\r\n\r\n        return <FormControl fullWidth={!!this.props.fullWidth} style={this.props.style} className={this.props.className}>\r\n            <InputLabel>{this.props.label}</InputLabel>\r\n            <Select\r\n                disabled={this.props.disabled}\r\n                value={this.props.value}\r\n                renderValue={value => <span>{item?.icon ? <Icon src={item?.icon} className={this.props.classes.icon} /> : null}{item?.name}</span>}\r\n                classes={{root: this.props.value === this.props.different ? this.props.classes.different : ''}}\r\n                style={style}\r\n                onChange={el => {\r\n                    if (this.props.different && el.target.value !== this.props.different) {\r\n                        let pos = null;\r\n                        for (let i = 0; i < this.state.list.length; i++) {\r\n                            if (this.state.list[i].value === this.props.different) {\r\n                                pos = i;\r\n                                break;\r\n                            }\r\n                        }\r\n                        if (pos !== null) {\r\n                            const list = Utils.clone(this.state.list);\r\n                            list.splice(pos, 1);\r\n                            return this.setState({list}, () => this.props.onChange(el.target.value));\r\n                        }\r\n                    }\r\n\r\n                    this.props.onChange(this.props.removePrefix ? el.target.value.replace(this.props.removePrefix, '') : el.target.value);\r\n                }}\r\n            >\r\n                {this.state.list.map(el => <MenuItem\r\n                    className={this.props.different && el.value === this.props.different ? this.props.classes.different : ''}\r\n                    style={this.props.different && el.value === this.props.different ? {} : { color: el.color || undefined, backgroundColor: Utils.getInvertedColor(el.color, this.props.themeType) }}\r\n                    key={el.value}\r\n                    value={el.value}\r\n                >\r\n                    {el.icon ? <Icon src={el.icon} className={this.props.classes.icon} /> : null}\r\n                    {el.name}\r\n                </MenuItem>)}\r\n            </Select>\r\n        </FormControl>;\r\n    }\r\n}\r\n\r\nSelectWithIcon.propTypes = {\r\n    t: PropTypes.func,\r\n    lang: PropTypes.string,\r\n    themeType: PropTypes.string,\r\n    value: PropTypes.string,\r\n    onChange: PropTypes.func.isRequired,\r\n    disabled: PropTypes.bool,\r\n    list: PropTypes.oneOfType([PropTypes.array, PropTypes.object]),\r\n    label: PropTypes.string,\r\n    different: PropTypes.oneOfType([PropTypes.string, PropTypes.bool]),\r\n    fullWidth: PropTypes.bool,\r\n    className: PropTypes.string,\r\n    style: PropTypes.object,\r\n    removePrefix: PropTypes.string,\r\n};\r\n\r\nexport default withStyles(styles)(SelectWithIcon);"],"file":"SelectWithIcon.js"}