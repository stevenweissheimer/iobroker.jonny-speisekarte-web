{"version":3,"sources":["IconPicker.js"],"names":["ICONS","icon","IconLampTable","color","name","IconLampCeiling","styles","theme","div","width","lineHeight","dialogContent","overflow","dialogTab","height","textField","textFieldWithButton","verticalAlign","textDense","marginTop","marginBottom","buttonIcon","marginRight","spacing","margin","palette","type","grid","padding","gridIcon","background","primary","dark","textAlign","selectButton","iconSelected","main","light","imagePreviewDiv","display","imagePreview","PRESET_PREFIX","IconPicker","props","state","value","dialogValue","showDialog","selectedTab","startsWith","imgError","imagePrefix","item","i","Utils","clsx","classes","endsWith","setState","onDialogClose","map","renderOneIcon","src","fetch","then","response","text","svg","len","substring","length","atob","m","match","e","console","warn","I18n","t","getLanguage","socket","path","isDoubleClick","find","fetchIcon","replace","valueSvg","window","btoa","dialogInitialValue","onChange","key","renderPredefinedIcons","renderFileBrowser","style","className","disabled","label","target","endAdornment","undefined","id","getIdFromSrc","renderDialog","React","Component","propTypes","PropTypes","string","bool","func","isRequired","object","_export"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport {withStyles} from '@material-ui/core/styles';\r\n\r\nimport TextField from '@material-ui/core/TextField';\r\nimport I18n from '@iobroker/adapter-react/i18n';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Button from '@material-ui/core/Button';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport Tabs from '@material-ui/core/Tabs';\r\nimport Tab from '@material-ui/core/Tab';\r\nimport Grid from '@material-ui/core/Grid';\r\n\r\nimport ClearIcon from '@material-ui/icons/Close';\r\nimport CancelIcon from '@material-ui/icons/Close';\r\nimport CheckIcon from '@material-ui/icons/Check';\r\nimport SelectIcon from '@material-ui/icons/ViewModule';\r\n\r\nimport Image from './Image';\r\nimport FileBrowser from './FileBrowser';\r\nimport Utils from './Utils';\r\n\r\nimport IconLampTable from '../assets/lamp_table.svg';\r\nimport IconLampCeiling from '../assets/lamp_ceiling.svg';\r\n\r\nconst ICONS = [\r\n    {icon: IconLampTable,   color: '#FFFFFF', name: 'Table lamp'},\r\n    {icon: IconLampCeiling, color: '#FFFFFF', name: 'Ceiling lamp'},\r\n];\r\n\r\nconst styles = theme => ({\r\n    div: {\r\n        width: '100%',\r\n        lineHeight: '48px',\r\n    },\r\n    dialogContent: {\r\n        overflow: 'hidden',\r\n    },\r\n    dialogTab: {\r\n        height: 500,\r\n        overflow: 'hidden',\r\n    },\r\n    textField: {\r\n\r\n    },\r\n    textFieldWithButton: {\r\n        width: 'calc(100% - 102px)',\r\n        verticalAlign: 'bottom'\r\n    },\r\n    textDense: {\r\n        marginTop: 0,\r\n        marginBottom: 0,\r\n    },\r\n    buttonIcon: {\r\n        marginRight: theme.spacing(1),\r\n    },\r\n    icon: {\r\n        width: 32,\r\n        height: 32,\r\n        margin: theme.spacing(1),\r\n        color: theme.palette.type === 'dark' ? '#FFF' : '#000'\r\n    },\r\n    grid: {\r\n        padding: theme.spacing(2)\r\n    },\r\n    gridIcon: {\r\n        '&:hover': {\r\n            background: theme.palette.primary.dark,\r\n        },\r\n        textAlign: 'center',\r\n    },\r\n    selectButton: {\r\n        verticalAlign: 'bottom'\r\n    },\r\n    iconSelected: {\r\n        background: theme.palette.primary.main,\r\n        '&:hover': {\r\n            background: theme.palette.primary.light,\r\n        }\r\n    },\r\n    imagePreviewDiv: {\r\n        display: 'inline-block',\r\n        marginRight: theme.spacing(1),\r\n        verticalAlign: 'bottom',\r\n    },\r\n    imagePreview: {\r\n        width: 32,\r\n        height: 32,\r\n        color: theme.palette.type === 'dark' ? '#FFF' : '#000',\r\n    }\r\n});\r\n\r\nconst PRESET_PREFIX = 'preset:';\r\n\r\n/**\r\n * @typedef {object} IconPickerProps\r\n * @property {string} [key] The key to identify this component.\r\n * @property {string} [color] The color.\r\n * @property {string} [value] The value.\r\n * @property {string} [label] The label.\r\n * @property {boolean} [disabled] Set to true to disable the icon picker.\r\n * @property {(icon: string) => void} onChange The icon change callback.\r\n * @property {import('../Connection').default} socket The socket connection.\r\n * @property {string} [imagePrefix] The image prefix (default: './files/')\r\n * @property {React.CSSProperties} [style] Additional styling for this component.\r\n * @property {string} [className] The CSS class name.\r\n *\r\n * @extends {React.Component<IconPickerProps>}\r\n */\r\nclass IconPicker extends React.Component {\r\n    /**\r\n     * @param {Readonly<IconPickerProps>} props\r\n     */\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            color: this.props.color || '',\r\n            value: this.props.value || '',\r\n            dialogValue: '',\r\n            showDialog: false,\r\n            selectedTab: this.props.value && !this.props.value.startsWith('data:image/') ? 1 : 0,\r\n            imgError: false,\r\n        };\r\n        this.imagePrefix = this.props.imagePrefix || './files/';\r\n    }\r\n\r\n    /*static getDerivedStateFromProps(props, state) {\r\n        const newState = {};\r\n        let changed = false;\r\n\r\n        if (props && state && props.value !== state.value) {\r\n            newState.value = props.value;\r\n            changed = true;\r\n        }\r\n\r\n        if (props && state && props.color !== state.color) {\r\n            newState.color = props.color;\r\n            changed = true;\r\n        }\r\n\r\n        return changed ? newState : null;\r\n    }*/\r\n\r\n    renderOneIcon(item, i) {\r\n        return <Grid\r\n             item\r\n             xs\r\n             key={item.name || i}\r\n             className={Utils.clsx(this.props.classes.gridIcon, this.state.dialogValue && this.state.dialogValue.startsWith(PRESET_PREFIX) && this.state.dialogValue.endsWith(item.name) && this.props.classes.iconSelected)}\r\n             onClick={() => this.setState({dialogValue: PRESET_PREFIX + item.name})}\r\n             onDoubleClick={() => this.setState({dialogValue: PRESET_PREFIX + item.name}, () => this.onDialogClose(this.state.dialogValue))}\r\n        >\r\n            <img className={this.props.classes.icon} src={item.icon} alt={item.name} style={item.color ? {color: item.color} : {}}/>\r\n        </Grid>;\r\n    }\r\n\r\n    renderPredefinedIcons() {\r\n        return <Grid container spacing={2} justify=\"center\" className={this.props.classes.grid}>{\r\n            ICONS.map((item, i) => this.renderOneIcon(item, i))\r\n        }</Grid>;\r\n    }\r\n\r\n    fetchIcon(src) {\r\n        return fetch(src)\r\n            .then(response => response.text())\r\n    }\r\n\r\n    getIdFromSrc(svg) {\r\n        const len = 'data:image/svg+xml;base64, ';\r\n        if (!svg || !svg.startsWith(len)) {\r\n            return null;\r\n        }\r\n        svg = svg.substring(len.length);\r\n        try {\r\n            svg = atob(svg);\r\n            const m = svg.match(/<svg id=\"([^\"]+)\"/);\r\n            return m ? m[1] : null;\r\n        } catch (e) {\r\n            console.warn('Cannot decode ' + svg);\r\n        }\r\n        return null;\r\n    }\r\n\r\n    renderFileBrowser() {\r\n        return <FileBrowser\r\n            t={I18n.t}\r\n            imagePrefix={this.imagePrefix}\r\n            lang={I18n.getLanguage()}\r\n            socket={this.props.socket}\r\n            ready={true}\r\n            showExpertButton={true}\r\n            showToolbar={true}\r\n            allowUpload={true}\r\n            allowDownload={false}\r\n            allowCreateFolder={true}\r\n            allowDelete={false}\r\n            allowView={true}\r\n            showViewTypeButton={true}\r\n            filterFiles={['png', 'svg', 'bmp', 'jpg', 'jpeg']}\r\n            onSelect={(path, isDoubleClick) =>\r\n                this.setState({dialogValue: path}, () =>\r\n                    isDoubleClick && this.onDialogClose(path))}\r\n        />;\r\n    }\r\n\r\n    onDialogClose(value) {\r\n        if (value) {\r\n            if (value.startsWith(PRESET_PREFIX)) {\r\n                value = value.substring(7);\r\n                const item = ICONS.find(item => item.name === value);\r\n                if (item) {\r\n                    //fetch icon\r\n                    this.fetchIcon(item.icon)\r\n                        .then(svg => {\r\n                            svg = svg.replace('<svg ', '<svg id=\"' + value + '\" ');\r\n                            const valueSvg = 'data:image/svg+xml;base64, ' + window.btoa(svg);\r\n                            this.setState({value: valueSvg, showDialog: false, imgError: false, dialogValue: '', dialogInitialValue: ''}, () =>\r\n                                this.props.onChange(valueSvg));\r\n                        });\r\n                } else {\r\n                    this.setState({value: '', showDialog: false, imgError: false, dialogValue: '', dialogInitialValue: ''}, () =>\r\n                        this.props.onChange(''));\r\n                }\r\n            } else {\r\n                // it is path to image\r\n                this.setState({value, showDialog: false, imgError: false, dialogValue: '', dialogInitialValue: ''}, () =>\r\n                    this.props.onChange(value));\r\n            }\r\n        } else {\r\n            this.setState({showDialog: false});\r\n        }\r\n    }\r\n\r\n    renderDialog() {\r\n        if (!this.state.showDialog) {\r\n            return null;\r\n        }\r\n        return <Dialog\r\n            key={this.props.key}\r\n            open={true}\r\n            fullWidth\r\n            maxWidth=\"lg\"\r\n            onClose={() => this.setState({showDialog: false})}\r\n        >\r\n            <DialogTitle>{I18n.t('Select icon...')}</DialogTitle>\r\n            <DialogContent className={this.props.classes.dialogContent}>\r\n                <Tabs value={this.state.selectedTab} onChange={(e, selectedTab) => this.setState({selectedTab})}>\r\n                    <Tab label={I18n.t('Predefined')} />\r\n                    <Tab label={I18n.t('User defined')} />\r\n                </Tabs>\r\n                {this.state.selectedTab === 0 && <div className={this.props.classes.dialogTab}>\r\n                    {this.renderPredefinedIcons()}\r\n                </div>}\r\n                {this.state.selectedTab === 1 && <div className={this.props.classes.dialogTab}>\r\n                    {this.renderFileBrowser()}\r\n                </div>}\r\n            </DialogContent>\r\n            <DialogActions>\r\n                <Button onClick={() => this.onDialogClose()}><CancelIcon className={this.props.classes.buttonIcon}/>{I18n.t('Cancel')}</Button>\r\n                <Button onClick={() => this.onDialogClose(this.state.dialogValue)}\r\n                        color=\"primary\"\r\n                        disabled={!this.state.dialogValue || this.state.dialogInitialValue === this.state.dialogValue}\r\n                        autoFocus\r\n                >\r\n                    <CheckIcon className={this.props.classes.buttonIcon}/>{I18n.t('Select')}\r\n                </Button>\r\n            </DialogActions>\r\n        </Dialog>\r\n    }\r\n\r\n    render() {\r\n        return <div\r\n            key={this.props.key}\r\n            style={this.props.style || {}}\r\n            className={ Utils.clsx(this.props.classes.div, this.props.className)}\r\n        >\r\n            <div className={this.props.classes.imagePreviewDiv}>\r\n                <Image\r\n                    imagePrefix={this.imagePrefix}\r\n                    showError={true}\r\n                    color={this.state.color}\r\n                    className={this.props.classes.imagePreview}\r\n                    src={this.state.value}\r\n                    alt=\"preview\"\r\n                />\r\n            </div>\r\n            <TextField\r\n                disabled={!!this.props.disabled}\r\n                margin=\"dense\"\r\n                label={this.props.label || I18n.t('Icon')}\r\n                value={this.state.value}\r\n                onChange={e => {\r\n                    const value = e.target.value;\r\n                    this.setState({value, imgError: false}, () => this.props.onChange(value));\r\n                }}\r\n                type=\"text\"\r\n                InputProps={{\r\n                    endAdornment: this.state.value ? (\r\n                        <IconButton\r\n                            onClick={() => {\r\n                                this.setState({value: '', imgError: false}, () => this.props.onChange(''));\r\n                            }}>\r\n                            <ClearIcon />\r\n                        </IconButton>\r\n                    ) : undefined,\r\n                }}\r\n                className={this.props.classes.textFieldWithButton}\r\n            />\r\n            <IconButton\r\n                disabled={!!this.props.disabled}\r\n                className={this.props.classes.selectButton}\r\n                onClick={() => {\r\n                    let id = this.getIdFromSrc(this.state.value);\r\n                    if (id) {\r\n                        id = PRESET_PREFIX + id;\r\n                    } else {\r\n                        id = this.state.value;\r\n                    }\r\n                    this.setState({showDialog: true, dialogValue: id, dialogInitialValue: id});\r\n                }}\r\n            >\r\n                <SelectIcon/>\r\n            </IconButton>\r\n            {this.renderDialog()}\r\n        </div>\r\n    }\r\n}\r\n\r\nIconPicker.propTypes = {\r\n    key: PropTypes.string,\r\n    color: PropTypes.string,\r\n    value: PropTypes.string,\r\n    label: PropTypes.string,\r\n    disabled: PropTypes.bool,\r\n    onChange: PropTypes.func.isRequired,\r\n    socket: PropTypes.object.isRequired,\r\n    imagePrefix: PropTypes.string,\r\n};\r\n\r\n/** @type {typeof IconPicker} */\r\nconst _export = withStyles(styles)(IconPicker);\r\nexport default _export;"],"file":"IconPicker.js"}