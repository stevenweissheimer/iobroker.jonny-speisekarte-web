{"version":3,"sources":["Router.js"],"names":["Router","props","onHashChangedBound","onHashChanged","bind","window","addEventListener","removeEventListener","hash","location","replace","parts","split","map","item","decodeURIComponent","e","console","error","tab","dialog","id","arg","getLocation","undefined","React","Component"],"mappings":"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","sourcesContent":["// please do not delete React, as without it other projects could not be compiled: ReferenceError: React is not defined\r\nimport React from 'react';\r\n\r\n/**\r\n * @template P Type of the properties object.\r\n * @template S Type of the internal state object.\r\n * @extends {React.Component<P, S>}\r\n */\r\nclass Router extends React.Component {\r\n    /**\r\n     * @param {P} props The React properties of this component.\r\n     */\r\n    constructor(props) {\r\n        super(props);\r\n        this.onHashChangedBound = this.onHashChanged.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        window.addEventListener('hashchange', this.onHashChangedBound);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        window.removeEventListener('hashchange', this.onHashChangedBound);\r\n    }\r\n\r\n    onHashChanged() {\r\n        // override this function\r\n    }\r\n\r\n    /**\r\n     * Gets the location object.\r\n     * @returns {{ tab: string; dialog: string; id: string; arg: string; }}\r\n     */\r\n    static getLocation() {\r\n        let hash = window.location.hash;\r\n        hash = hash.replace(/^#/, '');\r\n        const parts = hash.split('/').map(item => {\r\n            try {\r\n                return item ? decodeURIComponent(item) : ''\r\n            } catch (e) {\r\n                console.error('Router: Cannot decode ' + item);\r\n                return item || '';\r\n            }\r\n        });\r\n        // #tabName/dialogName/deviceId\r\n        return {\r\n            tab:    parts[0] || '',\r\n            dialog: parts[1] || '',\r\n            id:     parts[2] || '',\r\n            arg:    parts[3] || ''\r\n        };\r\n    }\r\n\r\n    /**\r\n     * Navigate to a new location. Any parameters that are not set will be taken from the current location.\r\n     * @param {string | undefined} [tab]\r\n     * @param {string | undefined} [dialog]\r\n     * @param {string | undefined} [id]\r\n     * @param {string | undefined} [arg]\r\n     */\r\n    static doNavigate(tab, dialog, id, arg) {\r\n        let hash = '';\r\n        const location = Router.getLocation();\r\n        if (arg !== undefined && !id) {\r\n            id = location.id;\r\n        }\r\n        if (id && !dialog) {\r\n            dialog = location.dialog;\r\n        }\r\n        if (dialog && !tab) {\r\n            tab = location.tab;\r\n        } else\r\n        if (tab === null) {\r\n            tab = location.tab;\r\n        }\r\n\r\n        if (tab) {\r\n            hash = '#' + tab;\r\n            if (dialog) {\r\n                hash += '/' + dialog;\r\n\r\n                if (id) {\r\n                    hash += '/' + id;\r\n                    if (arg !== undefined) {\r\n                        hash += '/' + arg;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        if (window.location.hash !== hash) {\r\n            window.location.hash = hash;\r\n        }\r\n    }\r\n}\r\n\r\nexport default Router;"],"file":"Router.js"}