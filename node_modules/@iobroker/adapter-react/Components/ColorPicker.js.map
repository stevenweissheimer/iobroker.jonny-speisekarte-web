{"version":3,"sources":["ColorPicker.js"],"names":["styles","theme","color","width","height","borderRadius","delButton","marginTop","swatch","padding","background","boxShadow","display","cursor","verticalAlign","popover","position","zIndex","cover","top","right","bottom","left","textDense","marginBottom","ColorPicker","props","setState","displayColorPicker","state","onChange","getColor","style","openAbove","key","Object","assign","className","disabled","name","root","classes","e","handleChange","target","value","opacity","handleClick","handleClose","pColor","sColor","isHex","rgb","r","toString","padStart","g","b","a","rgb2hex","m","match","length","parseInt","React","Component","propTypes","PropTypes","string","bool","func","isRequired","object","_export"],"mappings":"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","sourcesContent":["/**\r\n * Copyright 2018-2020 bluefox <dogafox@gmail.com>\r\n *\r\n * Licensed under the Creative Commons Attribution-NonCommercial License, Version 4.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n * https://creativecommons.org/licenses/by-nc/4.0/legalcode.txt\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n **/\r\nimport React from 'react';\r\nimport {ChromePicker} from 'react-color';\r\nimport PropTypes from 'prop-types';\r\nimport {withStyles} from '@material-ui/core/styles';\r\n\r\nimport TextField from '@material-ui/core/TextField';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport IconDelete from '@material-ui/icons/Delete';\r\n\r\nconst styles = theme => ({\r\n    color: {\r\n        width: 36,\r\n        height: 14,\r\n        borderRadius: 2,\r\n    },\r\n    delButton: {\r\n        //width: 32,\r\n        //height: 32,\r\n        marginTop: 16,\r\n    },\r\n    swatch: {\r\n        marginTop: 16,\r\n        padding: 5,\r\n        background: '#fff',\r\n        borderRadius: 1,\r\n        boxShadow: '0 0 0 1px rgba(0,0,0,.1)',\r\n        display: 'inline-block',\r\n        cursor: 'pointer',\r\n        verticalAlign: 'middle'\r\n    },\r\n    popover: {\r\n        position: 'absolute',\r\n        zIndex: 2,\r\n    },\r\n    cover: {\r\n        position: 'fixed',\r\n        top: 0,\r\n        right: 0,\r\n        bottom: 0,\r\n        left: 0,\r\n    },\r\n    textDense: {\r\n        marginTop: 0,\r\n        marginBottom: 0,\r\n    }\r\n});\r\n\r\n/**\r\n * @typedef {object} Rgb\r\n * @property {number} r The red component of the color (0-255).\r\n * @property {number} g The green component of the color (0-255).\r\n * @property {number} b The blue component of the color (0-255).\r\n * @property {number} a The alpha component of the color (0-255).\r\n * \r\n * @typedef {string | Rgb | { rgb: Rgb }} Color Definition of a color.\r\n * \r\n * @typedef {object} ColorPickerProps\r\n * @property {string} [key] The key to identify this component.\r\n * @property {boolean} [disabled] Set to true to disable the color picker.\r\n * @property {Color} [color] The selected color.\r\n * @property {(rgba: string) => void} [onChange] The color change callback.\r\n * @property {string} [name] The name.\r\n * @property {React.CSSProperties} [style] Additional styling for this component.\r\n * @property {string} [className] The CSS class name.\r\n * @property {boolean} [openAbove] Open the color picker above the field?\r\n * \r\n * @extends {React.Component<ColorPickerProps>}\r\n */\r\nclass ColorPicker extends React.Component {\r\n    /**\r\n     * @param {Readonly<ColorPickerProps>} props\r\n     */\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            displayColorPicker: false,\r\n            color: this.props.color,\r\n        };\r\n    }\r\n\r\n    /**\r\n     * Get the state derived from the given properties and state.\r\n     * @param {{ color: Color; }} props\r\n     * @param {{ color: Color; }} state\r\n     */\r\n    static getDerivedStateFromProps(props, state) {\r\n        const pColor = ColorPicker.getColor(props.color);\r\n        const sColor = ColorPicker.getColor(state.color);\r\n        if (pColor !== sColor) {\r\n            return {color: props.color}\r\n        } else {\r\n            return null;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @private\r\n     */\r\n    handleClick = () => {\r\n        this.setState({displayColorPicker: !this.state.displayColorPicker});\r\n    };\r\n\r\n    /**\r\n     * @private\r\n     */\r\n    handleClose = () => {\r\n        this.setState({displayColorPicker: false});\r\n    };\r\n\r\n    /**\r\n     * Convert the given color to hex ('#rrggbb') or rgba ('rgba(r,g,b,a)') format.\r\n     * @param {Color} [color]\r\n     * @param {boolean} [isHex] The returning string should be in hex format\r\n     * @returns {string} the hex or rgba representation of the given color.\r\n     */\r\n    static getColor(color, isHex) {\r\n        if (color && typeof color === 'object') {\r\n            if (color.rgb) {\r\n                if (isHex) {\r\n                    return '#' + color.rgb.r.toString(16).padStart(2, '0') + color.rgb.g.toString(16).padStart(2, '0') + color.rgb.b.toString(16).padStart(2, '0');\r\n                } else {\r\n                    return 'rgba(' + color.rgb.r + ',' + color.rgb.g + ',' + color.rgb.b + ',' + color.rgb.a + ')';\r\n                }\r\n            } else {\r\n                if (isHex) {\r\n                    return '#' + color.r.toString(16).padStart(2, '0') + color.g.toString(16).padStart(2, '0') + color.b.toString(16).padStart(2, '0');\r\n                } else {\r\n                    return 'rgba(' + color.r + ',' + color.g + ',' + color.b + ',' + color.a + ')';\r\n                }\r\n            }\r\n        } else {\r\n            return isHex ? ColorPicker.rgb2hex(color || '') : color || '';\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Convert rgb() or rgba() format to hex format #rrggbb.\r\n     * @param {string} rgb \r\n     * @returns {string}\r\n     */\r\n    static rgb2hex(rgb){\r\n        const m = rgb.match(/^rgba?[\\s+]?\\([\\s+]?(\\d+)[\\s+]?,[\\s+]?(\\d+)[\\s+]?,[\\s+]?(\\d+)[\\s+]?/i);\r\n\r\n        return m && m.length === 4 ? '#' +\r\n            parseInt(m[1],10).toString(16).padStart(2, '0') +\r\n            parseInt(m[2],10).toString(16).padStart(2, '0') +\r\n            parseInt(m[3],10).toString(16).padStart(2, '0') : rgb;\r\n    }\r\n\r\n    /**\r\n     * @private\r\n     */\r\n    handleChange = color => {\r\n        this.setState({color});\r\n        this.props.onChange && this.props.onChange(ColorPicker.getColor(color));\r\n    };\r\n\r\n    render() {\r\n        const color = ColorPicker.getColor(this.state.color);\r\n        let style = {};\r\n        if (this.state.displayColorPicker && this.props.openAbove) {\r\n            style = {\r\n                top: -241,\r\n            }\r\n        }\r\n        return <div\r\n            key={this.props.key}\r\n            style={Object.assign({}, this.props.style || {}, {position: 'relative'})}\r\n            className={ this.props.className || ''}\r\n        >\r\n            <TextField\r\n                disabled={this.props.disabled}\r\n                id=\"name\"\r\n                style={{width: 'calc(100% - 80px)'}}\r\n                label={this.props.name || 'color'}\r\n                value={color}\r\n                margin=\"dense\"\r\n                classes={{root: this.props.classes.textDense}}\r\n                onChange={e => this.handleChange(e.target.value)}\r\n            />\r\n            <IconButton\r\n                disabled={this.props.disabled}\r\n                onClick={() => this.handleChange('')}\r\n                size=\"small\"\r\n                className={this.props.classes.delButton}\r\n                style={color ? {} : {opacity: 0, cursor: 'default'}}\r\n            ><IconDelete/></IconButton>\r\n            <div className={this.props.classes.swatch} onClick={() => this.handleClick()}>\r\n                <div className={this.props.classes.color}\r\n                     style={{background: color}} />\r\n            </div>\r\n            { this.state.displayColorPicker && !this.props.disabled ? <div className={this.props.classes.popover} style={style}>\r\n                <div className={this.props.classes.cover} onClick={() => this.handleClose()}/>\r\n                <ChromePicker color={ this.state.color } onChangeComplete={color => this.handleChange(color)} />\r\n            </div> : null }\r\n        </div>\r\n    }\r\n}\r\n\r\nColorPicker.propTypes = {\r\n    key: PropTypes.string,\r\n    disabled: PropTypes.bool,\r\n    color: PropTypes.string,\r\n    onChange: PropTypes.func.isRequired,\r\n    name: PropTypes.string,\r\n    style: PropTypes.object,\r\n    className: PropTypes.string,\r\n    openAbove: PropTypes.bool,\r\n};\r\n\r\n/** @type {typeof ColorPicker} */\r\nconst _export = withStyles(styles)(ColorPicker);\r\nexport default _export;"],"file":"ColorPicker.js"}