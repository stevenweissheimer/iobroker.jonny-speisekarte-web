"use strict";

function _typeof(obj) { "@babel/helpers - typeof"; if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = void 0;

var _react = _interopRequireDefault(require("react"));

var _no_icon = _interopRequireDefault(require("../assets/no_icon.svg"));

var _propTypes = _interopRequireDefault(require("prop-types"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }

function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }

function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }

function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }

function _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === "object" || typeof call === "function")) { return call; } return _assertThisInitialized(self); }

function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }

function _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }

function getElementFromSource(src) {
  var svgContainer = document.createElement('div');
  svgContainer.innerHTML = src;
  var svg = svgContainer.firstElementChild;

  if (svg.remove) {
    svg.remove();
  } else {
    svgContainer.removeChild(svg);
  }

  svgContainer.remove();
  return svg;
}

function serializeAttrs(map) {
  var ret = {};

  for (var prop, i = 0; i < map.length; i++) {
    var key = map[i].name;

    if (key === 'class') {
      prop = 'className';
    } else if (!key.startsWith('data-')) {
      prop = key.replace(/[-|:]([a-z])/g, function (g) {
        return g[1].toUpperCase();
      });
    } else {
      prop = key;
    }

    ret[prop] = map[i].value;
  }

  return ret;
}
/**
 * @typedef {object} ImageProps
 * @property {string} [key] The key to identify this component.
 * @property {string} [color] The color.
 * @property {string} [src] The source of the image.
 * @property {string} [imagePrefix] The image prefix (default: './files/')
 * @property {string} [className] The CSS class name.
 * @property {boolean} [showError] Show image errors (or just show no image)?
 * 
 * @extends {React.Component<ImageProps>}
 */


var Image = /*#__PURE__*/function (_React$Component) {
  _inherits(Image, _React$Component);

  var _super = _createSuper(Image);

  function Image(props) {
    var _this;

    _classCallCheck(this, Image);

    _this = _super.call(this, props);
    _this.state = {
      svg: !!(_this.props.src && _this.props.src.startsWith('data:')),
      created: true,
      color: _this.props.color || '',
      src: _this.props.src || '',
      imgError: false,
      showError: _this.props.showError
    };
    _this.svg = _this.state.svg ? _this.getSvgFromData(_this.state.src) : null;
    return _this;
  }

  _createClass(Image, [{
    key: "getSvgFromData",
    value: function getSvgFromData(src) {
      var len = 'data:image/svg+xml;base64, ';

      if (!src.startsWith(len)) {
        return null;
      }

      src = src.substring(len.length);

      try {
        src = atob(src);
        var svg = getElementFromSource(src);
        var inner = svg.innerHTML;
        var svgProps = serializeAttrs(svg.attributes || []);
        svg.remove();
        return /*#__PURE__*/_react["default"].createElement("svg", _extends({
          key: this.props.key,
          className: this.props.className,
          style: this.state.color ? {
            color: this.state.color
          } : {}
        }, svgProps, {
          dangerouslySetInnerHTML: {
            __html: inner
          }
        }));
      } catch (e) {}

      return null;
    }
  }, {
    key: "render",
    value: function render() {
      var _this2 = this;

      if (this.state.svg) {
        if (!this.state.created) {
          setTimeout(function () {
            _this2.svg = _this2.getSvgFromData(_this2.state.src);

            _this2.setState({
              created: true
            });
          }, 50);
        }

        return this.svg;
      } else if (this.state.src) {
        return /*#__PURE__*/_react["default"].createElement("img", {
          key: this.props.key,
          className: this.props.className,
          src: this.state.imgError ? _no_icon["default"] : (this.props.imagePrefix || '') + this.state.src || _no_icon["default"],
          alt: "",
          onError: function onError() {
            return _this2.props.showError ? _this2.setState({
              imgError: true
            }) : _this2.setState({
              src: ''
            });
          }
        });
      } else {
        return null;
      }
    }
  }], [{
    key: "getDerivedStateFromProps",
    value: function getDerivedStateFromProps(props, state) {
      var newState = {};
      var changed = false;

      if (props && state && props.src !== state.src) {
        newState.src = props.src;
        newState.svg = props.src && props.src.startsWith('data:');
        newState.created = false;
        changed = true;
      }

      if (props && state && props.color !== state.color) {
        newState.color = props.color;
        changed = true;
      }

      if (props && state && props.showError !== state.showError) {
        newState.showError = props.showError;
        changed = true;
      }

      return changed ? newState : null;
    }
  }]);

  return Image;
}(_react["default"].Component);

Image.propTypes = {
  key: _propTypes["default"].string,
  color: _propTypes["default"].string,
  src: _propTypes["default"].string,
  className: _propTypes["default"].string,
  imagePrefix: _propTypes["default"].string
};
var _default = Image;
exports["default"] = _default;
//# sourceMappingURL=Image.js.map
