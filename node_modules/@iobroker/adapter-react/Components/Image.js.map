{"version":3,"sources":["Image.js"],"names":["getElementFromSource","src","svgContainer","document","createElement","innerHTML","svg","firstElementChild","remove","removeChild","serializeAttrs","map","ret","prop","i","length","key","name","startsWith","replace","g","toUpperCase","value","Image","props","state","created","color","imgError","showError","getSvgFromData","len","substring","atob","inner","svgProps","attributes","className","__html","e","setTimeout","setState","IconNoIcon","imagePrefix","newState","changed","React","Component","propTypes","PropTypes","string"],"mappings":"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","sourcesContent":["import React from 'react';\r\n\r\nimport IconNoIcon from '../assets/no_icon.svg';\r\nimport PropTypes from 'prop-types';\r\n\r\nfunction getElementFromSource(src) {\r\n    const svgContainer = document.createElement('div');\r\n    svgContainer.innerHTML = src;\r\n    const svg = svgContainer.firstElementChild;\r\n    if (svg.remove) {\r\n        svg.remove();\r\n    } else {\r\n        svgContainer.removeChild(svg);\r\n    }\r\n    svgContainer.remove();\r\n    return svg;\r\n}\r\n\r\nfunction serializeAttrs(map) {\r\n    const ret = {};\r\n    for (let prop, i = 0; i < map.length; i++) {\r\n        const key = map[i].name;\r\n        if (key === 'class') {\r\n            prop = 'className';\r\n        }\r\n        else if (!key.startsWith('data-')) {\r\n            prop = key.replace(/[-|:]([a-z])/g, g => g[1].toUpperCase());\r\n        } else {\r\n            prop = key;\r\n        }\r\n\r\n        ret[prop] = map[i].value;\r\n    }\r\n    return ret;\r\n}\r\n\r\n/**\r\n * @typedef {object} ImageProps\r\n * @property {string} [key] The key to identify this component.\r\n * @property {string} [color] The color.\r\n * @property {string} [src] The source of the image.\r\n * @property {string} [imagePrefix] The image prefix (default: './files/')\r\n * @property {string} [className] The CSS class name.\r\n * @property {boolean} [showError] Show image errors (or just show no image)?\r\n * \r\n * @extends {React.Component<ImageProps>}\r\n */\r\nclass Image extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            svg: !!(this.props.src && this.props.src.startsWith('data:')),\r\n            created: true,\r\n            color: this.props.color || '',\r\n            src: this.props.src || '',\r\n            imgError: false,\r\n            showError: this.props.showError,\r\n        };\r\n\r\n        this.svg = this.state.svg ? this.getSvgFromData(this.state.src) : null;\r\n    }\r\n\r\n    static getDerivedStateFromProps(props, state) {\r\n        const newState = {};\r\n        let changed = false;\r\n\r\n        if (props && state && props.src !== state.src) {\r\n            newState.src = props.src;\r\n            newState.svg = props.src && props.src.startsWith('data:');\r\n            newState.created = false;\r\n            changed = true;\r\n        }\r\n\r\n        if (props && state && props.color !== state.color) {\r\n            newState.color = props.color;\r\n            changed = true;\r\n        }\r\n        if (props && state && props.showError !== state.showError) {\r\n            newState.showError = props.showError;\r\n            changed = true;\r\n        }\r\n\r\n        return changed ? newState : null;\r\n    }\r\n\r\n    getSvgFromData(src) {\r\n        const len = 'data:image/svg+xml;base64, ';\r\n        if (!src.startsWith(len)) {\r\n            return null;\r\n        }\r\n        src = src.substring(len.length);\r\n        try {\r\n            src = atob(src);\r\n            const svg = getElementFromSource(src);\r\n            const inner = svg.innerHTML;\r\n            const svgProps = serializeAttrs(svg.attributes || []);\r\n\r\n            svg.remove();\r\n\r\n            return <svg\r\n                key={this.props.key}\r\n                className={this.props.className}\r\n                style={this.state.color ? {color: this.state.color} : {}}\r\n                {...svgProps}\r\n                dangerouslySetInnerHTML={{ __html: inner }}\r\n            />;\r\n        } catch (e) {\r\n\r\n        }\r\n        return null;\r\n    }\r\n\r\n    render() {\r\n        if (this.state.svg) {\r\n            if (!this.state.created) {\r\n                setTimeout(() => {\r\n                    this.svg = this.getSvgFromData(this.state.src);\r\n                    this.setState({created: true});\r\n                }, 50);\r\n            }\r\n\r\n            return this.svg;\r\n        } else if (this.state.src) {\r\n            return <img\r\n                key={this.props.key}\r\n                className={this.props.className}\r\n                src={this.state.imgError ? IconNoIcon : (this.props.imagePrefix || '') + this.state.src || IconNoIcon}\r\n                alt=\"\"\r\n                onError={() => this.props.showError ? this.setState({imgError: true}) : this.setState({src: ''})}\r\n            />;\r\n        } else {\r\n            return null;\r\n        }\r\n    }\r\n}\r\n\r\nImage.propTypes = {\r\n    key: PropTypes.string,\r\n    color: PropTypes.string,\r\n    src: PropTypes.string,\r\n    className: PropTypes.string,\r\n    imagePrefix: PropTypes.string,\r\n};\r\n\r\nexport default Image;"],"file":"Image.js"}