{"version":3,"sources":["../node_modules/@material-ui/icons/ArrowBack.js","components/EasyModeCard.js","tabs/EasyMode.js"],"names":["_interopRequireDefault","require","_interopRequireWildcard","Object","defineProperty","exports","value","default","React","_default","createElement","d","getText","text","lang","en","withStyles","theme","root","position","margin","width","minHeight","background","palette","boxShadow","display","transition","cursor","imageBlock","padding","justifyContent","img","height","marginTop","content","zIndex","top","left","backgroundSize","backgroundColor","adapter","fontWeight","fontSize","verticalAlign","borderTop","textAlign","textTransform","textOverflow","overflow","color","instanceStateNotAlive1","wrapperDesc","flexDirection","desc","classes","icon","id","key","navigate","Card","onClick","className","clsx","CardMedia","component","image","split","EasyMode","props","state","configs","strictMode","this","socket","getEasyMode","then","config","setState","t","themeName","toggleTheme","location","themeType","isFloatComma","dateFormat","configStored","getLocation","CircularProgress","tab","currentInstance","find","Paper","wrapperEasyMode","AppBar","appBar","Toolbar","toolBar","wrapperHeader","dialog","logoWhite","logoPointer","headerName","IconButtons","IconButton","ToggleThemeMenu","paper","Config","iframe","instance","jsonConfig","materialize","easyMode","onRegisterIframeRef","ref","onUnregisterIframeRef","wrapperCard","controlHeight","sort","a","b","map","el","Component","transitions","create","easing","sharp","duration","leavingScreen","borderRadius","overflowY","flexFlow","alignItems","marginLeft","paddingTop","border"],"mappings":"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","file":"static/js/16.bbbe6952.chunk.js","sourcesContent":["\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar React = _interopRequireWildcard(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M20 11H7.83l5.59-5.59L12 4l-8 8 8 8 1.41-1.41L7.83 13H20v-2z\"\n}), 'ArrowBack');\n\nexports.default = _default;","import React from 'react';\nimport { Card, CardMedia, } from \"@material-ui/core\";\nimport { withStyles } from '@material-ui/core/styles';\nimport clsx from 'clsx';\nimport PropTypes from \"prop-types\";\n\nconst boxShadow = '0 2px 2px 0 rgba(0, 0, 0, .14),0 3px 1px -2px rgba(0, 0, 0, .12),0 1px 5px 0 rgba(0, 0, 0, .2)';\nconst boxShadowHover = '0 8px 17px 0 rgba(0, 0, 0, .2),0 6px 20px 0 rgba(0, 0, 0, .19)';\n\nconst styles = theme => ({\n    root: {\n        position: 'relative',\n        margin: 10,\n        width: 300,\n        minHeight: 200,\n        background: theme.palette.background.default,\n        boxShadow,\n        display: 'flex',\n        transition: 'box-shadow 0.5s',\n        cursor: 'pointer',\n        '&:hover': {\n            boxShadow: boxShadowHover\n        }\n    },\n    imageBlock: {\n        background: 'silver',\n        minHeight: 60,\n        display: 'flex',\n        padding: '0 10px 0 10px',\n        position: 'relative',\n        justifyContent: 'space-between',\n        transition: 'background 0.5s',\n    },\n    img: {\n        width: 60,\n        height: 60,\n        marginTop: 20,\n        position: 'relative',\n        '&:after': {\n            content: '\"\"',\n            position: 'absolute',\n            zIndex: 2,\n            top: 0,\n            left: 0,\n            width: '100%',\n            height: '100%',\n            background: 'url(\"img/no-image.png\") 100% 100% no-repeat',\n            backgroundSize: 'cover',\n            backgroundColor: '#fff',\n        }\n    },\n    adapter: {\n        width: '100%',\n        fontWeight: 'bold',\n        fontSize: 15,\n        verticalAlign: 'middle',\n        marginTop: 'auto',\n        borderTop: '1px solid silver',\n        padding: '20px 4px',\n        textAlign: 'center',\n        textTransform: 'uppercase',\n        textOverflow: 'ellipsis',\n        overflow: 'hidden',\n        color: '#ffab40'\n    },\n    instanceStateNotAlive1: {\n        backgroundColor: 'rgba(192, 192, 192, 0.4)'\n    },\n    wrapperDesc: {\n        display: 'flex',\n        flexDirection: 'column',\n        width: '100%',\n        overflow: 'hidden'\n    },\n    desc: {\n        padding: 20,\n        fontSize: 15,\n    }\n});\n\nfunction getText(text, lang) {\n    if (text && typeof text === 'object') {\n        return text[lang] || text.en || '';\n    } else {\n        return text || '';\n    }\n}\n\nconst EasyModeCard = ({\n    classes,\n    icon,\n    id,\n    key,\n    desc,\n    lang,\n    navigate\n}) => {\n    return <Card onClick={navigate} key={key} className={classes.root}>\n        <div className={clsx(classes.imageBlock, classes.instanceStateNotAlive1)}>\n            <CardMedia className={classes.img} component=\"img\" image={`adapter/${id.split('.')[0]}/${icon}` || 'img/no-image.png'} />\n        </div>\n        <div className={classes.wrapperDesc}>\n            <div className={classes.desc}>{getText(desc, lang)}</div>\n            <div className={classes.adapter}>{id}</div>\n        </div>\n    </Card>\n}\n\nEasyModeCard.propTypes = {\n    t: PropTypes.func,\n};\n\nexport default withStyles(styles)(EasyModeCard);","import { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { withStyles } from '@material-ui/core/styles';\n\nimport { AppBar, CardMedia, CircularProgress, IconButton, Paper, Toolbar } from '@material-ui/core';\n\nimport ArrowBackIcon from '@material-ui/icons/ArrowBack';\n\nimport ToggleThemeMenu from '../components/ToggleThemeMenu';\nimport Config from '../dialogs/Config';\nimport EasyModeCard from '../components/EasyModeCard';\n\nconst styles = theme => ({\n    appBar: {\n        transition: theme.transitions.create(['margin', 'width'], {\n            easing: theme.transitions.easing.sharp,\n            duration: theme.transitions.duration.leavingScreen,\n        }),\n    },\n    wrapperEasyMode: {\n        height: '100%',\n        borderRadius: 0\n    },\n    wrapperCard: {\n        padding: '80px 20px 20px',\n        height: '100%',\n        overflowY: 'auto',\n    },\n    controlHeight: {\n        display: 'flex',\n        flexFlow: 'wrap',\n        justifyContent: 'center'\n    },\n    img: {\n        width: 60,\n        height: 60,\n        position: 'relative',\n        borderRadius: 60,\n    },\n    logoWhite: {\n        background: 'white',\n    },\n    wrapperHeader: {\n        display: 'flex',\n        alignItems: 'center'\n\n    },\n    headerName: {\n        fontSize: 24,\n        marginLeft: 10,\n    },\n    toolBar: {\n        justifyContent: 'space-between',\n        margin: '5px 0'\n    },\n    paper: {\n        height: '100%',\n        paddingTop: 80\n    },\n    iframe: {\n        height: '100%',\n        width: '100%',\n        background: '#FFF',\n        color: '#000',\n        borderRadius: 5,\n        border: '1px solid #888'\n    },\n    IconButtons: {\n        display: 'flex'\n    },\n    logoPointer: {\n        cursor: 'pointer'\n    }\n});\n\nclass EasyMode extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            configs: this.props.configs,\n            strictMode: !this.props.configs,\n        };\n    }\n\n    componentDidMount() {\n        if (!this.props.configs) {\n            this.props.socket.getEasyMode()\n                .then(config => this.setState({ configs: config.configs }));\n        }\n    }\n\n    render() {\n        const {\n            classes,\n            t,\n            themeName,\n            toggleTheme,\n            navigate,\n            location,\n            socket,\n            themeType,\n            theme,\n            width,\n            isFloatComma,\n            dateFormat,\n            configStored,\n            getLocation,\n        } = this.props;\n        const { configs, strictMode } = this.state;\n        if (!configs) {\n            return <CircularProgress />;\n        }\n\n        const tab = location.id;\n        const currentInstance = configs.find(({ id }) => id === tab);\n        return <Paper className={classes.wrapperEasyMode}>\n            <AppBar\n                color=\"default\"\n                position=\"fixed\"\n                className={classes.appBar}\n            >\n                <Toolbar className={classes.toolBar}>\n                    <div className={classes.wrapperHeader}>\n                        <CardMedia onClick={(strictMode && !getLocation().dialog) || currentInstance?.tab ? () => navigate(currentInstance?.tab ? 'easy' : 'tab-intro') : null} className={clsx(classes.img, themeName === 'colored' && classes.logoWhite, ((strictMode && !getLocation().dialog) || currentInstance?.tab) && classes.logoPointer)} component=\"img\" image={'img/no-image.png'} />\n                        <div className={classes.headerName}>{t('Easy Admin')}</div>\n                    </div>\n                    <div className={classes.IconButtons}>\n                        {((strictMode && !getLocation().dialog) || currentInstance?.tab) && <IconButton onClick={() => navigate(currentInstance?.tab ? 'easy' : 'tab-intro')}>\n                            <ArrowBackIcon />\n                        </IconButton>}\n                        <ToggleThemeMenu t={t} toggleTheme={toggleTheme} themeName={themeName} />\n                    </div>\n                </Toolbar>\n            </AppBar>\n            {currentInstance ?\n                <Paper className={classes.paper}>\n                    <Config\n                        className={classes.iframe}\n                        adapter={currentInstance.id.split('.')[0]}\n                        instance={currentInstance.id.split('.')[1]}\n                        jsonConfig={currentInstance.jsonConfig}\n                        materialize={currentInstance.materialize}\n                        tab={currentInstance?.tab}\n                        socket={socket}\n                        easyMode={true}\n                        themeName={themeName}\n                        themeType={themeType}\n                        theme={theme}\n                        width={width}\n                        t={t}\n                        configStored={configStored}\n                        dateFormat={dateFormat}\n                        isFloatComma={isFloatComma}\n\n                        onRegisterIframeRef={ref => this.props.onRegisterIframeRef(ref)}\n                        onUnregisterIframeRef={ref => this.props.onUnregisterIframeRef(ref)}\n                    />\n                </Paper> :\n                <div className={classes.wrapperCard}>\n                    <div className={classes.controlHeight}>\n                        {configs\n                            .sort((a, b) => a.id < b.id ? -1 : a.id > b.id ? 1 : 0)\n                            .map(el => <EasyModeCard\n                                key={el.id}\n                                lang={this.props.lang}\n                                navigate={() => navigate(null, 'config', el.id)}\n                                {...el}\n                            />)}\n                    </div>\n                </div>\n            }\n        </Paper>;\n    }\n}\n\nEasyMode.propTypes = {\n    configs: PropTypes.array,\n    socket: PropTypes.object,\n    t: PropTypes.func,\n    lang: PropTypes.string,\n\n    onRegisterIframeRef: PropTypes.func,\n    onUnregisterIframeRef: PropTypes.func,\n};\n\nexport default withStyles(styles)(EasyMode);"],"sourceRoot":""}