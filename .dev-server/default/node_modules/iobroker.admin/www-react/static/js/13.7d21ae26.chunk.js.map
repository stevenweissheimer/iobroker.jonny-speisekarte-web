{"version":3,"sources":["../node_modules/@material-ui/icons/Create.js","../node_modules/@material-ui/lab/esm/Skeleton/Skeleton.js","dialogs/CameraIntroDialog.js","components/IntroCard.js","dialogs/EditIntroLinkDialog.js","tabs/Intro.js"],"names":["_interopRequireDefault","require","_interopRequireWildcard","Object","defineProperty","exports","value","default","React","_default","createElement","d","Skeleton","props","ref","_props$animation","animation","classes","className","_props$component","component","Component","height","_props$variant","variant","width","other","_objectWithoutProperties","hasChildren","Boolean","children","_extends","clsx","root","withChildren","fitContent","heightAuto","style","withStyles","theme","display","backgroundColor","alpha","palette","text","primary","type","marginTop","marginBottom","transformOrigin","transform","borderRadius","shape","content","rect","circle","pulse","opacity","wave","position","overflow","background","concat","action","hover","bottom","left","right","top","visibility","maxWidth","name","EditIntroLinkDialog","cameraUpdateTimer","cameraRef","createRef","this","camera","setInterval","updateCamera","Math","max","parseInt","interval","clearInterval","current","url","addTs","includes","Date","now","src","parts","split","adapter","shift","instance","socket","sendTo","pop","then","result","data","Dialog","onClose","open","fullWidth","fullScreen","paper","DialogTitle","disableTypography","Typography","typography","IconButton","closeButton","onClick","DialogContent","dividers","img","alt","DialogActions","Button","autoFocus","e","stopPropagation","color","startIcon","t","rootGrid","flexGrow","spacing","grey","paddingRight","objectFit","boxShadow","boxShadowHover","IntroCard","state","error","expanded","dialog","loaded","catch","window","alert","CameraIntroDialog","title","setState","Grid","item","container","imgContainer","justify","alignItems","cameraImg","hidden","onLoad","handleImageLoad","onError","handleImageError","imgSkeleton","fontSize","startsWith","editClass","edit","xs","sm","md","lg","Link","href","link","underline","target","rel","Card","card","reveal","offline","expand","size","disabled","handleExpandClick","media","CardMedia","image","contentContainer","CardContent","direction","wrap","contentGrid","gutterBottom","renderContent","Divider","CardActions","colorOrange","Collapse","collapse","in","timeout","unmountOnExit","cardInfo","cardInfoHead","copy","getHostDescriptionAll","format","openSnackBarFunc","toggleActivation","enabled","onEdit","editButton","onRemove","deleteButton","renderCameraDialog","padding","breakpoints","up","flex","minHeight","maxHeight","overflowY","flexDirection","justifyContent","borderBottom","userSelect","pointerEvents","close","save","blue","red","assign","linkName","desc","cameraList","getCamerasInstances","getAdapterInstances","list","promises","forEach","obj","_id","replace","common","push","getState","val","cam","id","Promise","all","m","trim","match","isNew","FormControl","formControl","InputLabel","Select","labelId","onChange","MenuItem","map","TextField","label","editItem","oldLinkName","getLinkNameFromLink","FormControlLabel","control","Checkbox","checked","labelSlider","Slider","editItemSlider","getAriaValueText","step","min","valueLabelDisplay","editColor","UploadImage","crop","maxSize","icon","removeIconFunc","base64","dropZone","dropZoneEmpty","objectFir","uploadDiv","uploadDivDragging","uploadCenterDiv","margin","border","uploadCenterIcon","paddingTop","uploadCenterText","uploadCenterTextAndIcon","textAlign","formatInfo","Utils","formatSeconds","formatRam","formatSpeed","formatBytes","Intro","instances","deactivated","introLinks","editLink","editLinkIndex","openSnackBar","hasUnsavedChanges","introLinksOriginal","deactivatedOriginal","getData","systemConfig","getSystemConfig","_systemConfig","getInstances","native","JSON","parse","stringify","length","pos","indexOf","splice","sort","linkText","substring","hostData","hostsData","info","alive","toggleCard","description","getHostDescription","i","toggleLinkCard","lang","buttons","Fab","button","addButton","saveButton","saveCards","deactivateEditMode","activateEditMode","changed","intro","setSystemConfig","showAlert","console","log","hosts","getHostInfo","resolve","results","res","update","Array","isArray","keys","introInstances","objects","a","b","undefined","order","toLowerCase","instanceId","localLink","hostname","onlyWWW","localLinks","links","titleLang","en","_urls","replaceLink","protocol","port","adminInstance","lll","find","key","_deactivated","hostOffline","bold","reduce","acom","getCurrentInstance","getCompactHosts","_hosts","getHostsData","LinearProgress","TabContainer","elevation","Snackbar","anchorOrigin","vertical","horizontal","autoHideDuration","message","TabContent","getInstancesCards","getLinkCards","getButtons","editLinkCard","success","main","dark","secondary","fontWeight"],"mappings":"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","file":"static/js/13.7d21ae26.chunk.js","sourcesContent":["\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar React = _interopRequireWildcard(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M3 17.25V21h3.75L17.81 9.94l-3.75-3.75L3 17.25zM20.71 7.04c.39-.39.39-1.02 0-1.41l-2.34-2.34a.9959.9959 0 00-1.41 0l-1.83 1.83 3.75 3.75 1.83-1.83z\"\n}), 'Create');\n\nexports.default = _default;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\nimport { alpha, withStyles } from '@material-ui/core/styles';\nexport var styles = function styles(theme) {\n  return {\n    /* Styles applied to the root element. */\n    root: {\n      display: 'block',\n      // Create a \"on paper\" color with sufficient contrast retaining the color\n      backgroundColor: alpha(theme.palette.text.primary, theme.palette.type === 'light' ? 0.11 : 0.13),\n      height: '1.2em'\n    },\n\n    /* Styles applied to the root element if `variant=\"text\"`. */\n    text: {\n      marginTop: 0,\n      marginBottom: 0,\n      height: 'auto',\n      transformOrigin: '0 60%',\n      transform: 'scale(1, 0.60)',\n      borderRadius: theme.shape.borderRadius,\n      '&:empty:before': {\n        content: '\"\\\\00a0\"'\n      }\n    },\n\n    /* Styles applied to the root element if `variant=\"rect\"`. */\n    rect: {},\n\n    /* Styles applied to the root element if `variant=\"circle\"`. */\n    circle: {\n      borderRadius: '50%'\n    },\n\n    /* Styles applied to the root element if `animation=\"pulse\"`. */\n    pulse: {\n      animation: '$pulse 1.5s ease-in-out 0.5s infinite'\n    },\n    '@keyframes pulse': {\n      '0%': {\n        opacity: 1\n      },\n      '50%': {\n        opacity: 0.4\n      },\n      '100%': {\n        opacity: 1\n      }\n    },\n\n    /* Styles applied to the root element if `animation=\"wave\"`. */\n    wave: {\n      position: 'relative',\n      overflow: 'hidden',\n      '&::after': {\n        animation: '$wave 1.6s linear 0.5s infinite',\n        background: \"linear-gradient(90deg, transparent, \".concat(theme.palette.action.hover, \", transparent)\"),\n        content: '\"\"',\n        position: 'absolute',\n        transform: 'translateX(-100%)',\n        // Avoid flash during server-side hydration\n        bottom: 0,\n        left: 0,\n        right: 0,\n        top: 0\n      }\n    },\n    '@keyframes wave': {\n      '0%': {\n        transform: 'translateX(-100%)'\n      },\n      '60%': {\n        // +0.5s of delay between each loop\n        transform: 'translateX(100%)'\n      },\n      '100%': {\n        transform: 'translateX(100%)'\n      }\n    },\n\n    /* Styles applied when the component is passed children. */\n    withChildren: {\n      '& > *': {\n        visibility: 'hidden'\n      }\n    },\n\n    /* Styles applied when the component is passed children and no width. */\n    fitContent: {\n      maxWidth: 'fit-content'\n    },\n\n    /* Styles applied when the component is passed children and no height. */\n    heightAuto: {\n      height: 'auto'\n    }\n  };\n};\nvar Skeleton = /*#__PURE__*/React.forwardRef(function Skeleton(props, ref) {\n  var _props$animation = props.animation,\n      animation = _props$animation === void 0 ? 'pulse' : _props$animation,\n      classes = props.classes,\n      className = props.className,\n      _props$component = props.component,\n      Component = _props$component === void 0 ? 'span' : _props$component,\n      height = props.height,\n      _props$variant = props.variant,\n      variant = _props$variant === void 0 ? 'text' : _props$variant,\n      width = props.width,\n      other = _objectWithoutProperties(props, [\"animation\", \"classes\", \"className\", \"component\", \"height\", \"variant\", \"width\"]);\n\n  var hasChildren = Boolean(other.children);\n  return /*#__PURE__*/React.createElement(Component, _extends({\n    ref: ref,\n    className: clsx(classes.root, classes[variant], className, hasChildren && [classes.withChildren, !width && classes.fitContent, !height && classes.heightAuto], animation !== false && classes[animation])\n  }, other, {\n    style: _extends({\n      width: width,\n      height: height\n    }, other.style)\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? Skeleton.propTypes = {\n  /**\r\n   * The animation.\r\n   * If `false` the animation effect is disabled.\r\n   */\n  animation: PropTypes.oneOf(['pulse', 'wave', false]),\n\n  /**\r\n   * Optional children to infer width and height from.\r\n   */\n  children: PropTypes.node,\n\n  /**\r\n   * Override or extend the styles applied to the component.\r\n   * See [CSS API](#css) below for more details.\r\n   */\n  classes: PropTypes.object.isRequired,\n\n  /**\r\n   * @ignore\r\n   */\n  className: PropTypes.string,\n\n  /**\r\n   * The component used for the root node.\r\n   * Either a string to use a HTML element or a component.\r\n   */\n  component: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .elementType,\n\n  /**\r\n   * Height of the skeleton.\r\n   * Useful when you don't want to adapt the skeleton to a text element but for instance a card.\r\n   */\n  height: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n\n  /**\r\n   * The type of content that will be rendered.\r\n   */\n  variant: PropTypes.oneOf(['text', 'rect', 'circle']),\n\n  /**\r\n   * Width of the skeleton.\r\n   * Useful when the skeleton is inside an inline element with no width of its own.\r\n   */\n  width: PropTypes.oneOfType([PropTypes.number, PropTypes.string])\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiSkeleton'\n})(Skeleton);","import React, { createRef, Component } from 'react';\n\nimport { withStyles } from '@material-ui/core/styles';\n\nimport PropTypes from 'prop-types';\n\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport IconButton from '@material-ui/core/IconButton';\nimport Typography from '@material-ui/core/Typography';\n\nimport CloseIcon from '@material-ui/icons/Close';\n\nconst styles = theme => ({\n    rootGrid: {\n        flexGrow: 1,\n    },\n    closeButton: {\n        position: 'absolute',\n        right: theme.spacing(1),\n        top: theme.spacing(1),\n        color: theme.palette.grey[500],\n    },\n    paper: {\n        //minWidth: 600\n    },\n    typography: {\n        paddingRight: 30\n    },\n    img: {\n        width: '100%',\n        height: '100%',\n        objectFit: 'contain',\n    }\n});\n\nclass EditIntroLinkDialog extends Component {\n\n    constructor(props) {\n        super(props);\n\n        this.cameraUpdateTimer = null;\n        this.cameraRef = createRef();\n    }\n\n    componentDidMount() {\n        if (this.props.camera && this.props.camera !== 'text') {\n            this.cameraUpdateTimer = setInterval(() => this.updateCamera(), Math.max(parseInt(this.props.interval, 10), 500));\n            this.updateCamera();\n        }\n    }\n\n    componentWillUnmount() {\n        this.cameraUpdateTimer && clearInterval(this.cameraUpdateTimer);\n        this.cameraUpdateTimer = null;\n    }\n\n    updateCamera() {\n        if (this.cameraRef.current) {\n            if (this.props.camera === 'custom') {\n                let url = this.props.children;\n                if (this.props.addTs) {\n                    if (url.includes('?')) {\n                        url += '&ts=' + Date.now();\n                    } else {\n                        url += '?ts=' + Date.now();\n                    }\n                }\n                this.cameraRef.current.src = url;\n            } else {\n                const parts = this.props.camera.split('.');\n                const adapter = parts.shift();\n                const instance = parts.shift();\n                this.props.socket.sendTo(adapter + '.' + instance, 'image', { name: parts.pop(), width: this.cameraRef.current.width })\n                    .then(result => {\n                        if (result && result.data && this.cameraRef.current) {\n                            this.cameraRef.current.src = 'data:image/jpeg;base64,' + result.data;\n                        }\n                    });\n            }\n        }\n    }\n\n    render() {\n        const { classes } = this.props;\n\n        return (\n            <Dialog\n                onClose={() => this.props.onClose()}\n                open={true}\n                maxWidth=\"xl\"\n                fullWidth={true}\n                fullScreen={true}\n                classes={{ paper: classes.paper }}\n            >\n                <DialogTitle disableTypography={true}>\n                    <Typography component=\"h2\" variant=\"h6\" classes={{ root: classes.typography }}>\n                        {this.props.name}\n                        <IconButton className={classes.closeButton} onClick={() => this.props.onClose()}>\n                            <CloseIcon />\n                        </IconButton>\n                    </Typography>\n                </DialogTitle>\n                <DialogContent dividers>\n                    <img className={this.props.classes.img} src=\"\" alt=\"camera\" ref={this.cameraRef} />\n                </DialogContent>\n                <DialogActions>\n                    <Button\n                        variant=\"contained\"\n                        autoFocus\n                        onClick={e => {\n                            e.stopPropagation();\n                            this.props.onClose();\n                        }}\n                        color=\"primary\"\n                        startIcon={<CloseIcon />}\n                    >\n                        {this.props.t('Close')}\n                    </Button>\n                </DialogActions>\n            </Dialog>\n        );\n    }\n}\n\nEditIntroLinkDialog.propTypes = {\n    t: PropTypes.func.isRequired,\n    camera: PropTypes.string,\n    socket: PropTypes.object,\n    interval: PropTypes.string,\n    onClose: PropTypes.func.isRequired,\n};\n\nexport default withStyles(styles)(EditIntroLinkDialog);","import { createRef, Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport copy from '@iobroker/adapter-react/Components/copy-to-clipboard';\n\nimport { Button } from '@material-ui/core';\nimport { Card } from '@material-ui/core';\nimport { CardActions } from '@material-ui/core';\nimport { CardContent } from '@material-ui/core';\nimport { CardMedia } from '@material-ui/core';\nimport { Collapse } from '@material-ui/core';\nimport { Divider } from '@material-ui/core';\nimport { Grid } from '@material-ui/core';\nimport { IconButton } from '@material-ui/core';\nimport { Link } from '@material-ui/core';\nimport { Typography } from '@material-ui/core';\nimport { Skeleton } from '@material-ui/lab';\n\nimport CheckIcon from '@material-ui/icons/Check';\nimport EditIcon from '@material-ui/icons/Create';\nimport ErrorIcon from '@material-ui/icons/Error';\nimport CloseIcon from '@material-ui/icons/Close';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport SaveIcon from '@iobroker/adapter-react/icons/IconCopy';\n\nimport blue from '@material-ui/core/colors/blue';\nimport grey from '@material-ui/core/colors/grey';\nimport { red } from '@material-ui/core/colors';\n\nimport CameraIntroDialog from '../dialogs/CameraIntroDialog';\n\nconst boxShadow = '0 2px 2px 0 rgba(0, 0, 0, .14),0 3px 1px -2px rgba(0, 0, 0, .12),0 1px 5px 0 rgba(0, 0, 0, .2)';\nconst boxShadowHover = '0 8px 17px 0 rgba(0, 0, 0, .2),0 6px 20px 0 rgba(0, 0, 0, .19)';\n\nconst styles = theme => ({\n    root: {\n        padding: '.75rem',\n        [theme.breakpoints.up('xl')]: {\n            flex: '0 1 20%'\n        }\n    },\n    card: {\n        display: 'flex',\n        minHeight: '235px',\n        position: 'relative',\n        overflow: 'hidden',\n        maxHeight: '235p',\n        '&:hover': {\n            overflowY: 'auto',\n            boxShadow: boxShadowHover\n        }\n    },\n    cardInfo: {\n        display: 'flex',\n        minHeight: '235px',\n        position: 'relative',\n        overflow: 'initial',\n        maxHeight: '235p',\n        flexDirection: 'column',\n        '&:hover': {\n            // overflowY: 'auto',\n            boxShadow: boxShadowHover\n        }\n    },\n    cardInfoHead: {\n        position: 'sticky',\n        top: 0,\n        background: theme.palette.background.default,\n        display: 'flex',\n        width: '100%',\n        justifyContent: 'space-between',\n        borderBottom: '1px solid',\n        padding: '5px 5px 0px 5px'\n    },\n    edit: {\n        opacity: '.6',\n        userSelect: 'none',\n        pointerEvents: 'none'\n    },\n    media: {\n        backgroundColor: '#e2e2e2',\n        maxWidth: '30%'\n    },\n    img: {\n        width: '120px',\n        height: 'auto',\n        padding: '2rem .5rem',\n        maxWidth: '100%'\n    },\n    contentContainer: {\n        display: 'flex',\n        flexDirection: 'column',\n        flex: 1\n    },\n    content: {\n        height: '170px',\n        flexGrow: 1,\n        overflowY: 'hidden'\n    },\n    action: {\n        minHeight: '49px',\n        padding: '16px 24px'\n    },\n    expand: {\n        position: 'absolute',\n        right: '10px',\n        bottom: '10px'\n    },\n    collapse: {\n        minHeight: '100%',\n        backgroundColor: '#ffffff',\n        position: 'absolute',\n        width: '100%',\n        // '& button': {\n        //     position: 'absolute',\n        //     top: '10px',\n        //     color: '#000000',\n        //     '&:focus': {\n        //         color: '#ffffff',\n        //         backgroundColor: blue[500]\n        //     }\n        // }\n    },\n    close: {\n        right: '10px'\n    },\n    save: {\n        right: '50px'\n    },\n    enabled: {\n        color: '#ffffff',\n        backgroundColor: blue[500],\n        position: 'absolute',\n        top: theme.spacing(1),\n        right: theme.spacing(1),\n        boxShadow,\n        '&:hover': {\n            backgroundColor: blue[300]\n        },\n        '&:focus': {\n            backgroundColor: blue[500]\n        }\n    },\n    disabled: {\n        color: '#ffffff',\n        backgroundColor: grey[500],\n        position: 'absolute',\n        top: theme.spacing(1),\n        right: theme.spacing(1),\n        boxShadow,\n        '&:hover': {\n            backgroundColor: grey[300]\n        },\n        '&:focus': {\n            backgroundColor: grey[500]\n        }\n    },\n    editButton: {\n        color: '#ffffff',\n        backgroundColor: grey[500],\n        position: 'absolute',\n        top: theme.spacing(2) + 48, // 48 is the height of button\n        right: theme.spacing(1),\n        boxShadow,\n        '&:hover': {\n            backgroundColor: grey[300]\n        },\n        '&:focus': {\n            backgroundColor: grey[500]\n        }\n    },\n    deleteButton: {\n        color: '#ffffff',\n        backgroundColor: red[500],\n        position: 'absolute',\n        top: theme.spacing(3) + 48 + 48, // 48 is the height of button\n        right: theme.spacing(1),\n        boxShadow,\n        '&:hover': {\n            backgroundColor: red[300]\n        },\n        '&:focus': {\n            backgroundColor: red[500]\n        }\n\n    },\n    cameraImg: {\n        width: '100%',\n        height: '100%',\n        maxWidth: 200,\n        maxHeight: 200,\n        objectFit: 'contain',\n    },\n    imgContainer: {\n        height: '100%'\n    },\n    hidden: {\n        display: 'none'\n    },\n    contentGrid: {\n        height: '100%'\n    },\n    imgSkeleton: {\n        transform: 'initial'\n    },\n    colorOrange: {\n        color: '#ffcc80'\n    }\n});\n\nclass IntroCard extends Component {\n\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            error: false,\n            expanded: false,\n            dialog: false,\n            loaded: false\n        };\n\n        this.cameraRef = createRef();\n        this.cameraUpdateTimer = null;\n\n        this.interval = this.props.interval;\n        this.camera = this.props.camera;\n        this.t = props.t;\n    }\n\n    updateCamera() {\n        if (this.cameraRef.current) {\n            if (this.props.camera === 'custom') {\n                let url = this.props.children;\n                if (this.props.addTs) {\n                    if (url.includes('?')) {\n                        url += '&ts=' + Date.now();\n                    } else {\n                        url += '?ts=' + Date.now();\n                    }\n                }\n                this.cameraRef.current.src = url;\n            } else {\n                const parts = this.props.camera.split('.');\n                const adapter = parts.shift();\n                const instance = parts.shift();\n                this.props.socket.sendTo(adapter + '.' + instance, 'image', { name: parts.pop(), width: this.cameraRef.current.width })\n                    .then(result => {\n                        if (result && result.data && this.cameraRef.current) {\n                            this.cameraRef.current.src = 'data:image/jpeg;base64,' + result.data;\n                        }\n                    })\n                    .catch(e => window.alert('Cannot send to instance: ' + e));\n            }\n        }\n    }\n\n    componentDidMount() {\n        if (this.props.camera && this.props.camera !== 'text') {\n            this.cameraUpdateTimer = setInterval(() => this.updateCamera(), Math.max(parseInt(this.props.interval, 10), 500));\n            this.updateCamera();\n        }\n    }\n\n    componentWillUnmount() {\n        this.cameraUpdateTimer && clearInterval(this.cameraUpdateTimer);\n        this.cameraUpdateTimer = null;\n    }\n\n    renderCameraDialog() {\n        if (!this.state.dialog) {\n            return null;\n        } else {\n            return <CameraIntroDialog\n                socket={this.props.socket}\n                camera={this.props.camera}\n                name={this.props.title}\n                t={this.props.t}\n                onClose={() => {\n                    if (this.props.camera && this.props.camera !== 'text') {\n                        this.cameraUpdateTimer && clearInterval(this.cameraUpdateTimer);\n                        this.cameraUpdateTimer = setInterval(() => this.updateCamera(), Math.max(parseInt(this.props.interval, 10), 500));\n                        this.updateCamera();\n                    }\n\n                    this.setState({ dialog: false });\n                }}\n            >\n                {this.props.children}\n            </CameraIntroDialog>;\n        }\n    }\n\n    static getDerivedStateFromProps(props) {\n        if (props.edit) {\n            return { expanded: false };\n        } else {\n            return null;\n        }\n    }\n\n    handleExpandClick() {\n        this.setState({\n            expanded: !this.state.expanded\n        });\n    }\n\n    handleImageLoad() {\n        if (!this.state.loaded) {\n            this.setState({\n                loaded: true,\n                error: false\n            });\n        }\n    }\n\n    handleImageError() {\n        if (!this.state.error) {\n            this.setState({\n                loaded: false,\n                error: true\n            });\n        }\n    }\n\n    renderContent() {\n\n        const { classes } = this.props;\n\n        if (!this.props.camera || this.props.camera === 'text') {\n            return this.props.children\n        } else if (this.props.camera === 'custom') {\n\n            let url = this.props.children;\n\n            if (this.props.addTs) {\n                if (url.includes('?')) {\n                    url += '&ts=' + Date.now();\n                } else {\n                    url += '?ts=' + Date.now();\n                }\n            }\n\n            return <Grid\n                item\n                container\n                className={classes.imgContainer}\n                justify=\"center\"\n                alignItems=\"center\"\n            >\n                <img\n                    ref={this.cameraRef}\n                    src={url}\n                    alt=\"Camera\"\n                    className={this.state.loaded && !this.state.error ? classes.cameraImg : classes.hidden}\n                    onLoad={() => this.handleImageLoad()}\n                    onError={() => this.handleImageError()}\n                />\n                {!this.state.loaded && !this.state.error &&\n                    <Skeleton\n                        height=\"100%\"\n                        width=\"100%\"\n                        animation=\"wave\"\n                        className={classes.imgSkeleton}\n                    />\n                }\n                {this.state.error &&\n                    <ErrorIcon fontSize=\"large\" />\n                }\n            </Grid>;\n        } else if (this.props.camera.startsWith('cameras.')) {\n            return <img ref={this.cameraRef} src=\"\" alt=\"camera\" className={this.props.classes.cameraImg} />;\n        }\n    }\n\n    render() {\n        const { classes } = this.props;\n        const editClass = this.props.edit ? ' ' + classes.edit : '';\n\n        if (this.props.camera && this.props.camera !== 'text') {\n            if (this.interval !== this.props.interval) {\n                this.interval = this.props.interval;\n                this.cameraUpdateTimer && clearInterval(this.cameraUpdateTimer);\n                this.cameraUpdateTimer = setInterval(() => this.updateCamera(), Math.max(parseInt(this.props.interval, 10), 500));\n            }\n        } else if (this.cameraUpdateTimer) {\n            clearInterval(this.cameraUpdateTimer);\n            this.cameraUpdateTimer = null;\n        }\n\n        return <Grid\n            item\n            xs={12}\n            sm={6}\n            md={4}\n            lg={3}\n            className={classes.root}\n        ><Link\n            href={!this.props.edit && this.props.action && this.props.action.link ? this.props.action.link : null}\n            underline=\"none\"\n            target=\"_blank\"\n            rel=\"noopener noreferrer\"\n        >\n                <Card className={classes.card} onClick={e => {\n                    e.stopPropagation();\n                    if (!this.props.edit && this.props.camera && this.props.camera !== 'text') {\n                        this.cameraUpdateTimer && clearInterval(this.cameraUpdateTimer);\n                        this.cameraUpdateTimer = null;\n                        this.setState({ dialog: true });\n                    }\n                }}>\n                    {\n                        this.props.reveal && !this.props.offline &&\n                        <Button\n                            className={classes.expand + editClass}\n                            variant=\"contained\"\n                            size=\"small\"\n                            disabled={this.props.disabled}\n                            onClick={() => this.handleExpandClick()}\n                            color=\"primary\"\n                        >\n                            {this.props.t('Info')}\n                        </Button>\n                    }\n                    <div className={classes.media + editClass} style={{ backgroundColor: this.props.color }}>\n                        <CardMedia\n                            className={classes.img}\n                            component=\"img\"\n                            image={this.props.image}\n                        />\n                    </div>\n                    <div className={classes.contentContainer + editClass}>\n                        <CardContent className={classes.content}>\n                            <Grid\n                                container\n                                direction=\"column\"\n                                wrap=\"nowrap\"\n                                className={classes.contentGrid}\n                            >\n                                <Typography gutterBottom variant=\"h5\" component=\"h5\">\n                                    {this.props.title}\n                                </Typography>\n                                {this.renderContent()}\n                            </Grid>\n                        </CardContent>\n                        {\n                            this.props.action && this.props.action.link &&\n                            <Divider />\n                        }\n                        {\n                            this.props.action && this.props.action.link &&\n                            <CardActions className={classes.action}>\n                                <div className={classes.colorOrange}>\n                                    {this.props.action.text || this.props.title || this.props.t('Link')}\n                                </div>\n                            </CardActions>\n                        }\n                    </div>\n                    {\n                        this.props.reveal &&\n                        <Collapse\n                            className={classes.collapse}\n                            in={this.state.expanded}\n                            timeout=\"auto\"\n                            unmountOnExit\n                        >\n                            <Card className={classes.cardInfo}>\n                                <div className={classes.cardInfoHead}>\n                                    <Typography gutterBottom variant=\"h5\" component=\"h5\">\n                                        Info\n                            </Typography>\n                                    <div>\n                                        <IconButton size=\"small\" onClick={() => {\n                                            copy(this.props.getHostDescriptionAll()[1], {\n                                                format: 'text/plain'\n                                            });\n                                            this.props.openSnackBarFunc();\n                                        }}>\n                                            <SaveIcon />\n                                        </IconButton>\n                                        <IconButton size=\"small\" onClick={() => this.handleExpandClick()}>\n                                            <CloseIcon />\n                                        </IconButton>\n                                    </div>\n                                </div>\n                                <CardContent >\n                                    {this.props.getHostDescriptionAll()[0]}\n                                    {/* { this.props.reveal } */}\n                                </CardContent>\n                            </Card>\n                        </Collapse>\n                    }\n                    {\n                        this.props.edit && this.props.toggleActivation &&\n                        <IconButton className={this.props.enabled ? classes.enabled : classes.disabled} onClick={() => this.props.toggleActivation()}>\n                            <CheckIcon />\n                        </IconButton>\n                    }\n                    {\n                        this.props.edit && this.props.onEdit &&\n                        <IconButton className={classes.editButton} onClick={() => this.props.onEdit()}>\n                            <EditIcon />\n                        </IconButton>\n                    }\n                    {\n                        this.props.edit && this.props.onRemove &&\n                        <IconButton className={classes.deleteButton} onClick={() => this.props.onRemove()}>\n                            <DeleteIcon />\n                        </IconButton>\n                    }\n                    {this.renderCameraDialog()}\n                </Card>\n            </Link>\n        </Grid>;\n    }\n}\n\nIntroCard.propTypes = {\n    camera: PropTypes.string,\n    addTs: PropTypes.bool,\n    interval: PropTypes.number,\n    ready: PropTypes.bool,\n    instances: PropTypes.object,\n    updateIntro: PropTypes.string,\n    openLinksInNewWindow: PropTypes.bool,\n    onEdit: PropTypes.func,\n    socket: PropTypes.object,\n    offline: PropTypes.bool,\n    t: PropTypes.func,\n};\n\nexport default withStyles(styles)(IntroCard);","import React, { Component } from 'react';\n\nimport { withStyles } from '@material-ui/core/styles';\n\nimport PropTypes from 'prop-types';\n\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport TextField from '@material-ui/core/TextField';\nimport Grid from '@material-ui/core/Grid';\nimport IconButton from '@material-ui/core/IconButton';\nimport Typography from '@material-ui/core/Typography';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport Slider from '@material-ui/core/Slider';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport FormControl from '@material-ui/core/FormControl';\nimport Select from '@material-ui/core/Select';\n\nimport CloseIcon from '@material-ui/icons/Close';\n\n// icons\nimport IntroCard from '../components/IntroCard';\nimport UploadImage from '../components/UploadImage';\nimport AddIcon from \"@material-ui/icons/Add\";\nimport CheckIcon from \"@material-ui/icons/Check\";\n\n\nconst styles = theme => ({\n    formControl: {\n        marginTop: theme.spacing(4)\n    },\n    rootGrid: {\n        flexGrow: 1,\n    },\n    closeButton: {\n        position: 'absolute',\n        right: theme.spacing(1),\n        top: theme.spacing(1),\n        color: theme.palette.grey[500],\n    },\n    paper: {\n        //minWidth: 600\n    },\n    typography: {\n        paddingRight: 30\n    },\n    editItem: {\n        marginTop: theme.spacing(1),\n    },\n    editItemSlider: {\n        marginTop: theme.spacing(3),\n    },\n    labelSlider: {\n        marginTop: theme.spacing(2),\n        fontSize: '1rem',\n    },\n    editColor: {\n        width: '100%',\n    },\n    dropZone: {\n        width: '100%',\n        height: 100,\n        position: 'relative',\n    },\n    dropZoneEmpty: {\n\n    },\n    image: {\n        height: '100%',\n        width: 'auto',\n        objectFir: 'contain'\n    },\n\n    uploadDiv: {\n        position: 'relative',\n        width: '100%',\n        height: 100,\n        opacity: 0.9,\n    },\n    uploadDivDragging: {\n        opacity: 1,\n    },\n\n    uploadCenterDiv: {\n        margin: 5,\n        border: '3px dashed grey',\n        borderRadius: 5,\n        width: 'calc(100% - 10px)',\n        height: 'calc(100% - 10px)',\n        position: 'relative',\n    },\n    uploadCenterIcon: {\n        paddingTop: 10,\n        width: 48,\n        height: 48,\n    },\n    uploadCenterText: {\n        fontSize: 16,\n    },\n    uploadCenterTextAndIcon: {\n        textAlign: 'center',\n        position: 'absolute',\n        top: 0,\n        bottom: 0,\n        left: 0,\n        right: 0,\n    }\n});\n\nclass EditIntroLinkDialog extends Component {\n\n    constructor(props) {\n        super(props);\n\n        let state = Object.assign({\n            image: '',\n            name: props.t('New link'),\n            link: 'http://',\n            linkName: '',\n            color: '',\n            desc: '',\n            enabled: true,\n            addTs: true,\n            interval: 5000,\n            camera: 'text',\n            cameraList: []\n        }, props.link);\n\n        this.state = state;\n    }\n\n    componentDidMount() {\n        this.getCamerasInstances();\n    }\n\n    getCamerasInstances() {\n        this.props.socket.getAdapterInstances('cameras', true)\n            .then(list => {\n\n                const cameraList = [];\n                const promises = [];\n                list.forEach(obj => {\n                    const instance = obj._id.replace('system.adapter.', '');\n\n                    if (obj.common && obj.common.enabled) {\n                        promises.push(\n                            // if instance is alive\n                            this.props.socket.getState(obj._id + '.alive')\n                                // get the list of cameras\n                                .then(state => state && state.val && this.props.socket.sendTo(instance, 'list', null))\n                                .then(result =>\n                                    result && result.list && result.list.forEach(cam =>\n                                        cameraList.push({ id: cam.id, name: `${cam.desc} [${instance}/${cam.name}]` }))));\n\n                    }\n                });\n\n                Promise.all(promises)\n                    .then(() =>\n                        this.setState({ cameraList }));\n            });\n    }\n\n    getLinkNameFromLink(link) {\n        const m = link.trim().match(/^https?:\\/\\/([^/:]+)(:\\d+)?/);\n        if (m) {\n            return m[1] + (m[2] || '');\n        }\n    }\n\n    render() {\n        const { classes } = this.props;\n\n        return (\n            <Dialog\n                onClose={() => this.props.onClose()}\n                open={this.props.open}\n                maxWidth=\"md\"\n                fullWidth={true}\n                classes={{ paper: classes.paper }}\n            >\n                <DialogTitle disableTypography={true}>\n                    <Typography component=\"h2\" variant=\"h6\" classes={{ root: classes.typography }}>\n                        {this.props.isNew ? this.props.t('Add new link: ') : this.props.t('Edit link')}\n                        <IconButton className={classes.closeButton} onClick={() => this.props.onClose()}>\n                            <CloseIcon />\n                        </IconButton>\n                    </Typography>\n                </DialogTitle>\n                <DialogContent dividers>\n\n                    <Grid\n                        className={this.props.classes.rootGrid}\n                        container\n                        direction=\"row\"\n                    >\n                        <Grid item\n                            xs={12}\n                            sm={6}\n                            md={8}\n                            lg={9}>\n                            <Grid\n                                container\n                                direction=\"column\"\n                            >\n                                <FormControl className={classes.formControl}>\n                                    <InputLabel id=\"select-helper-label\">{this.props.t('Link type')}</InputLabel>\n                                    <Select\n                                        labelId=\"select-helper-label\"\n                                        value={this.state.camera}\n                                        onChange={e => this.setState({ camera: e.target.value })}\n                                    >\n                                        <MenuItem value=\"text\" key=\"desc\"><em>{this.props.t('Description')}</em></MenuItem>\n                                        {this.state.cameraList.map(cam => <MenuItem key={cam.id} value={cam.id}>{cam.name}</MenuItem>)}\n                                        <MenuItem value=\"custom\" key=\"custom\">{this.props.t('Custom camera URL')}</MenuItem>\n                                    </Select>\n                                </FormControl>\n\n                                <TextField\n                                    label={this.props.t('URL')}\n                                    value={this.state.link}\n                                    className={this.props.classes.editItem}\n                                    onChange={e => {\n                                        const oldLinkName = this.getLinkNameFromLink(this.state.link);\n                                        if (oldLinkName && (!this.state.linkName || oldLinkName === this.state.linkName)) {\n                                            this.setState({ link: e.target.value, linkName: this.getLinkNameFromLink(e.target.value) });\n                                        } else {\n                                            this.setState({ link: e.target.value });\n                                        }\n                                    }}\n                                />\n\n                                <TextField className={this.props.classes.editItem} label={this.props.t('Name')} value={this.state.name || ''} onChange={e => this.setState({ name: e.target.value })} />\n\n                                {this.state.link ? <TextField className={this.props.classes.editItem} label={this.props.t('Link name')} value={this.state.linkName || ''} onChange={e => this.setState({ linkName: e.target.value })} /> : null}\n\n                                {this.state.camera === 'custom' || this.state.camera === 'text' ? <TextField className={this.props.classes.editItem} label={this.state.camera === 'custom' ? this.props.t('Camera URL') : this.props.t('Description')} value={this.state.desc || ''} onChange={e => this.setState({ desc: e.target.value })} /> : null}\n\n                                {this.state.camera === 'custom' ? <FormControlLabel className={this.props.classes.editItem}\n                                    control={<Checkbox checked={this.state.addTs} onChange={e => this.setState({ addTs: e.target.checked })} />}\n                                    label={this.props.t('Add timestamp to URL')}\n                                /> : null}\n\n                                {this.state.camera !== 'text' ? <Typography className={this.props.classes.labelSlider} gutterBottom>\n                                    Polling interval in ms\n                                    </Typography> : null}\n                                {this.state.camera !== 'text' ? <Slider\n                                    className={this.props.classes.editItemSlider}\n                                    value={this.state.interval}\n                                    getAriaValueText={() => this.state.interval + 'ms'}\n                                    onChange={(e, interval) => this.setState({ interval })}\n                                    step={100}\n                                    min={500}\n                                    max={60000}\n                                    valueLabelDisplay=\"on\"\n                                /> : null}\n\n                                <div style={{ width: 50 }} className={this.props.classes.editItem}>\n                                    <TextField fullWidth={true} label={this.props.t('Color')} className={this.props.editColor} type=\"color\" value={this.state.color} onChange={e => this.setState({ color: e.target.value })} />\n                                </div>\n                                <UploadImage\n                                    disabled={false}\n                                    crop\n                                    maxSize={256 * 1024}\n                                    icon={this.state.image}\n                                    removeIconFunc={() => this.setState({ image: '' })}\n                                    onChange={(base64) => this.setState({ image: base64 })}\n                                    t={this.props.t}\n                                />\n                            </Grid>\n                        </Grid>\n                        <IntroCard\n                            interval={this.state.interval}\n                            camera={this.state.camera}\n                            addTs={this.state.addTs}\n                            image={this.state.image}\n                            title={this.state.name}\n                            socket={this.props.socket}\n                            action={{ link: this.state.link, text: this.state.linkName }}\n                            t={this.props.t}\n                            color={this.state.color}\n                            enabled={true}\n                        >\n                            {this.state.desc || ''}\n                        </IntroCard>\n                    </Grid>\n                </DialogContent>\n                <DialogActions>\n                    <Button\n                        variant=\"contained\"\n                        autoFocus\n                        onClick={() => {\n                            this.props.onClose({\n                                link: this.state.link,\n                                name: this.state.name,\n                                desc: this.state.desc,\n                                linkName: this.state.linkName,\n                                color: this.state.color,\n                                image: this.state.image,\n                                addTs: this.state.addTs,\n                                camera: this.state.camera,\n                                interval: this.state.interval,\n                            });\n                        }}\n                        color=\"primary\"\n                        startIcon={this.props.isNew ? <AddIcon/> : <CheckIcon/>}\n                    >\n                        {this.props.isNew ? this.props.t('Add') : this.props.t('Save')}\n                    </Button>\n                    <Button\n                        variant=\"contained\"\n                        onClick={() => this.props.onClose()}\n                        color=\"default\"\n                        startIcon={<CloseIcon />}\n                    >\n                        {this.props.t('Close')}\n                    </Button>\n                </DialogActions>\n            </Dialog>\n        );\n    }\n}\n\nEditIntroLinkDialog.propTypes = {\n    t: PropTypes.func.isRequired,\n    socket: PropTypes.object.isRequired,\n    lang: PropTypes.string.isRequired,\n    open: PropTypes.bool.isRequired,\n    link: PropTypes.object.isRequired,\n    onClose: PropTypes.func.isRequired,\n    isNew: PropTypes.bool,\n};\n\nexport default withStyles(styles)(EditIntroLinkDialog);","import { Component } from 'react';\n\nimport PropTypes from 'prop-types';\n\nimport { withStyles } from '@material-ui/core/styles';\n\nimport { Fab, Snackbar } from '@material-ui/core';\nimport { Grid } from '@material-ui/core';\nimport { LinearProgress } from '@material-ui/core';\n\nimport { Skeleton } from '@material-ui/lab';\n\nimport AddIcon from '@material-ui/icons/Add';\nimport CheckIcon from '@material-ui/icons/Check';\nimport CloseIcon from '@material-ui/icons/Close';\nimport CreateIcon from '@material-ui/icons/Create';\n\nimport Utils from '../Utils';\n\nimport IntroCard from '../components/IntroCard';\nimport TabContainer from '../components/TabContainer';\nimport TabContent from '../components/TabContent';\n\nimport EditIntroLinkDialog from '../dialogs/EditIntroLinkDialog';\n\nconst styles = theme => ({\n    root: {\n        width: '100%',\n        height: '100%'\n    },\n    button: {\n        position: 'absolute',\n        bottom: theme.spacing(2),\n        right: theme.spacing(2),\n    },\n    saveButton: {\n        backgroundColor: theme.palette.success.main,\n        right: theme.spacing(10),\n        '&:hover': {\n            backgroundColor: theme.palette.success.dark\n        }\n    },\n    addButton: {\n        backgroundColor: theme.palette.secondary.main,\n        right: theme.spacing(18),\n        '&:hover': {\n            backgroundColor: theme.palette.secondary.dark\n        }\n    },\n    closeButton: {\n        backgroundColor: theme.palette.error.main,\n        '&:hover': {\n            backgroundColor: theme.palette.error.dark\n        }\n    },\n    bold: {\n        fontWeight: 'bold'\n    },\n    container: {\n        overflowY: 'auto'\n    },\n    hostOffline: {\n        color: '#bb0000'\n    }\n});\n\nconst formatInfo = {\n    'Uptime':        Utils.formatSeconds,\n    'System uptime': Utils.formatSeconds,\n    'RAM':           Utils.formatRam,\n    'Speed':         Utils.formatSpeed,\n    'Disk size':     Utils.formatBytes,\n    'Disk free':     Utils.formatBytes\n};\n\nclass Intro extends Component {\n\n    constructor(props) {\n\n        super(props);\n\n        this.state = {\n            instances: null,\n            deactivated: {},\n            edit: false,\n\n            introLinks: [],\n            editLink: false,\n            editLinkIndex: -1,\n            openSnackBar: false,\n            hasUnsavedChanges: false,\n        };\n\n        this.promises = {};\n\n        this.introLinksOriginal = null;\n        this.deactivatedOriginal = null;\n\n        this.t = props.t;\n\n        this.getData();\n    }\n\n    activateEditMode() {\n        let systemConfig;\n        this.props.socket.getSystemConfig(true)\n            .then(_systemConfig => {\n                systemConfig = _systemConfig;\n                return this.getInstances(true, null, systemConfig);\n            })\n            .then(data => {\n                const introLinks = systemConfig && systemConfig.native && systemConfig.native.introLinks ? systemConfig.native.introLinks : [];\n\n                this.introLinksOriginal = JSON.parse(JSON.stringify(introLinks));\n                this.deactivatedOriginal  = JSON.parse(JSON.stringify(data.deactivated));\n\n                this.setState({\n                    instances: data.instances,\n                    deactivated: data.deactivated,\n                    edit: true,\n                    introLinks,\n                    hasUnsavedChanges: false,\n                });\n            });\n    }\n\n    deactivateEditMode() {\n        if (!this.state.hasUnsavedChanges) {\n            // todo: implement confirmation dialog\n        }\n\n        // restore old state\n        this.setState({\n            deactivated: this.deactivatedOriginal,\n            introLinks: this.introLinksOriginal,\n            hasUnsavedChanges: false,\n            edit: false\n        }, () => {\n            this.deactivatedOriginal = null;\n            this.introLinksOriginal = null;\n        });\n    }\n\n    toggleCard(id, linkName) {\n        if (!this.state.instances || !this.state.instances.length) {\n            return;\n        }\n\n        const deactivated = JSON.parse(JSON.stringify(this.state.deactivated));\n\n        const pos = deactivated.indexOf(id + '_' + linkName);\n\n        if (pos !== -1) {\n            deactivated.splice(pos, 1);\n        } else {\n            deactivated.push(id + '_' + linkName);\n            deactivated.sort();\n        }\n\n        const hasUnsavedChanges = JSON.stringify(deactivated) !== JSON.stringify(this.deactivatedOriginal) ||\n            JSON.stringify(this.state.introLinks) !== JSON.stringify(this.introLinksOriginal);\n\n        this.setState({ deactivated, hasUnsavedChanges });\n    }\n\n    getInstancesCards() {\n        return this.state.instances.map(instance => {\n            const enabled = !this.state.deactivated.includes(instance.id + '_' + instance.linkName);\n            if (enabled || this.state.edit) {\n                let linkText = instance.link ? instance.link.replace(/^https?:\\/\\//, '') : '';\n                const pos = linkText.indexOf('/');\n                if (pos !== -1) {\n                    linkText = linkText.substring(0, pos);\n                }\n\n                const hostData = this.state.hostsData ? this.state.hostsData[instance.id] : null;\n\n                return <IntroCard\n                    key={instance.id + '_' + instance.link}\n                    socket={this.props.socket}\n                    image={instance.image}\n                    title={instance.name}\n                    action={{ link: instance.link, text: linkText }}\n                    t={this.props.t}\n                    color={instance.color}\n                    reveal={instance.info}\n                    edit={this.state.edit}\n                    offline={hostData && hostData.alive === false}\n                    enabled={enabled}\n                    disabled={!hostData || typeof hostData !== 'object'}\n                    getHostDescriptionAll={() => this.getHostDescriptionAll(instance.id)}\n                    toggleActivation={() => this.toggleCard(instance.id, instance.linkName)}\n                    openSnackBarFunc={() => this.setState({ openSnackBar: true })}\n                >\n                    { instance.description || this.getHostDescription(instance.id)}\n                </IntroCard>;\n            } else {\n                return null;\n            }\n        });\n    }\n\n    toggleLinkCard(i) {\n        const introLinks = JSON.parse(JSON.stringify(this.state.introLinks));\n\n        introLinks[i].enabled = !introLinks[i].enabled;\n\n        const hasUnsavedChanges = JSON.stringify(this.state.deactivated) !== JSON.stringify(this.deactivatedOriginal) ||\n            JSON.stringify(introLinks) !== JSON.stringify(this.introLinksOriginal);\n\n        this.setState({ introLinks, hasUnsavedChanges });\n    }\n\n    getLinkCards() {\n        return this.state.introLinks.map((item, i) => {\n            if (!item.enabled && !this.state.edit) {\n                return null;\n            } else {\n                return <IntroCard\n                    key={'link' + i}\n                    image={item.image}\n                    title={item.name}\n                    action={{ link: item.link, text: item.linkName }}\n                    t={this.props.t}\n                    socket={this.props.socket}\n                    color={item.color}\n                    edit={this.state.edit}\n                    interval={item.interval}\n                    camera={item.camera}\n                    addTs={item.addTs}\n\n                    onEdit={() => this.setState({\n                        editLink: true,\n                        editLinkIndex: i,\n                        link: JSON.parse(JSON.stringify(this.state.introLinks[i]))\n                    })}\n\n                    onRemove={() => {\n                        const introLinks = JSON.parse(JSON.stringify(this.state.introLinks));\n                        introLinks.splice(i, 1);\n                        const hasUnsavedChanges = JSON.stringify(this.state.deactivated) !== JSON.stringify(this.deactivatedOriginal) ||\n                            JSON.stringify(introLinks) !== JSON.stringify(this.introLinksOriginal);\n                        this.setState({ introLinks, hasUnsavedChanges });\n                    }}\n\n                    enabled={item.enabled}\n                    toggleActivation={() => this.toggleLinkCard(i)}\n                >\n                    { item.desc || ''}\n                </IntroCard>;\n            }\n        });\n    }\n\n    editLinkCard() {\n        if (this.state.editLink) {\n            return <EditIntroLinkDialog\n                open={this.state.editLink}\n                link={this.state.link}\n                socket={this.props.socket}\n                isNew={this.state.editLinkIndex === -1}\n                t={this.props.t}\n                lang={this.props.lang}\n                onClose={link => {\n                    if (link) {\n                        const introLinks = JSON.parse(JSON.stringify(this.state.introLinks));\n                        if (this.state.editLinkIndex === -1) {\n                            link.enabled = true;\n                            introLinks.push(link);\n                        } else {\n                            link.enabled = introLinks[this.state.editLinkIndex].enabled;\n                            introLinks[this.state.editLinkIndex] = link;\n                        }\n                        const hasUnsavedChanges = JSON.stringify(this.state.deactivated) !== JSON.stringify(this.deactivatedOriginal) ||\n                            JSON.stringify(introLinks) !== JSON.stringify(this.introLinksOriginal);\n\n                        this.setState({ introLinks, editLink: false, hasUnsavedChanges, link: null });\n                    } else {\n                        this.setState({ editLink: false });\n                    }\n                }} />;\n        } else {\n            return null;\n        }\n    }\n\n    getButtons(classes) {\n        const buttons = [];\n\n        if (this.state.edit) {\n            buttons.push(<Fab\n                key=\"add\"\n                color=\"primary\"\n                className={classes.button + ' ' + classes.addButton}\n                onClick={() =>\n                    this.setState({\n                        editLink: true,\n                        editLinkIndex: -1,\n                        link: {}\n                    })}\n            >\n                <AddIcon />\n            </Fab>);\n\n            buttons.push(<Fab\n                key=\"save\"\n                color=\"primary\"\n                disabled={!this.state.hasUnsavedChanges}\n                className={classes.button + ' ' + classes.saveButton}\n                onClick={() => this.saveCards()}\n            >\n                <CheckIcon />\n            </Fab>);\n\n            buttons.push(<Fab\n                key=\"close\"\n                color=\"primary\"\n                className={classes.button + ' ' + classes.closeButton}\n                onClick={() => this.deactivateEditMode()}\n            >\n                <CloseIcon />\n            </Fab>);\n        } else {\n            buttons.push(<Fab\n                color=\"primary\"\n                key=\"edit\"\n                className={classes.button}\n                onClick={() => this.activateEditMode()}\n            >\n                <CreateIcon />\n            </Fab>);\n        }\n\n        return buttons;\n    }\n\n    saveCards() {\n        return this.props.socket.getSystemConfig(true)\n            .then(systemConfig => {\n                let changed = false;\n\n                if (JSON.stringify(systemConfig.common.intro) !== JSON.stringify(this.state.deactivated)) {\n                    systemConfig.common.intro = this.state.deactivated;\n                    changed = true;\n                }\n\n                if (!changed && JSON.stringify(systemConfig.native.introLinks) !== JSON.stringify(this.state.introLinks)) {\n                    changed = true;\n                    systemConfig.native.introLinks = this.state.introLinks;\n                }\n\n                if (changed) {\n                    this.props.socket.setSystemConfig(systemConfig)\n                        .then(() => this.props.showAlert('Updated', 'success'))\n                        .catch(error => {\n                            console.log(error);\n                            this.props.showAlert(error, 'error');\n                        })\n                        .then(() => this.setState({ edit: false }));\n                } else {\n                    this.setState({ edit: false });\n                }\n            });\n    }\n\n    getHostsData(hosts) {\n        const promises = hosts.map(obj =>\n            this.props.socket.getState(obj._id + '.alive')\n                .then(alive => {\n                    if (alive && alive.val) {\n                        return this.props.socket.getHostInfo(obj._id, false, 10000);\n                    } else {\n                        return {alive: false};\n                    }\n                })\n                .catch(error => {\n                    console.error(error);\n                    return error;\n                })\n                .then(data =>\n                    ({ id: obj._id, data })));\n\n        return new Promise(resolve =>\n            Promise.all(promises)\n                .then(results => {\n                    const hostsData = {};\n                    results.forEach(res => hostsData[res.id] = res.data);\n                    resolve(hostsData);\n                }));\n    }\n\n    getInstances(update, hosts, systemConfig) {\n        hosts = hosts || this.state.hosts;\n\n        return this.props.socket.getAdapterInstances('', update)\n            .then(instances => {\n                let deactivated = systemConfig.common.intro || [];\n                if (!Array.isArray(deactivated)) {\n                    deactivated = Object.keys(deactivated);\n                    deactivated.sort();\n                }\n                const introInstances = [];\n                const objects = {};\n                instances.forEach(obj => objects[obj._id] = obj);\n\n                instances.sort((a, b) => {\n                    a = a && a.common;\n                    b = b && b.common;\n                    a = a || {};\n                    b = b || {};\n\n                    if (a.order === undefined && b.order === undefined) {\n                        if (a.name.toLowerCase() > b.name.toLowerCase()) return 1;\n                        if (a.name.toLowerCase() < b.name.toLowerCase()) return -1;\n                        return 0;\n                    } else if (a.order === undefined) {\n                        return -1;\n                    } else if (b.order === undefined) {\n                        return 1;\n                    } else {\n                        if (a.order > b.order) return 1;\n                        if (a.order < b.order) return -1;\n                        if (a.name.toLowerCase() > b.name.toLowerCase()) return 1;\n                        if (a.name.toLowerCase() < b.name.toLowerCase()) return -1;\n                        return 0;\n                    }\n                });\n\n                instances.forEach(obj => {\n                    if (!obj) {\n                        return;\n                    }\n                    const common     = obj.common || null;\n                    const objId      = obj._id.split('.');\n                    const instanceId = objId.pop();\n\n                    if (common.name && common.name === 'admin' && common.localLink === (this.props.hostname || '')) {\n                        return;\n                    } else if (common.name && common.name === 'web') {\n                        return;\n                    } else if (common.name && common.name !== 'vis-web-admin' && common.name.match(/^vis-/)) {\n                        return;\n                    } else if (common.name && common.name.match(/^icons-/)) {\n                        return;\n                    } else if (common && (common.enabled || common.onlyWWW) && (common.localLinks || common.localLink)) {\n                        let links = common.localLinks || common.localLink || '';\n                        if (typeof links === 'string') {\n                            links = { _default: links };\n                        }\n\n                        Object.keys(links).forEach(linkName => {\n                            let link = links[linkName];\n                            const instance = {};\n                            if (typeof link === 'string') {\n                                link = {link};\n                            }\n\n                            instance.id          = obj._id.replace('system.adapter.', '') + (linkName === '_default' ? '' : ' ' + linkName);\n                            instance.name        = (common.titleLang ? common.titleLang[this.props.lang] : common.title) + (linkName === '_default' ? '' : ' ' + linkName);\n                            instance.color       = link.color || '';\n                            instance.description = common.desc && typeof common.desc === 'object' ? (common.desc[this.props.lang] || common.desc.en) : common.desc || '';\n                            instance.image       = common.icon ? 'adapter/' + common.name + '/' + common.icon : 'img/no-image.png';\n\n                            /*let protocol = this.props.protocol;\n                            let port     = this.props.port;\n                            let hostname = Intro.getHostname(obj, objects, hosts, this.props.hostname, this.adminInstance);\n\n                            if (!hostname) {\n                                return;\n                            }*/\n\n                            const _urls = Utils.replaceLink(link.link, common.name, instanceId, {\n                                objects,\n                                hostname:      this.props.hostname,\n                                protocol:      this.props.protocol,\n                                port:          this.props.port,\n                                adminInstance: this.props.adminInstance,\n                                hosts,\n                            }) || [];\n\n                            if (_urls.length === 1) {\n                                instance.link = _urls[0].url;\n                                instance.port = _urls[0].port;\n                                // if link already exists => ignore\n                                const lll = introInstances.find(item => item.link === instance.link);\n                                if (!lll) {\n                                    introInstances.push(instance);\n                                } else {\n                                    console.log(`Double links: \"${instance.id}\" and \"${lll.id}\"`);\n                                }\n                            } else if (_urls.length > 1) {\n                                _urls.forEach(url => {\n                                    const lll = introInstances.find(item => item.link === url.url);\n\n                                    if (!lll) {\n                                        introInstances.push({...instance, link: url.url, port: url.port});\n                                    } else {\n                                        console.log(`Double links: \"${instance.id}\" and \"${lll.id}\"`);\n                                    }\n                                })\n                            }\n                        });\n                    }\n                });\n\n                introInstances.forEach(instance => {\n                    if (instance.link) {\n                        instance.linkName = instance.link.replace('https://', '').replace('http://', '').replace(/^[^_]+:/, '');\n                    }\n                });\n\n                Object.keys(hosts).forEach(key => {\n                    const obj = hosts[key];\n                    const common = obj && obj.common;\n\n                    if (common) {\n                        const instance   = {};\n\n                        instance.id       = obj._id;\n                        instance.name     = common.name;\n                        instance.color    = '';\n                        instance.image    = common.icon || 'img/no-image.png';\n                        instance.info     = this.t('Info');\n                        instance.linkName = '';\n\n                        introInstances.push(instance);\n                    }\n                });\n\n                const _deactivated = [];\n                deactivated.forEach(id => {\n                    if (introInstances.find(instance => id === instance.id + '_' + instance.linkName)) {\n                        _deactivated.push(id);\n                    }\n                });\n                deactivated = _deactivated;\n\n                return {instances: introInstances, deactivated};\n            })\n            .catch(error => {\n                console.log(error);\n                return {instances: [],  deactivated: []};\n            });\n    }\n\n    getHostDescription(id) {\n        const { classes } = this.props;\n        const hostData = this.state.hostsData ? this.state.hostsData[id] : null;\n\n        if (hostData && hostData.alive === false) {\n            return <div className={this.props.classes.hostOffline}>{this.props.t('Offline')}</div>;\n        }\n\n        return <ul>{\n            ['Platform', 'RAM', 'Node.js', 'NPM'].map(value =>\n                <li key={value}>\n                    { hostData && typeof hostData === 'object' ?\n                        <span>\n                            <span className={classes.bold}>{this.t(value)}: </span>\n                            {(formatInfo[value] ? formatInfo[value](hostData[value]) : hostData[value] || '--')}\n                        </span>\n                        :\n                        <Skeleton />\n                    }\n                </li>\n            )}\n        </ul>;\n    }\n\n    getHostDescriptionAll(id) {\n        const { classes } = this.props;\n        const hostData = this.state.hostsData ? this.state.hostsData[id] : null;\n\n        return [\n            <ul>\n                {\n                    hostData && typeof hostData === 'object' && Object.keys(hostData).map(value => <li key={value}>\n                        {hostData && typeof hostData === 'object' ?\n                            <span>\n                                <span className={classes.bold}>{this.t(value)}: </span>\n                                {(formatInfo[value] ? formatInfo[value](hostData[value], this.t) : hostData[value] || '--')}\n                            </span>\n                            :\n                            <Skeleton />\n                        }\n                    </li>)\n                }\n            </ul>,\n            hostData && typeof hostData === 'object' && Object.keys(hostData).reduce((acom, item) => acom + `${this.t(item)}:${(formatInfo[item] ? formatInfo[item](hostData[item], this.t) : hostData[item] || '--')}\\n`)\n        ];\n    }\n\n    getData(update) {\n        let hosts;\n        let systemConfig;\n\n        return this.props.socket.getCurrentInstance()\n            .then(adminInstance => {\n                this.adminInstance = adminInstance;\n                return this.props.socket.getSystemConfig(update);\n            })\n            .then(_systemConfig => {\n                systemConfig = _systemConfig;\n                return this.props.socket.getCompactHosts(update);\n            })\n            .then(_hosts => {\n                hosts = _hosts;\n                return this.getInstances(update, hosts, systemConfig);\n            })\n            .then(data => {\n                this.setState({\n                    instances: data.instances,\n                    hosts,\n                    deactivated: data.deactivated,\n                    introLinks: systemConfig && systemConfig.native && systemConfig.native.introLinks ? systemConfig.native.introLinks : []\n                });\n                // hosts data could last a long time, so show some results to user now and then get the info about hosts\n                return this.getHostsData(hosts);\n            })\n            .then(hostsData =>\n                this.setState({ hostsData }));\n    }\n\n    render() {\n        if (!this.state.instances) {\n            return <LinearProgress />;\n        }\n\n        const { classes } = this.props;\n\n        return <TabContainer\n            elevation={0}\n            overflow=\"visible\"\n        >\n            <Snackbar\n                anchorOrigin={{\n                    vertical: 'bottom',\n                    horizontal: 'left',\n                }}\n                open={this.state.openSnackBar}\n                autoHideDuration={3000}\n                onClose={() => this.setState({ openSnackBar: false })}\n                message={this.t('copied')}\n            />\n            <TabContent classes={{ root: classes.container }}>\n                <Grid container spacing={2}>\n                    {this.getInstancesCards()}\n                    {this.getLinkCards()}\n                </Grid>\n                {this.getButtons(classes)}\n                {this.editLinkCard()}\n            </TabContent>\n        </TabContainer>;\n    }\n}\n\nIntro.propTypes = {\n    /**\n     * Link and text\n     * {link: 'https://example.com', text: 'example.com'}\n     */\n    action: PropTypes.object,\n    children: PropTypes.node,\n    color: PropTypes.string,\n    edit: PropTypes.bool,\n    enabled: PropTypes.bool,\n    socket: PropTypes.object,\n    image: PropTypes.string,\n    reveal: PropTypes.node,\n    title: PropTypes.string,\n    t: PropTypes.func,\n    lang: PropTypes.string,\n    toggleActivation: PropTypes.func,\n\n    hostname: PropTypes.string,\n    protocol: PropTypes.string,\n    port: PropTypes.number,\n    adminInstance: PropTypes.string,\n};\n\nexport default withStyles(styles)(Intro);"],"sourceRoot":""}