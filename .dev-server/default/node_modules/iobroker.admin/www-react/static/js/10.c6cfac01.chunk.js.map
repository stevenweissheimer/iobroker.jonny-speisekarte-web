{"version":3,"sources":["../node_modules/@material-ui/icons/Schedule.js","../node_modules/@material-ui/icons/Pause.js","../node_modules/@material-ui/icons/ViewCompact.js","assets/filter.svg","../node_modules/@material-ui/icons/BugReport.js","../ComplexCron.js","../TextWithIcon.js","../node_modules/@material-ui/icons/LowPriority.js","../node_modules/@material-ui/icons/Input.js","../node_modules/@material-ui/icons/Lens.js","../node_modules/@material-ui/icons/Devices.js","components/Instances/InstanceInfo.js","components/Instances/LinksDialog.js","components/Instances/InstanceCard.js","components/Instances/InstanceRow.js","components/Instances/InstanceFilterDialog.js","components/Instances/InstanceCategory.js","tabs/Instances.js"],"names":["_interopRequireDefault","require","_interopRequireWildcard","Object","defineProperty","exports","value","default","React","_default","createElement","Fragment","d","DialogComplexCron","cron","this","state","disableBackdropClick","disableEscapeKeyDown","maxWidth","fullWidth","classes","paper","props","dialogPaper","open","id","title","I18n","style","height","overflow","cronExpression","onChange","language","variant","onClick","startIcon","clear","color","ok","cancel","Component","PropTypes","onClose","onOk","simple","clearButton","bool","withStyles","theme","headerID","fontWeight","fontStyle","radio","display","TextWithIcon","item","prefix","list","Array","_item","obj","name","Utils","icon","border","backgroundColor","className","src","t","lang","themeType","options","removePrefix","moreClasses","object","div","borderRadius","padding","lineHeight","whiteSpace","alignItems","width","marginRight","verticalAlign","text","textOverflow","nowrap","flexFlow","Grid","container","tooltip","direction","spacing","Tooltip","Typography","component","children","LinksDialog","links","length","firstPort","port","showPort","find","Dialog","DialogTitle","map","link","ListItem","button","getInvertedColor","e","stopPropagation","window","instanceId","ListItemAvatar","Avatar","img","image","alt","ListItemText","primary","arrayLogLevel","arrayTier","desc","InstanceCard","memo","adminInstance","maxCompactGroupNumber","deletedInstances","expertMode","extendObject","getMemory","getRestartSchedule","getSchedule","hidden","hosts","instance","key","openConfig","setCompact","setCompactGroup","setHost","setLogLevel","setMemoryLimitMB","setName","setRestartSchedule","setSchedule","setSentry","setTier","deleting","useState","mouseOver","setMouseOver","openCollapse","setCollapse","openSelectCompactGroup","setOpenSelectCompactGroup","openDialogCron","setOpenDialogCron","openDialogSchedule","setOpenDialogSchedule","openDialogText","setOpenDialogText","openDialogLogLevel","setOpenDialogLogLevel","openDialogDelete","setOpenDialogDelete","openDialogMemoryLimit","setOpenDialogMemoryLimit","openDialogHost","setOpenDialogHost","openDialogCompact","setOpenDialogCompact","openDialogTier","setOpenDialogTier","showLinks","setShowLinks","showStopAdminDialog","setShowStopAdminDialog","logLevel","logLevelValue","setLogLevelValue","logOnTheFlyValue","setLogOnTheFlyValue","compactGroup","compactValue","setCompactValue","maxCompactGroupNumberValue","setCompactGroupCountValue","tier","tierValue","setTierValue","host","hostValue","setHostValue","visibleEdit","handlerEdit","showModal","help","customModal","CustomModal","applyDisabled","textInput","defaultValue","memoryLimitMB","onApply","FormControl","InputLabel","Select","el","target","MenuItem","formControl","FormControlLabel","control","Checkbox","checked","label","FormHelperText","addCompact","autoWidth","onOpen","preventDefault","selectStyle","Button","stylevariable","fill","_","idx","hostInfo","stopAdminDialog","result","common","enabled","secondCardInfo","clsx","collapse","collapseOff","CardContent","root","cardContent","overflowAuto","collapseIcon","close","gutterBottom","instanceName","running","mode","State","connectedToHost","alive","connected","version","displayFlex","marginRight5","inputOutput","stateInput","marginLeft5","stateOutput","memoryIcon","IconButton","size","loglevelIcon","logLevelObject","modeSchedule","scheduleIcon","checkCompact","compact","supportCompact","adapter","maxWidth300","event","IsVisible","config","Hidden","smUp","disabled","hiddenOpacity","footerBlock","checkSentry","CardMedia","sentry","contrast0","linksDialog","cronDialog","getLanguage","Card","imageBlock","instanceStateNotAlive1","instanceStateAliveNotConnected1","instanceStateAliveAndConnected1","versionDate","Fab","onMouseOver","onMouseOut","fab","cardContentH5","onMouseMove","onMouseEnter","onMouseLeave","marginTop10","enableButton","onFocus","canStart","hide","xsDown","position","margin","minHeight","background","palette","boxShadow","flexDirection","transition","justifyContent","content","zIndex","top","left","backgroundSize","installed","bottom","right","greenText","success","dark","type","marginTop","opacity","cursor","marginLeft","marginBottom","transform","buttonUpdate","alignSelf","fontSize","paddingLeft","paddingTop","visibility","green","red","objectFit","filter","addCompactButton","paddingBottom","row","paddingRight","update","invisible","smallAvatar","statusIndicator","statusIcon_green","statusIcon_red","statusIcon_orange","statusIcon_orangeDevice","statusIcon_blue","statusIcon_gray","statusIcon_grey","instanceIcon","table","minWidth","tableRow","grey","blue","orange","orangeDevice","transparent","iframe","silly","debug","info","warn","amber","error","grow","flexGrow","tableRender","tableLayout","cards","hidden1250","visible1250","visible1050","hidden1050","hidden800","visible800","hidden570","visible570","hidden1230","hidden380","gridStyle","secondaryHeading","secondaryHeadingDiv","secondaryHeadingDivDiv","formControl2","wrapperAvatar","selectWrapper","ram","paddingRight200","instanceStateNotEnabled1","instanceStateNotEnabled2","instanceStateNotAlive2","instanceStateAliveNotConnected2","instanceStateAliveAndConnected2","width150","desktopRow","desktopIcon","desktopRowContent","desktopButton","expanded","getInstanceStatus","getModeIcon","onExpandRow","desktop","innerWidth","status","stateTooltip","Accordion","square","AccordionSummary","undefined","expandIcon","wrap","AccordionDetails","xs","sm","md","node","useStyles","makeStyles","maxHeight","overflowHidden","pre","rowBlock","select","checkbox","statusIcon_1","statusIcon_2","statusIcon_3","statusIcon_4","statusIcon_5","statusIcon_6","menuWrapper","iconWrapper","textWrapper","menuValue","modeArray","statusArray","none","_class","not_alive","alive_not_connected","alive_no_device","InstanceFilterDialog","cb","filterMode","filterStatus","setOpen","modeCheck","setModeCheck","statusCheck","setStatusCheck","document","body","removeChild","ThemeProvider","getThemeName","filterIcon","DialogContent","dividers","keys","DialogActions","autoFocus","iconStyle","wrapperName","wrapperChildren","accordionDetails","accordion","onExpand","MaterialDynamicIcon","objIconBool","iconName","Instances","translate","word","arg1","arg2","wordCache","getInstances","data","a","start","Date","now","instances","instancesWorker","forEach","push","memRssId","currentHost","states","socket","getState","processes","mem","val","i","inst","_id","m","formatted","sort","b","pA","split","pB","numA","parseInt","numB","nameA","nameB","newState","objId","replace","titleLang","en","localLinks","localLink","names","linkName","urls","replaceLink","objects","hostname","protocol","url","onlyWWW","adminUI","jsonConfig","materialize","compactMode","runAsCompactMode","loglevel","console","log","Math","round","_cacheList","setState","getParamsLocalAndPanel","readBaseSettings","then","system","catch","alert","onlyCurrentHost","JSON","parse","localStorage","getItem","playArrow","viewMode","viewCategory","filterCompactGroup","onStateChange","oldState","dialog","dialogProp","statesUpdateTimer","clearTimeout","shouldUpdateAfterDialogClosed","setTimeout","forceUpdate","Router","doNavigate","webExtension","native","webInstance","connection","isRunning","isCompactGroup","isCompact","isCompactGroupCheck","adapters","getSentrySettings","plugins","isSentry","disableDataReporting","schedule","getName","isModeSchedule","getMemoryLimitMB","getInstanceHost","restartSchedule","getInputOutput","isAlive","isConnectedToHost","isConnected","okSymbol","okSymbolInner","getStatusFilter","getObject","setObject","executeCommand","panel","prevState","changeSetStateBool","setItem","stringify","changeSetState","changeStartedStopped","newValue","changeCompactGroup","expandedFolder","runningInstances","folderOpen","hostData","percent","memFree","filterText","columns","onlyExpert","actions","restart","ramLimit","events","promises","oneReload","inputRef","createRef","registerHandler","getData","getHostsData","subscribeStates","unregisterHandler","getForeignStates","getAdapters","statesProm","getStates","Promise","all","_adapters","subscribed","isUnsubscribe","func","unsubscribeState","subscribeState","call","headers","column","index","TableCell","level","currentHostNoPrefix","getLogLevelIcon","currentSentry","nameId","category","allowInstanceSettings","repository","allowInstanceDelete","allowInstanceLink","toLowerCase","includes","removeItem","current","cacheInstances","render","clearAllFilters","textAlign","categoryArray","pos","indexOf","splice","getHostInfo","toString","memAvailable","freemem","memState","totalmem","hardware","typingTimer","LinearProgress","Paper","Config","configStored","dateFormat","isFloatComma","menuPadding","themeName","onRegisterIframeRef","ref","onUnregisterIframeRef","TabContainer","TabHeader","appendChild","ReactDOM","filterActive","CustomSelectButton","arrayItem","buttonIcon","TextField","handleFilterChange","InputProps","endAdornment","InputAdornment","currentHostName","TabContent","getPanels","location","getLocation","withWidth","compactButtons","main"],"mappings":"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","file":"static/js/10.c6cfac01.chunk.js","sourcesContent":["\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar React = _interopRequireWildcard(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M11.99 2C6.47 2 2 6.48 2 12s4.47 10 9.99 10C17.52 22 22 17.52 22 12S17.52 2 11.99 2zM12 20c-4.42 0-8-3.58-8-8s3.58-8 8-8 8 3.58 8 8-3.58 8-8 8z\"\n}), /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M12.5 7H11v6l5.25 3.15.75-1.23-4.5-2.67z\"\n})), 'Schedule');\n\nexports.default = _default;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar React = _interopRequireWildcard(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M6 19h4V5H6v14zm8-14v14h4V5h-4z\"\n}), 'Pause');\n\nexports.default = _default;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar React = _interopRequireWildcard(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M3 19h6v-7H3v7zm7 0h12v-7H10v7zM3 5v6h19V5H3z\"\n}), 'ViewCompact');\n\nexports.default = _default;","export default __webpack_public_path__ + \"static/media/filter.ddf40c28.svg\";","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar React = _interopRequireWildcard(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M20 8h-2.81c-.45-.78-1.07-1.45-1.82-1.96L17 4.41 15.59 3l-2.17 2.17C12.96 5.06 12.49 5 12 5c-.49 0-.96.06-1.41.17L8.41 3 7 4.41l1.62 1.63C7.88 6.55 7.26 7.22 6.81 8H4v2h2.09c-.05.33-.09.66-.09 1v1H4v2h2v1c0 .34.04.67.09 1H4v2h2.81c1.04 1.79 2.97 3 5.19 3s4.15-1.21 5.19-3H20v-2h-2.09c.05-.33.09-.66.09-1v-1h2v-2h-2v-1c0-.34-.04-.67-.09-1H20V8zm-6 8h-4v-2h4v2zm0-4h-4v-2h4v2z\"\n}), 'BugReport');\n\nexports.default = _default;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport {withStyles} from '@material-ui/core/styles/index';\r\n\r\nimport Button from '@material-ui/core/Button';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport Dialog from '@material-ui/core/Dialog';\r\n\r\nimport IconOk from '@material-ui/icons/Check';\r\nimport IconCancel from '@material-ui/icons/Cancel';\r\nimport IconClear from '@material-ui/icons/Delete';\r\n\r\nimport ComplexCron from '../Components/ComplexCron';\r\n\r\nimport I18n from '../i18n';\r\n\r\n// Generate cron expression\r\nconst styles = theme => ({\r\n    headerID: {\r\n        fontWeight: 'bold',\r\n        fontStyle: 'italic'\r\n    },\r\n    radio: {\r\n        display: 'inline-block'\r\n    },\r\n    dialogPaper: {\r\n        height: 'calc(100% - 96px)'\r\n    }\r\n});\r\n\r\nclass DialogComplexCron extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        let cron;\r\n        if (this.props.cron && typeof this.props.cron === 'string' && this.props.cron.replace(/^[\"']/, '')[0] !== '{') {\r\n            cron = this.props.cron.replace(/['\"]/g, '').trim();\r\n        } else {\r\n            cron = this.props.cron || '{}';\r\n            if (typeof cron === 'string') {\r\n                cron = cron.replace(/^[\"']/, '').replace(/[\"']\\n?$/, '');\r\n            }\r\n        }\r\n\r\n        this.state =  {\r\n            cron,\r\n        };\r\n    }\r\n\r\n    handleCancel() {\r\n        this.props.onClose();\r\n    }\r\n\r\n    handleOk() {\r\n        this.props.onOk(this.state.cron);\r\n        this.props.onClose();\r\n    }\r\n\r\n    handleClear() {\r\n        this.props.onOk(false);\r\n        this.props.onClose();\r\n    }\r\n\r\n    render() {\r\n        return <Dialog\r\n            disableBackdropClick\r\n            disableEscapeKeyDown\r\n            maxWidth=\"md\"\r\n            fullWidth={true}\r\n            classes={{paper: this.props.classes.dialogPaper}}\r\n            open={true}\r\n            aria-labelledby=\"cron-dialog-title\"\r\n        >\r\n            <DialogTitle id=\"cron-dialog-title\">{this.props.title || I18n.t('ra_Define schedule...')}</DialogTitle>\r\n            <DialogContent style={{height: '100%', overflow: 'hidden'}}>\r\n                <ComplexCron\r\n                    cronExpression={this.state.cron}\r\n                    onChange={cron => this.setState({cron})}\r\n                    language={I18n.getLanguage()}\r\n                />\r\n            </DialogContent>\r\n            <DialogActions>\r\n                {!!this.props.clearButton && <Button variant=\"contained\" onClick={() => this.handleClear()} startIcon={<IconClear />}>{this.props.clear || I18n.t('ra_Clear')}</Button>}\r\n                <Button variant=\"contained\" onClick={() => this.handleOk()} color=\"primary\" startIcon={<IconOk />}>{this.props.ok || I18n.t('ra_Ok')}</Button>\r\n                <Button variant=\"contained\" onClick={() => this.handleCancel()} startIcon={<IconCancel />}>{this.props.cancel || I18n.t('ra_Cancel')}</Button>\r\n            </DialogActions>\r\n        </Dialog>;\r\n    }\r\n}\r\n\r\nDialogComplexCron.propTypes = {\r\n    classes: PropTypes.object,\r\n    onClose: PropTypes.func,\r\n    onOk: PropTypes.func.isRequired,\r\n    title: PropTypes.string,\r\n    cron: PropTypes.string,\r\n    cancel: PropTypes.string,\r\n    ok: PropTypes.string,\r\n    simple: PropTypes.bool,\r\n    language: PropTypes.string,\r\n    clearButton: PropTypes.bool,\r\n};\r\n\r\nexport default withStyles(styles)(DialogComplexCron);\r\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\n\nimport Icon from './Icon';\nimport Utils from './Utils';\n\nconst styles = theme => ({\n    div: {\n        borderRadius: 3,\n        padding: '0 3px',\n        lineHeight: '20px',\n        whiteSpace: 'nowrap',\n        overflow: 'hidden',\n        display: 'flex',\n        alignItems: 'center'\n    },\n    icon: {\n        width: 16,\n        height: 16,\n        marginRight: 8,\n        verticalAlign: 'middle',\n    },\n    text: {\n        display: 'inline-block',\n        overflow: 'hidden',\n        textOverflow: 'ellipsis'\n    }\n});\n\nconst TextWithIcon = props => {\n    let item = props.value;\n    let prefix = props.removePrefix || '';\n\n    if (typeof item === 'string') {\n        const list = props.list || props.options;\n        if (props.list) {\n            if (Array.isArray(list)) {\n                const _item = list.find(obj => obj._id === prefix + item);\n                if (_item) {\n                    item = {\n                        name: Utils.getObjectNameFromObj(_item, props.lang).replace('system.group.', ''),\n                        value: _item._id,\n                        icon: _item.common?.icon,\n                        color: _item.common?.color,\n                    };\n                } else {\n                    item = {\n                        name: item,\n                        value: prefix + item,\n                    };\n                }\n            } else if (list[prefix + item]) {\n                item = {\n                    name: Utils.getObjectNameFromObj(list[prefix + item], props.lang).replace('system.group.', ''),\n                    value: list[prefix + item]._id,\n                    icon: list[prefix + item].common?.icon,\n                    color: list[prefix + item].common?.color,\n                };\n            } else {\n                item = {\n                    name: item,\n                    value: prefix + item,\n                };\n            }\n        } else {\n            item = {\n                name: item,\n                value: prefix + item,\n            };\n        }\n    } else if (!item || typeof item !== 'object') {\n        item = {\n            name: '',\n            value: '',\n        };\n    } else {\n        item = {\n            name: Utils.getObjectNameFromObj(item, props.lang)\n                .replace('system.group.', '')\n                .replace('system.user.', '')\n                .replace('enum.rooms.', '')\n                .replace('enum.functions.', ''),\n            value: item._id,\n            icon: item.common?.icon,\n            color: item.common?.color,\n        };\n    }\n\n    const style = item?.color ? {\n        border:`1px solid ${Utils.invertColor(item?.color)}`,\n        color: Utils.getInvertedColor(item?.color, props.themeType, true) || undefined,\n        backgroundColor: item?.color\n    } : {};\n\n    return <div style={Object.assign({}, props.style, style)} className={Utils.clsx(props.className, props.classes.div, props.moreClasses?.root)} title={props.title || item.value}>\n        {item?.icon ? <Icon src={item?.icon} className={Utils.clsx(props.classes.icon, props.moreClasses?.icon)} /> : null}<div className={Utils.clsx(props.classes.text, props.moreClasses?.text)}>{item?.name}</div>\n    </div>;\n}\n\nTextWithIcon.propTypes = {\n    t: PropTypes.func,\n    lang: PropTypes.string,\n    themeType: PropTypes.string,\n    value: PropTypes.oneOfType([PropTypes.string, PropTypes.object]),\n    list: PropTypes.oneOfType([PropTypes.array, PropTypes.object]),\n    options: PropTypes.oneOfType([PropTypes.array, PropTypes.object]),\n    className: PropTypes.string,\n    style: PropTypes.object,\n    title: PropTypes.string,\n    removePrefix: PropTypes.string,\n    moreClasses: PropTypes.object,\n};\n\nexport default withStyles(styles)(TextWithIcon);","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar React = _interopRequireWildcard(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M14 5h8v2h-8zm0 5.5h8v2h-8zm0 5.5h8v2h-8zM2 11.5C2 15.08 4.92 18 8.5 18H9v2l3-3-3-3v2h-.5C6.02 16 4 13.98 4 11.5S6.02 7 8.5 7H12V5H8.5C4.92 5 2 7.92 2 11.5z\"\n}), 'LowPriority');\n\nexports.default = _default;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar React = _interopRequireWildcard(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M21 3.01H3c-1.1 0-2 .9-2 2V9h2V4.99h18v14.03H3V15H1v4.01c0 1.1.9 1.98 2 1.98h18c1.1 0 2-.88 2-1.98v-14c0-1.11-.9-2-2-2zM11 16l4-4-4-4v3H1v2h10v3z\"\n}), 'Input');\n\nexports.default = _default;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar React = _interopRequireWildcard(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2z\"\n}), 'Lens');\n\nexports.default = _default;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar React = _interopRequireWildcard(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M4 6h18V4H4c-1.1 0-2 .9-2 2v11H0v3h14v-3H4V6zm19 2h-6c-.55 0-1 .45-1 1v10c0 .55.45 1 1 1h6c.55 0 1-.45 1-1V9c0-.55-.45-1-1-1zm-1 9h-4v-7h4v7z\"\n}), 'Devices');\n\nexports.default = _default;","import PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport {\n    Grid,\n    Tooltip,\n    Typography\n} from '@material-ui/core';\nconst styles = theme => ({\n    nowrap:{\n        flexFlow: 'nowrap',\n        overflow: 'hidden'\n    },\n    width:{\n        width:'100%',\n        overflow: 'hidden'\n\n    }\n})\nconst InstanceInfo = props => {\n    return <Grid\n        item\n        container\n        title={props.icon ? '' : props.tooltip || ''}\n        alignItems=\"center\"\n        direction=\"row\"\n        spacing={ 1 }\n        className={props.classes.nowrap}\n    >\n        <Grid item>\n            { props.icon &&\n                <Tooltip title={ props.tooltip || '' }>\n                    { props.icon }\n                </Tooltip>\n            }\n        </Grid>\n        <Grid \n        className={props.classes.width}\n         item>\n            <Tooltip title={ props.tooltip || '' }>\n                <Typography component=\"div\">\n                    { props.children }\n                </Typography>\n            </Tooltip>\n        </Grid>\n    </Grid>;\n}\n\nInstanceInfo.propTypes = {\n    children: PropTypes.node,\n    icon: PropTypes.node,\n    tooltip: PropTypes.string\n};\n\nexport default withStyles(styles)(InstanceInfo);","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\n\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport Dialog from '@material-ui/core/Dialog';\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar';\nimport Avatar from '@material-ui/core/Avatar';\n\nimport Utils from '../Utils';\n\nconst styles = theme => ({\n    img: {\n        width: '100%',\n        height: '100%',\n    }\n});\n\nclass LinksDialog extends Component {\n    render() {\n        if (!this.props.links || !this.props.links.length) {\n            return null;\n        }\n        const firstPort = this.props.links[0].port;\n        const showPort = this.props.links.find(item => item.port !== firstPort);\n\n        return <Dialog onClose={() => this.props.onClose()} open={true}>\n            <DialogTitle>{this.props.t('Links')}</DialogTitle>\n            <List>\n                {this.props.links.map(link => <ListItem\n                    button\n                    style={link.color ? {\n                        backgroundColor: link.color,\n                        color: Utils.getInvertedColor(link.color, this.props.themeType, true)\n                    } : {}}\n                    onClick={e => {\n                        e.stopPropagation();\n                        window.open(link.link, this.props.instanceId);\n                        this.props.onClose();\n                    }}\n                    key={link.name}\n                >\n                    <ListItemAvatar>\n                        <Avatar variant=\"rounded\">\n                            <img className={this.props.classes.img} src={this.props.image} alt={this.props.instanceId}/>\n                        </Avatar>\n                    </ListItemAvatar>\n                    <ListItemText primary={link.name + (showPort ? ' [:' + link.port + ']' : '')} />\n                </ListItem>)}\n            </List>\n        </Dialog>;\n    }\n}\n\nLinksDialog.propTypes = {\n    links: PropTypes.array.isRequired,\n    onClose: PropTypes.func.isRequired,\n    t: PropTypes.func.isRequired,\n    instanceId: PropTypes.string.isRequired,\n    image: PropTypes.string,\n    themeType: PropTypes.string,\n};\n\nexport default withStyles(styles)(LinksDialog);","import React, { memo, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport clsx from 'clsx';\n\nimport {\n    Button,\n    Card,\n    CardContent,\n    CardMedia, Checkbox,\n    Fab,\n    FormControl,\n    FormControlLabel, FormHelperText,\n    Hidden,\n    IconButton,\n    InputLabel,\n    MenuItem,\n    Select,\n    Tooltip,\n    Typography\n} from '@material-ui/core';\n\nimport MoreVertIcon from '@material-ui/icons/MoreVert';\nimport RefreshIcon from '@material-ui/icons/Refresh';\nimport BuildIcon from '@material-ui/icons/Build';\nimport InputIcon from '@material-ui/icons/Input';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport LowPriorityIcon from '@material-ui/icons/LowPriority';\nimport MemoryIcon from '@material-ui/icons/Memory';\nimport ScheduleIcon from '@material-ui/icons/Schedule';\nimport ViewCompactIcon from '@material-ui/icons/ViewCompact';\nimport EditIcon from '@material-ui/icons/Edit';\nimport PauseIcon from '@material-ui/icons/Pause';\nimport PlayArrowIcon from '@material-ui/icons/PlayArrow';\nimport ImportExportIcon from '@material-ui/icons/ImportExport';\nimport HostIcon from '@material-ui/icons/Storage';\n\nimport { green, red } from '@material-ui/core/colors';\n\nimport ComplexCron from '@iobroker/adapter-react/Dialogs/ComplexCron';\nimport I18n from '@iobroker/adapter-react/i18n';\nimport ConfirmDialog from '@iobroker/adapter-react/Dialogs/Confirm';\nimport TextWithIcon from '@iobroker/adapter-react/Components/TextWithIcon';\nimport SelectWithIcon from '@iobroker/adapter-react/Components/SelectWithIcon';\n\nimport sentry from '../../assets/sentry.svg';\nimport InstanceInfo from './InstanceInfo';\nimport State from '../State';\nimport CustomModal from '../CustomModal';\nimport LinksDialog from './LinksDialog';\nimport IsVisible from '../IsVisible';\n\nconst boxShadow = '0 2px 2px 0 rgba(0, 0, 0, .14),0 3px 1px -2px rgba(0, 0, 0, .12),0 1px 5px 0 rgba(0, 0, 0, .2)';\nconst boxShadowHover = '0 8px 17px 0 rgba(0, 0, 0, .2),0 6px 20px 0 rgba(0, 0, 0, .19)';\n\nconst styles = theme => ({\n    root: {\n        position: 'relative',\n        margin: 10,\n        width: 300,\n        minHeight: 200,\n        background: theme.palette.background.default,\n        boxShadow,\n        display: 'flex',\n        flexDirection: 'column',\n        transition: 'box-shadow 0.5s',\n        '&:hover': {\n            boxShadow: boxShadowHover\n        }\n    },\n    imageBlock: {\n        background: 'silver',\n        minHeight: 60,\n        display: 'flex',\n        padding: '0 10px 0 10px',\n        position: 'relative',\n        justifyContent: 'space-between',\n        transition: 'background 0.5s',\n    },\n    img: {\n        width: 45,\n        height: 45,\n        margin: 'auto 0',\n        position: 'relative',\n        '&:after': {\n            content: '\"\"',\n            position: 'absolute',\n            zIndex: 2,\n            top: 0,\n            left: 0,\n            width: '100%',\n            height: '100%',\n            background: 'url(\"img/no-image.png\") 100% 100% no-repeat',\n            backgroundSize: 'cover',\n            backgroundColor: '#fff',\n        }\n    },\n    installed: {\n        background: '#77c7ff8c'\n    },\n    /*update: {\n        background: '#10ff006b'\n    },*/\n    fab: {\n        position: 'absolute',\n        bottom: -20,\n        width: 40,\n        height: 40,\n        right: 20,\n    },\n    greenText: {\n        color: theme.palette.success.dark,\n    },\n\n    collapse: {\n        height: '100%',\n        backgroundColor: theme.palette.type === 'dark' ? '#4a4a4a' : '#d4d4d4',\n        position: 'absolute',\n        width: '100%',\n        zIndex: 3,\n        marginTop: 'auto',\n        bottom: 0,\n        transition: 'height 0.3s',\n        justifyContent: 'space-between',\n        display: 'flex',\n        flexDirection: 'column'\n    },\n    collapseOff: {\n        height: 0\n    },\n    close: {\n        width: '20px',\n        height: '20px',\n        opacity: '0.9',\n        cursor: 'pointer',\n        position: 'relative',\n        marginLeft: 'auto',\n        marginBottom: 10,\n        transition: 'all 0.6s ease',\n        '&:hover': {\n            transform: 'rotate(90deg)'\n        },\n        '&:before': {\n            position: 'absolute',\n            left: '9px',\n            content: '\"\"',\n            height: '20px',\n            width: '3px',\n            backgroundColor: '#ff4f4f',\n            transform: 'rotate(45deg)'\n        },\n        '&:after': {\n            position: 'absolute',\n            left: '9px',\n            content: '\"\"',\n            height: '20px',\n            width: '3px',\n            backgroundColor: '#ff4f4f',\n            transform: 'rotate(-45deg)'\n        },\n    },\n    footerBlock: {\n        background: theme.palette.background.default,\n        padding: 10,\n        display: 'flex',\n        justifyContent: 'space-between'\n    },\n    hidden: {\n        display: 'none'\n    },\n    buttonUpdate: {\n        border: '1px solid',\n        padding: '0px 7px',\n        borderRadius: 5,\n        display: 'flex',\n        alignItems: 'center',\n        cursor: 'pointer',\n        transition: 'background 0.5s',\n        '&:hover': {\n            background: '#00800026'\n        }\n    },\n    versionDate: {\n        alignSelf: 'center'\n    },\n    adapter: {\n        width: '100%',\n        fontWeight: 'bold',\n        fontSize: 16,\n        verticalAlign: 'middle',\n        paddingLeft: 8,\n        paddingTop: 16,\n        color: theme.palette.type === 'dark' ? '#333' : '#555'\n    },\n    hide: {\n        visibility: 'hidden'\n    },\n    button: {\n        padding: '5px',\n        transition: 'opacity 0.2s',\n        height: 34,\n    },\n    hiddenOpacity: {\n        opacity: 0,\n        cursor: 'default',\n    },\n    enabled: {\n        color: green[400],\n        '&:hover': {\n            backgroundColor: green[200]\n        }\n    },\n    disabled: {\n        color: red[400],\n        '&:hover': {\n            backgroundColor: red[200]\n        }\n    },\n    cardContent: {\n        marginTop: 16,\n        paddingTop: 0\n    },\n    sentry: {\n        width: 24,\n        height: 24,\n        objectFit: 'fill',\n        filter: 'invert(0%) sepia(90%) saturate(1267%) hue-rotate(-260deg) brightness(99%) contrast(97%)'\n    },\n    cardContentH5: {\n        height: '100%',\n        display: 'flex',\n        flexDirection: 'column',\n        justifyContent: 'space-between'\n    },\n    marginTop10: {\n        marginTop: 10\n    },\n    memoryIcon: {\n        color: '#dc8e00',\n    },\n    displayFlex: {\n        display: 'flex',\n    },\n    logLevel: {\n        width: '100%',\n        marginBottom: 5\n    },\n    hostInfo: {\n        width: '100%'\n    },\n    overflowAuto: {\n        overflow: 'auto'\n    },\n    collapseIcon: {\n        position: 'sticky',\n        right: 0,\n        top: 0,\n        background: theme.palette.type === 'dark' ? '#4a4a4a' : '#d4d4d4',\n        zIndex: 2\n    },\n    addCompact: {\n        width: '100%',\n        marginBottom: 5\n    },\n    addCompactButton: {\n        display: 'flex',\n        margin: 5,\n        justifyContent: 'space-around'\n    },\n    scheduleIcon: {\n        color: '#dc8e00'\n    },\n    marginRight5: {\n        marginRight: 5\n    },\n    marginLeft5: {\n        marginLeft: 5\n    },\n    enableButton: {\n        display: 'flex',\n        justifyContent: 'space-between'\n    },\n    instanceStateNotAlive1: {\n        backgroundColor: 'rgba(192, 192, 192, 0.7)'\n    },\n    /*instanceStateNotAlive2: {\n        backgroundColor: 'rgb(192 192 192 / 15%)'\n    },*/\n    instanceStateAliveNotConnected1: {\n        backgroundColor: 'rgba(255, 177, 0, 0.4)'\n    },\n    /*instanceStateAliveNotConnected2: {\n        backgroundColor: 'rgb(255 177 0  / 14%)'\n    },*/\n    instanceStateAliveAndConnected1: {\n        backgroundColor: 'rgba(0, 255, 0, 0.4)'\n    },\n    instanceName: {\n        fontSize: 16,\n        padding: 4,\n        paddingBottom: 15,\n        fontWeight: 'bold'\n    },\n    deleting: {\n        position: 'relative',\n        '&:before': {\n            content: '\"\"',\n            position: 'absolute',\n            top: 0,\n            left: 0,\n            width: '100%',\n            height: '100%',\n            zIndex: 100,\n            opacity: '.3 !important',\n            background: 'repeating-linear-gradient(135deg, #333, #333 10px, #888 10px, #888 20px)',\n        }\n    },\n    /*instanceStateAliveAndConnected2: {\n        backgroundColor: 'rgb(0 255 0 / 14%)'\n    }*/\n});\n\nconst arrayLogLevel = ['silly', 'debug', 'info', 'warn', 'error'];\nconst arrayTier = [{ value: 1, desc: \"1: Logic adapters\" }, { value: 2, desc: \"2: Data provider adapters\" }, { value: 3, desc: \"3: Other adapters\" }];\n\nconst InstanceCard = memo(({\n    adminInstance,\n    classes,\n    maxCompactGroupNumber,\n    deletedInstances,\n    expertMode,\n    extendObject,\n    getMemory,\n    getRestartSchedule,\n    getSchedule,\n    hidden,\n    hosts,\n    id,\n    instance,\n    key,\n    openConfig,\n    setCompact,\n    setCompactGroup,\n    setHost,\n    setLogLevel,\n    setMemoryLimitMB,\n    setName,\n    setRestartSchedule,\n    setSchedule,\n    setSentry,\n    setTier,\n    t,\n    themeType,\n    deleting,\n    item,\n}) => {\n    const [mouseOver, setMouseOver] = useState(false);\n\n    const [openCollapse, setCollapse] = useState(false);\n    const [openSelectCompactGroup, setOpenSelectCompactGroup] = useState(false);\n    const [openDialogCron, setOpenDialogCron] = useState(false);\n    const [openDialogSchedule, setOpenDialogSchedule] = useState(false);\n    const [openDialogText, setOpenDialogText] = useState(false);\n    const [openDialogLogLevel, setOpenDialogLogLevel] = useState(false);\n    const [openDialogDelete, setOpenDialogDelete] = useState(false);\n    const [openDialogMemoryLimit, setOpenDialogMemoryLimit] = useState(false);\n    const [openDialogHost, setOpenDialogHost] = useState(false);\n    const [openDialogCompact, setOpenDialogCompact] = useState(false);\n    const [openDialogTier, setOpenDialogTier] = useState(false);\n\n    const [showLinks, setShowLinks] = useState(false);\n    const [showStopAdminDialog, setShowStopAdminDialog] = useState(false);\n\n    const [logLevelValue, setLogLevelValue] = useState(item.logLevel);\n    const [logOnTheFlyValue, setLogOnTheFlyValue] = useState(false);\n    const [compactValue, setCompactValue] = useState(item.compactGroup || 0);\n    const [maxCompactGroupNumberValue, setCompactGroupCountValue] = useState(maxCompactGroupNumber);\n    const [tierValue, setTierValue] = useState(item.tier);\n    const [hostValue, setHostValue] = useState(instance.host);\n\n    const [visibleEdit, handlerEdit] = useState(false);\n\n    let showModal = false;\n    let title;\n    let help = '';\n    if (openDialogText) {\n        title = t('Enter title for %s', instance.id);\n        showModal = true;\n    } else if (openDialogLogLevel) {\n        title = t('Edit log level rule for %s', instance.id);\n        showModal = true;\n    } else if (openDialogDelete) {\n        title = t('Please confirm');\n        showModal = true;\n    } else if (openDialogMemoryLimit) {\n        title = t('Edit memory limit rule for %s', instance.id);\n        help = t('Default V8 has a memory limit of 512mb on 32-bit systems, and 1gb on 64-bit systems. The limit can be raised by setting --max-old-space-size to a maximum of ~1gb (32-bit) and ~1.7gb (64-bit)');\n        showModal = true;\n    } else if (openDialogHost) {\n        title = t('Edit host for %s', instance.id);\n        showModal = true;\n    } else if (openDialogCompact) {\n        title = t('Edit compact groups for %s', instance.id);\n        showModal = true;\n    } else if (openDialogTier) {\n        title = t('Set tier for %s', instance.id);\n        help = t('Tiers define the order of adapters when the system starts.');\n        showModal = true;\n    }\n\n    const customModal = showModal ? <CustomModal\n        title={title}\n        help={help}\n        open={true}\n        applyDisabled={openDialogText || openDialogMemoryLimit}\n        textInput={openDialogText || openDialogMemoryLimit}\n        defaultValue={openDialogText ? item.name : openDialogMemoryLimit ? item.memoryLimitMB : ''}\n        onApply={value => {\n            if (openDialogLogLevel) {\n                setLogLevel(instance, logLevelValue, logOnTheFlyValue);\n                setOpenDialogLogLevel(false);\n            } else if (openDialogText) {\n                setName(instance, value);\n                setOpenDialogText(false);\n            } else if (openDialogDelete) {\n                setOpenDialogDelete(false);\n                deletedInstances(instance);\n            } else if (openDialogMemoryLimit) {\n                setMemoryLimitMB(instance, value)\n                setOpenDialogMemoryLimit(false);\n            } else if (openDialogCompact) {\n                setCompactGroup(instance, compactValue);\n                setOpenDialogCompact(false);\n            } else if (openDialogTier) {\n                setTier(instance, tierValue);\n                setOpenDialogTier(false);\n            } else if (openDialogHost) {\n                setHost(instance, hostValue);\n                setOpenDialogHost(false);\n            }\n        }}\n        onClose={() => {\n            if (openDialogLogLevel) {\n                setLogLevelValue(item.logLevel);\n                setLogOnTheFlyValue(false);\n                setOpenDialogLogLevel(false);\n            } else if (openDialogText) {\n                setOpenDialogText(false);\n            } else if (openDialogDelete) {\n                setOpenDialogDelete(false);\n            } else if (openDialogMemoryLimit) {\n                setOpenDialogMemoryLimit(false);\n            } else if (openDialogCompact) {\n                setCompactValue(item.compactGroup);\n                setCompactGroupCountValue(maxCompactGroupNumber);\n                setOpenDialogCompact(false);\n            } else if (openDialogTier) {\n                setTierValue(item.tier);\n                setOpenDialogTier(false);\n            } else if (openDialogHost) {\n                setHostValue(instance.host);\n                setOpenDialogHost(false);\n            }\n        }}\n    >\n        {openDialogLogLevel && <FormControl className={classes.logLevel} variant=\"outlined\" >\n            <InputLabel>{t('log level')}</InputLabel>\n            <Select\n                variant=\"standard\"\n                value={logLevelValue}\n                fullWidth\n                onChange={el => setLogLevelValue(el.target.value)}\n            >\n                {arrayLogLevel.map(el => <MenuItem key={el} value={el}>\n                    {t(el)}\n                </MenuItem>)}\n            </Select>\n        </FormControl>}\n        {openDialogLogLevel && <FormControl className={classes.formControl} variant=\"outlined\" >\n            <FormControlLabel\n                control={<Checkbox checked={logOnTheFlyValue} onChange={e => setLogOnTheFlyValue(e.target.checked)} />}\n                label={t('Without restart')}\n            />\n            <FormHelperText>{logOnTheFlyValue ? t('Will be reset to the saved log level after restart of adapter') : t('Log level will be saved permanently')}</FormHelperText>\n        </FormControl>}\n        {openDialogCompact && <FormControl className={classes.addCompact} variant=\"outlined\" >\n            <InputLabel>{t('compact groups')}</InputLabel>\n            <Select\n                variant=\"standard\"\n                autoWidth\n                onClose={e => setOpenSelectCompactGroup(false)}\n                onOpen={e => setOpenSelectCompactGroup(true)}\n                open={openSelectCompactGroup}\n                value={compactValue === 1 ? 'default' : compactValue === '0' ? \"controller\" : !compactValue ? 'default' : compactValue || 'default'}\n                onChange={el => setCompactValue(el.target.value)}\n            >\n                <div onClick={(e) => {\n                    e.preventDefault();\n                    e.stopPropagation();\n                }}\n                    className={classes.selectStyle}>\n                    <Button onClick={e => {\n                        setOpenSelectCompactGroup(false);\n                        setCompactValue(maxCompactGroupNumberValue + 1);\n                        setCompactGroupCountValue(maxCompactGroupNumberValue + 1);\n                    }} variant=\"outlined\" stylevariable='outlined'>{t('Add compact group')}</Button>\n                </div>\n                <MenuItem value=\"controller\">\n                    {t('with controller')}\n                </MenuItem>\n                <MenuItem value=\"default\">\n                    {t('default group')}\n                </MenuItem>\n                {Array(maxCompactGroupNumberValue - 1).fill().map((_, idx) => <MenuItem key={idx} value={idx + 2}>\n                    {idx + 2}\n                </MenuItem>)}\n            </Select>\n        </FormControl>}\n        {openDialogTier && <FormControl className={classes.logLevel} variant=\"outlined\" >\n            <InputLabel>{t('Tiers')}</InputLabel>\n            <Select\n                variant=\"standard\"\n                value={tierValue}\n                fullWidth\n                onChange={el => setTierValue(el.target.value)}\n            >\n                {arrayTier.map(el => <MenuItem key={el.value} value={el.value}>\n                    {t(el.desc)}\n                </MenuItem>)}\n            </Select>\n        </FormControl>}\n        {openDialogDelete && t('Are you sure you want to delete the instance %s?', instance.id)}\n        {openDialogHost && <SelectWithIcon\n            themeType={themeType}\n            value={hostValue}\n            list={hosts}\n            removePrefix=\"system.host.\"\n            fullWidth\n            className={classes.hostInfo}\n            onChange={el => setHostValue(el)}\n        />}\n    </CustomModal>\n        : null;\n\n    const stopAdminDialog = showStopAdminDialog ? <ConfirmDialog\n        title={t('Please confirm')}\n        text={t('stop_admin', adminInstance)}\n        ok={t('Stop admin')}\n        onClose={result => {\n            result && extendObject(showStopAdminDialog, { common: { enabled: false } });\n            setShowStopAdminDialog(false);\n        }}\n    /> : null;\n\n    const secondCardInfo = (openCollapse || mouseOver) && !deleting ?\n        <div className={clsx(classes.collapse, !openCollapse ? classes.collapseOff : '', deleting && classes.deleting)}>\n            <CardContent classes={{ root: classes.cardContent }} className={classes.overflowAuto}>\n                <div className={classes.collapseIcon}>\n                    <div className={classes.close} onClick={() => setCollapse(false)} />\n                </div>\n                <Typography gutterBottom component={'span'} variant={'body2'}>\n                    <span className={classes.instanceName}>{instance.id}</span>\n                    {item.running && instance.mode === 'daemon' && <State state={item.connectedToHost} >{t('Connected to host')}</State>}\n                    {item.running && instance.mode === 'daemon' && <State state={item.alive} >{t('Heartbeat')}</State>}\n                    {item.running && item.connected !== null &&\n                        <State state={!!item.connected}>\n                            {typeof item.connected === 'string' ? t('Connected:') + ' ' + (item.connected || '-') : t('Connected to device or service')}\n                        </State>\n                    }\n\n                    <InstanceInfo tooltip={t('Installed')}>\n                        v{instance.version}\n                    </InstanceInfo>\n\n                    {item.running && <InstanceInfo icon={<MemoryIcon />} tooltip={t('RAM usage')}>\n                        {(instance.mode === 'daemon' && item.running ? getMemory(id) : '-.--') + ' MB'}\n                    </InstanceInfo>}\n\n                    {item.running && expertMode &&\n                        <div className={classes.displayFlex}>\n                            <InstanceInfo icon={<ImportExportIcon />} tooltip={t('events')}>\n                                <div className={classes.displayFlex}>\n                                    <Tooltip title={t('input events')}>\n                                        <div className={classes.marginRight5}>⇥{item.inputOutput.stateInput}</div>\n                                    </Tooltip>\n                                    /\n                                    <Tooltip title={t('output events')}>\n                                        <div className={classes.marginLeft5}>↦{item.inputOutput.stateOutput}</div>\n                                    </Tooltip>\n                                </div>\n                            </InstanceInfo>\n                        </div>\n                    }\n\n                    {expertMode && <div className={classes.displayFlex}>\n                        <InstanceInfo\n                            icon={<MemoryIcon className={classes.memoryIcon} />}\n                            tooltip={t('RAM limit')}\n                        >\n                            {(item.memoryLimitMB ? item.memoryLimitMB : '-.--') + ' MB'}\n                        </InstanceInfo>\n                        <Tooltip title={t('Edit')}>\n                            <IconButton\n                                size=\"small\"\n                                className={classes.button}\n                                onClick={() => setOpenDialogMemoryLimit(true)}\n                            >\n                                <EditIcon />\n                            </IconButton>\n                        </Tooltip>\n                    </div>}\n\n                    {expertMode && <div className={classes.displayFlex}>\n                        <InstanceInfo icon={item.loglevelIcon} tooltip={item.logLevelObject === item.logLevel ? `${t('loglevel')} ${item.logLevel}` : `${t('saved:')} ${item.logLevelObject} / ${t('actual:')} ${item.logLevel}`}>\n                            {item.logLevelObject === item.logLevel ? item.logLevel : `${item.logLevelObject} / ${item.logLevel}`}\n                        </InstanceInfo>\n                        <Tooltip title={t('Edit')}>\n                            <IconButton\n                                size=\"small\"\n                                className={classes.button}\n                                onClick={() => setOpenDialogLogLevel(true)}\n                            >\n                                <EditIcon />\n                            </IconButton>\n                        </Tooltip>\n                    </div>}\n\n                    {item.modeSchedule && <div className={classes.displayFlex}>\n                        <InstanceInfo icon={<ScheduleIcon />} tooltip={t('schedule_group')}>\n                            {getSchedule(id) || '-'}\n                        </InstanceInfo>\n                        <Tooltip title={t('Edit')}>\n                            <IconButton\n                                size=\"small\"\n                                className={classes.button}\n                                onClick={() => setOpenDialogSchedule(true)}\n                            >\n                                <EditIcon />\n                            </IconButton>\n                        </Tooltip>\n                    </div>}\n\n                    {expertMode && (instance.mode === 'daemon') &&\n                        <div className={classes.displayFlex}>\n                            <InstanceInfo\n                                icon={<ScheduleIcon className={classes.scheduleIcon} />}\n                                tooltip={t('restart')}\n                            >\n                                {getRestartSchedule(id) || '-'}\n                            </InstanceInfo>\n                            <Tooltip title={t('Edit')}>\n                                <IconButton\n                                    size=\"small\"\n                                    className={classes.button}\n                                    onClick={() => setOpenDialogCron(true)}\n                                >\n                                    <EditIcon />\n                                </IconButton>\n                            </Tooltip>\n                        </div>\n                    }\n\n                    {expertMode && item.checkCompact && item.compact && item.supportCompact &&\n                        <div className={classes.displayFlex}>\n                            <InstanceInfo icon={<ViewCompactIcon className={classes.marginRight} color=\"inherit\" />} tooltip={t('compact groups')}>\n                                {item.compactGroup === 1 ? 'default' : item.compactGroup === '0' ? \"controller\" : !item.compactGroup ? 'default' : item.compactGroup || 'default'}\n                            </InstanceInfo>\n                            <Tooltip title={t('Edit')}>\n                                <IconButton\n                                    size=\"small\"\n                                    className={classes.button}\n                                    onClick={e => {\n                                        setOpenDialogCompact(true);\n                                        e.stopPropagation();\n                                    }}\n                                >\n                                    <EditIcon />\n                                </IconButton>\n                            </Tooltip>\n                        </div>}\n\n                    {expertMode && <div className={classes.displayFlex}>\n                        <InstanceInfo icon={<LowPriorityIcon className={classes.marginRight} color=\"inherit\" />} tooltip={t('Start order (tier)')}>\n                            {instance.adapter === 'admin' ? t('Always first') : (arrayTier.find(el => el.value === item.tier)?.desc || arrayTier[2])}\n                        </InstanceInfo>\n                        {instance.adapter !== 'admin' ? <Tooltip title={t('Edit start order (tier)')}>\n                            <IconButton\n                                size=\"small\"\n                                className={classes.button}\n                                onClick={e => {\n                                    setOpenDialogTier(true);\n                                    e.stopPropagation();\n                                }}\n                            >\n                                <EditIcon />\n                            </IconButton>\n                        </Tooltip> : null}\n                    </div>}\n\n                    {hosts.length > 1 || (hosts.length && hosts[0].common?.name !== instance.host) ? <div className={clsx(classes.displayFlex, classes.maxWidth300)}>\n                        <InstanceInfo icon={<HostIcon className={classes.marginRight} />} tooltip={t('Host for this instance')}>\n                            {<TextWithIcon value={instance.host} list={hosts} removePrefix=\"system.host.\" themeType={themeType} />}\n                        </InstanceInfo>\n                        <Tooltip title={t('Edit')}>\n                            <IconButton\n                                size=\"small\"\n                                className={classes.button}\n                                onClick={event => {\n                                    setOpenDialogHost(true);\n                                    event.stopPropagation();\n                                }}\n                            >\n                                <EditIcon />\n                            </IconButton>\n                        </Tooltip>\n                    </div> : null}\n\n                    <IsVisible config={item} name=\"allowInstanceSettings\">\n                        <Hidden smUp>\n                            <IconButton\n                                disabled={!instance.config}\n                                size=\"small\"\n                                className={clsx(classes.button, !instance.config && classes.hiddenOpacity)}\n                                onClick={() => openConfig(id)}\n                            >\n                                <BuildIcon />\n                            </IconButton>\n                        </Hidden>\n                    </IsVisible>\n                </Typography>\n            </CardContent>\n\n            <div className={classes.footerBlock}>\n                <IsVisible config={item} name=\"allowInstanceDelete\">\n                    <div className={classes.displayFlex}>\n                        <Tooltip title={t('Delete')}>\n                            <IconButton\n                                size=\"small\"\n                                className={classes.button}\n                                onClick={() => setOpenDialogDelete(true)}\n                            >\n                                <DeleteIcon />\n                            </IconButton>\n                        </Tooltip>\n                    </div>\n                </IsVisible>\n\n                {expertMode && item.checkSentry && <div className={classes.displayFlex}>\n                    <Tooltip title=\"sentry\">\n                        <IconButton\n                            size=\"small\"\n                            className={classes.button}\n                            onClick={() => setSentry(instance)}\n                        >\n                            <CardMedia\n                                className={clsx(classes.sentry, !item.sentry && classes.contrast0)}\n                                component=\"img\"\n                                image={sentry}\n                            />\n                        </IconButton>\n                    </Tooltip>\n                </div>}\n\n                {item.supportCompact && expertMode && item.checkCompact && <div className={classes.displayFlex}>\n                    <Tooltip title={t('compact groups')}>\n                        <IconButton\n                            size=\"small\"\n                            className={classes.button}\n                            onClick={() => setCompact(instance)}\n                        >\n                            <ViewCompactIcon color={!!item.compact ? 'primary' : 'inherit'} />\n                        </IconButton>\n                    </Tooltip>\n                </div>}\n            </div>\n        </div> : null;\n\n    const linksDialog = showLinks ? <LinksDialog\n        image={instance.image}\n        instanceId={instance.id}\n        links={instance.links}\n        onClose={() => setShowLinks(false)}\n        t={t}\n        themeType={themeType}\n    /> : null;\n\n    const cronDialog = (openDialogCron || openDialogSchedule) &&\n        <ComplexCron\n            title={\n                (openDialogCron && t('Edit restart rule for %s', instance.id)) ||\n                (openDialogSchedule && t('Edit schedule rule for %s', instance.id))\n            }\n            clearButton={true}\n            cron={openDialogCron ? getRestartSchedule(id) : getSchedule(id)}\n            language={I18n.getLanguage()}\n            onOk={cron => {\n                if (openDialogCron) {\n                    setRestartSchedule(instance, cron);\n                } else if (openDialogSchedule) {\n                    setSchedule(instance, cron);\n                }\n            }}\n            onClose={() => {\n                if (openDialogCron) {\n                    setOpenDialogCron(false);\n                } else if (openDialogSchedule) {\n                    setOpenDialogSchedule(false);\n                }\n            }}\n        />;\n\n    return <Card key={key} className={clsx(classes.root, hidden ? classes.hidden : '')}>\n        {customModal}\n        {stopAdminDialog}\n        {cronDialog}\n        {secondCardInfo}\n        {linksDialog}\n\n        <div className={clsx(\n            classes.imageBlock,\n            (!item.connectedToHost || !item.alive) && classes.instanceStateNotAlive1,\n            item.connectedToHost && item.alive && item.connected === false && classes.instanceStateAliveNotConnected1,\n            item.connectedToHost && item.alive && item.connected !== false && classes.instanceStateAliveAndConnected1\n        )}>\n            <CardMedia className={classes.img} component=\"img\" image={instance.image || 'img/no-image.png'} />\n            <div className={classes.adapter}>{instance.id}</div>\n            <div className={classes.versionDate}>\n                {/* {expertMode && item.checkCompact && <Tooltip title={t('compact groups')}>\n                    <ViewCompactIcon color=\"action\" style={{ margin: 10 }} />\n                </Tooltip>} */}\n            </div>\n            <Fab\n                onMouseOver={() => setMouseOver(true)}\n                onMouseOut={() => setMouseOver(false)}\n                onClick={() => setCollapse(true)}\n                className={classes.fab}\n                color=\"primary\"\n                aria-label=\"add\"\n            >\n                <MoreVertIcon />\n            </Fab>\n        </div>\n\n        <CardContent className={classes.cardContentH5}>\n            <Typography gutterBottom variant=\"h5\" component=\"h5\">\n                <div\n                    onMouseMove={() => handlerEdit(true)}\n                    onMouseEnter={() => handlerEdit(true)}\n                    onMouseLeave={() => handlerEdit(false)}\n                    className={classes.displayFlex}>\n                    {item.name}\n                    <Tooltip title={t('Edit')}>\n                        <IconButton\n                            size=\"small\"\n                            className={clsx(classes.button, !visibleEdit && classes.hiddenOpacity)}\n                            onClick={() => setOpenDialogText(true)}\n                        >\n                            <EditIcon />\n                        </IconButton>\n                    </Tooltip>\n                </div>\n            </Typography>\n\n            <div className={classes.marginTop10}>\n                <Typography component={'span'} className={classes.enableButton}>\n                    <Tooltip title={t('Start/stop')}>\n                        <div><IconButton\n                            size=\"small\"\n                            onClick={event => {\n                                event.stopPropagation();\n                                if (!item.running || instance.id !== adminInstance) {\n                                    extendObject('system.adapter.' + instance.id, { common: { enabled: !item.running } });\n                                }\n                            }}\n                            onFocus={event => event.stopPropagation()}\n                            className={clsx(classes.button, instance.canStart ? (item.running ? classes.enabled : classes.disabled) : classes.hide)}\n                        >\n                            {item.running ? <PauseIcon /> : <PlayArrowIcon />}\n                        </IconButton>\n                        </div>\n                    </Tooltip>\n                    <Hidden xsDown>\n                        <Tooltip title={instance.config ? t('Settings') : ''}>\n                            <div>\n                                <IconButton\n                                    disabled={!instance.config}\n                                    size=\"small\"\n                                    className={clsx(classes.button, !instance.config && classes.hiddenOpacity)}\n                                    onClick={() => openConfig(id)}\n                                >\n                                    <BuildIcon />\n                                </IconButton>\n                            </div>\n                        </Tooltip>\n                    </Hidden>\n                    <Tooltip title={t('Restart')}>\n                        <div>\n                            <IconButton\n                                size=\"small\"\n                                onClick={event => {\n                                    extendObject('system.adapter.' + instance.id, {});\n                                    event.stopPropagation();\n                                }}\n                                onFocus={event => event.stopPropagation()}\n                                className={clsx(classes.button, !instance.canStart && classes.hide)}\n                                disabled={!item.running}\n                            >\n                                <RefreshIcon />\n                            </IconButton>\n                        </div>\n                    </Tooltip>\n                    <IsVisible config={item} name=\"allowInstanceLink\">\n                        <Tooltip title={t('Instance link %s', instance.id)}>\n                            <div>\n                                <IconButton\n                                    size=\"small\"\n                                    className={clsx(classes.button, (!instance.links || !instance.links[0]) && classes.hide)}\n                                    disabled={!item.running}\n                                    onClick={event => {\n                                        event.stopPropagation()\n                                        if (instance.links.length === 1) {\n                                            window.open(instance.links[0].link, instance.id);\n                                        } else {\n                                            setShowLinks(true);\n                                        }\n                                    }}\n                                    onFocus={event => event.stopPropagation()}\n                                >\n                                    <InputIcon />\n                                </IconButton>\n                            </div>\n                        </Tooltip>\n                    </IsVisible>\n                </Typography>\n            </div>\n        </CardContent>\n    </Card>\n})\n\nInstanceCard.propTypes = {\n    t: PropTypes.func,\n    themeType: PropTypes.string,\n    adminInstance: PropTypes.string,\n    hosts: PropTypes.array,\n    setHost: PropTypes.func,\n    deleting: PropTypes.bool,\n    item: PropTypes.object,\n};\n\nexport default withStyles(styles)(InstanceCard);","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport clsx from 'clsx';\n\nimport {\n    Accordion, AccordionDetails, AccordionSummary, Avatar,\n    Button, CardMedia, FormControl, Grid, Hidden, IconButton,\n    InputLabel, MenuItem, Select, Tooltip, Typography,\n    FormControlLabel, Checkbox, FormHelperText\n} from '@material-ui/core';\nimport { amber, blue, green, grey, red, orange } from '@material-ui/core/colors';\n\nimport RefreshIcon from '@material-ui/icons/Refresh';\nimport BuildIcon from '@material-ui/icons/Build';\nimport InputIcon from '@material-ui/icons/Input';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport LowPriorityIcon from '@material-ui/icons/LowPriority';\nimport HostIcon from '@material-ui/icons/Storage';\nimport MemoryIcon from '@material-ui/icons/Memory';\nimport ScheduleIcon from '@material-ui/icons/Schedule';\nimport ViewCompactIcon from '@material-ui/icons/ViewCompact';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport sentry from '../../assets/sentry.svg';\nimport EditIcon from '@material-ui/icons/Edit';\nimport ImportExportIcon from '@material-ui/icons/ImportExport';\nimport PauseIcon from '@material-ui/icons/Pause';\nimport PlayArrowIcon from '@material-ui/icons/PlayArrow';\n\nimport I18n from '@iobroker/adapter-react/i18n';\nimport ComplexCron from '@iobroker/adapter-react/Dialogs/ComplexCron';\nimport ConfirmDialog from '@iobroker/adapter-react/Dialogs/Confirm';\nimport TextWithIcon from '@iobroker/adapter-react/Components/TextWithIcon';\nimport SelectWithIcon from '@iobroker/adapter-react/Components/SelectWithIcon';\n\nimport InstanceInfo from './InstanceInfo';\nimport State from '../State';\nimport CustomModal from '../CustomModal';\nimport LinksDialog from './LinksDialog';\nimport IsVisible from '../IsVisible';\n\nconst boxShadow = '0 2px 2px 0 rgba(0, 0, 0, .14),0 3px 1px -2px rgba(0, 0, 0, .12),0 1px 5px 0 rgba(0, 0, 0, .2)';\nconst boxShadowHover = '0 8px 17px 0 rgba(0, 0, 0, .2),0 6px 20px 0 rgba(0, 0, 0, .19)';\n\nconst styles = theme => ({\n    root: {\n        position: 'relative',\n        margin: 10,\n        width: 300,\n        minHeight: 200,\n        background: theme.palette.background.default,\n        boxShadow,\n        display: 'flex',\n        flexDirection: 'column',\n        transition: 'box-shadow 0.5s',\n        '&:hover': {\n            boxShadow: boxShadowHover\n        }\n    },\n    row: {\n        paddingLeft: 8,\n        paddingRight: 16,\n        padding: 0\n    },\n    imageBlock: {\n        background: 'silver',\n        minHeight: 60,\n        display: 'flex',\n        padding: '0 10px 0 10px',\n        position: 'relative',\n        justifyContent: 'space-between',\n        transition: 'background 0.5s',\n    },\n    img: {\n        width: 45,\n        height: 45,\n        margin: 'auto 0',\n        position: 'relative',\n        '&:after': {\n            content: '\"\"',\n            position: 'absolute',\n            zIndex: 2,\n            top: 0,\n            left: 0,\n            width: '100%',\n            height: '100%',\n            background: 'url(\"img/no-image.png\") 100% 100% no-repeat',\n            backgroundSize: 'cover',\n            backgroundColor: '#fff',\n        }\n    },\n    installed: {\n        background: '#77c7ff8c'\n    },\n    update: {\n        background: '#10ff006b'\n    },\n    fab: {\n        position: 'absolute',\n        bottom: -20,\n        width: 40,\n        height: 40,\n        right: 20,\n    },\n    greenText: {\n        color: theme.palette.success.dark,\n    },\n\n    collapse: {\n        height: '100%',\n        backgroundColor: 'silver',\n        position: 'absolute',\n        width: '100%',\n        zIndex: 3,\n        marginTop: 'auto',\n        bottom: 0,\n        transition: 'height 0.3s',\n        justifyContent: 'space-between',\n        display: 'flex',\n        flexDirection: 'column'\n    },\n    collapseOff: {\n        height: 0\n    },\n    close: {\n        width: '20px',\n        height: '20px',\n        opacity: '0.9',\n        cursor: 'pointer',\n        position: 'relative',\n        marginLeft: 'auto',\n        marginBottom: 10,\n        transition: 'all 0.6s ease',\n        '&:hover': {\n            transform: 'rotate(90deg)'\n        },\n        '&:before': {\n            position: 'absolute',\n            left: '9px',\n            content: '\"\"',\n            height: '20px',\n            width: '3px',\n            backgroundColor: '#ff4f4f',\n            transform: 'rotate(45deg)'\n        },\n        '&:after': {\n            position: 'absolute',\n            left: '9px',\n            content: '\"\"',\n            height: '20px',\n            width: '3px',\n            backgroundColor: '#ff4f4f',\n            transform: 'rotate(-45deg)'\n        },\n    },\n    footerBlock: {\n        background: theme.palette.background.default,\n        padding: 10,\n        display: 'flex',\n        justifyContent: 'space-between'\n    },\n    hidden: {\n        display: 'none'\n    },\n    invisible: {\n        opacity: 0,\n    },\n    buttonUpdate: {\n        border: '1px solid',\n        padding: '0px 7px',\n        borderRadius: 5,\n        display: 'flex',\n        alignItems: 'center',\n        cursor: 'pointer',\n        transition: 'background 0.5s',\n        '&:hover': {\n            background: '#00800026'\n        }\n    },\n    versionDate: {\n        alignSelf: 'center'\n    },\n    adapter: {\n        width: '100%',\n        fontWeight: 'bold',\n        fontSize: 16,\n        verticalAlign: 'middle',\n        paddingLeft: 8,\n        paddingTop: 16,\n        color: theme.palette.type === 'dark' ? '#333' : '#555'\n    },\n    hide: {\n        visibility: 'hidden'\n    },\n    button: {\n        padding: 5,\n        transition: 'opacity 0.2s',\n        height: 34\n    },\n    hiddenOpacity: {\n        opacity: 0,\n        cursor: 'default',\n    },\n    enabled: {\n        color: green[400],\n        '&:hover': {\n            backgroundColor: green[200]\n        }\n    },\n    disabled: {\n        color: red[400],\n        '&:hover': {\n            backgroundColor: red[200]\n        }\n    },\n    instanceName: {\n        fontSize: 16,\n        paddingLeft: 32,\n        paddingBottom: 5,\n        fontWeight: 'bold'\n    },\n    cardContent: {\n        marginTop: 16,\n        paddingTop: 0\n    },\n    smallAvatar: {\n        width: 24,\n        height: 24\n    },\n    statusIndicator: {\n        marginTop: 8,\n    },\n    statusIcon_green: { // square\n        border: '2px solid grey',\n        borderRadius: 2,\n    },\n    statusIcon_red: { // circle\n        border: '2px solid grey',\n        borderRadius: 20,\n    },\n    statusIcon_orange: { // triangle\n        border: 0,\n        borderRadius: 0,\n    },\n    statusIcon_orangeDevice: { // triangle\n        border: 0,\n        borderRadius: 0,\n    },\n    statusIcon_blue: { // watch\n        border: '2px solid grey',\n        borderRadius: 20,\n    },\n    statusIcon_gray: { // circle ?\n        border: '2px solid grey',\n        borderRadius: 20,\n    },\n    statusIcon_grey: { // circle ?\n        border: '2px solid grey',\n        borderRadius: 20,\n    },\n    instanceIcon: {\n        height: 42,\n        width: 42,\n    },\n    table: {\n        minWidth: 650,\n    },\n    tableRow: {\n        '&:nth-of-type(odd)': {\n            backgroundColor: grey[300],\n        },\n        '&:nth-of-type(even)': {\n            backgroundColor: grey[200],\n        }\n    },\n    state: {\n        width: theme.spacing(2),\n        height: theme.spacing(2),\n        borderRadius: '100%'\n    },\n\n    green: {\n        //backgroundColor: green[700]\n        color: green[700]\n    },\n    red: {\n        //backgroundColor: red[700]\n        color: red[700]\n    },\n    grey: {\n        //backgroundColor: grey[700]\n        color: grey[700]\n    },\n    blue: {\n        //backgroundColor: blue[700]\n        color: '#0055a9'//blue[700]\n    },\n    orange: {\n        //backgroundColor: orange[700]\n        color: orange[400]\n    },\n    orangeDevice: {\n        //backgroundColor: orange[700]\n        color: orange[300]\n    },\n    transparent: {\n        color: 'transparent',\n        backgroundColor: 'transparent'\n    },\n    paper: {\n        height: '100%'\n    },\n    iframe: {\n        height: '100%',\n        width: '100%',\n        border: 0\n    },\n    silly: {\n\n    },\n    debug: {\n        backgroundColor: grey[700]\n    },\n    info: {\n        backgroundColor: blue[700]\n    },\n    warn: {\n        backgroundColor: amber[700]\n    },\n    error: {\n        backgroundColor: red[700]\n    },\n    grow: {\n        flexGrow: 1\n    },\n    tableRender: {\n        tableLayout: 'fixed',\n        minWidth: 960,\n        '& td': {\n            whiteSpace: 'nowrap',\n            overflow: 'hidden',\n            textOverflow: 'ellipsis'\n        }\n    },\n    cards: {\n        display: 'flex',\n        flexFlow: 'wrap',\n        justifyContent: 'center',\n    },\n    sentry: {\n        width: 24,\n        height: 24,\n        objectFit: 'fill',\n        filter: 'invert(0%) sepia(90%) saturate(1267%) hue-rotate(-260deg) brightness(99%) contrast(97%)'\n    },\n    hidden1250: {\n        display: 'flex',\n        width: 200,\n        whiteSpace: 'nowrap',\n        overflow: 'hidden',\n        textOverflow: 'ellipsis'\n    },\n    visible1250: {\n        display: 'flex',\n        width: 200,\n        whiteSpace: 'nowrap',\n        overflow: 'hidden',\n        textOverflow: 'ellipsis'\n    },\n    visible1050: {\n        display: 'none'\n    },\n    hidden1050: {\n        display: 'flex'\n    },\n    hidden800: {\n        display: 'flex',\n    },\n    visible800: {\n        display: 'none'\n    },\n    hidden570: {\n        display: 'flex',\n    },\n    visible570: {\n        display: 'none'\n    },\n    '@media screen and (max-width: 1500px)': {\n        hidden1250: {\n            display: 'none !important'\n        },\n        visible1250: {\n            display: 'flex !important'\n        },\n    },\n    '@media screen and (max-width: 1300px)': {\n        hidden1230: {\n            display: 'none !important'\n        }\n    },\n    '@media screen and (max-width: 1120px)': {\n        hidden1050: {\n            display: 'none !important'\n        },\n        visible1050: {\n            display: 'flex !important'\n        },\n    },\n    '@media screen and (max-width: 800px)': {\n        hidden800: {\n            display: 'none !important'\n        },\n        visible800: {\n            display: 'flex !important'\n        },\n        instanceIcon: {\n            height: 28,\n            width: 28,\n            marginLeft: 4,\n            marginTop: 8,\n        },\n    },\n    hidden380: {\n        display: 'flex'\n    },\n    '@media screen and (max-width: 650px)': {\n        hidden570: {\n            display: 'none !important'\n        },\n        visible570: {\n            display: 'flex !important'\n        },\n    },\n    '@media screen and (max-width: 380px)': {\n        hidden380: {\n            display: 'none !important'\n        },\n        instanceId: {\n            width: '70px !important',\n            minWidth: '70px !important'\n        },\n    },\n    '@media screen and (max-width: 480px)': {\n        gridStyle: {\n            minWidth: 'auto !important',\n            marginLeft: 10\n        },\n        instanceId: {\n            width: 100,\n        },\n        maxWidth300: {\n            width: `250px !important`\n        }\n    },\n    '@media screen and (max-width: 335px)': {\n        gridStyle: {\n            marginLeft: 0\n        }\n    },\n    displayFlex: {\n        display: 'flex',\n    },\n    secondaryHeading: {\n        maxWidth: 200,\n        fontSize: 12,\n    },\n    secondaryHeadingDiv: {\n        display: 'flex',\n        alignItems: 'center',\n        width: 200\n    },\n    secondaryHeadingDivDiv: {\n        whiteSpace: 'nowrap',\n        overflow: 'hidden',\n        padding: 5,\n        textOverflow: 'ellipsis',\n        maxWidth: 200\n    },\n    /*summaryText: {\n        display: 'flex',\n        minWidth: 200,\n        justifyContent: 'space-around'\n    },\n    summaryInstanceId: {\n        minWidth: 100,\n        marginLeft: 5,\n        alignSelf: 'center'\n    },*/\n    formControl: {\n        width: '100%',\n        marginBottom: 5\n    },\n    formControl2: {\n        marginBottom: 5,\n        marginTop: 5,\n        width: '100%',\n    },\n    gridStyle: {\n        display: 'flex',\n        minWidth: 270,\n        lineHeight: '42px',\n        justifyContent: 'space-around'\n    },\n    wrapperAvatar: {\n        maxWidth: 130\n    },\n    instanceId: {\n        overflow: 'hidden',\n        alignSelf: 'center',\n        fontSize: 16,\n        marginLeft: 5,\n        maxWidth: 150,\n        minWidth: 100,\n        whiteSpace: 'nowrap',\n        textOverflow: 'ellipsis',\n        flexGrow: 2,\n    },\n    marginLeft: {\n        marginLeft: 5\n    },\n    marginRight: {\n        marginRight: 5\n    },\n    selectStyle: {\n        display: 'flex',\n        margin: 5,\n        justifyContent: 'space-around'\n    },\n    selectWrapper: {\n        display: 'flex',\n        alignItems: 'flex-end'\n    },\n    scheduleIcon: {\n        color: '#dc8e00'\n    },\n    ram: {\n        color: '#dc8e00'\n    },\n    contrast0: {\n        filter: 'contrast(0%)'\n    },\n    paddingRight200: {\n        // paddingRight: 200\n    },\n    instanceStateNotEnabled1: {\n        backgroundColor: 'rgba(192, 192, 192, 0.2)'\n    },\n    instanceStateNotEnabled2: {\n        backgroundColor: 'rgba(192, 192, 192, 0.15)'\n    },\n    instanceStateNotAlive1: {\n        backgroundColor: 'rgba(255,14,14,0.2)'\n    },\n    instanceStateNotAlive2: {\n        backgroundColor: 'rgba(255,14,14, 0.15)'\n    },\n    instanceStateAliveNotConnected1: {\n        backgroundColor: 'rgba(255, 177, 0, 0.1)'\n    },\n    instanceStateAliveNotConnected2: {\n        backgroundColor: 'rgba(255, 177, 0, 0.15)'\n    },\n    instanceStateAliveAndConnected1: {\n        backgroundColor: 'rgba(0, 255, 0, 0.1)'\n    },\n    instanceStateAliveAndConnected2: {\n        backgroundColor: 'rgba(0, 255, 0, 0.15)'\n    },\n    maxWidth300: {\n        width: 300\n    },\n    width150: {\n        width: 150\n    },\n    deleting: {\n        position: 'relative',\n        '&:before': {\n            content: '\"\"',\n            position: 'absolute',\n            top: 0,\n            left: 0,\n            width: '100%',\n            height: '100%',\n            zIndex: 100,\n            opacity: '.3 !important',\n            background: 'repeating-linear-gradient(135deg, #333, #333 10px, #888 10px, #888 20px)',\n        }\n    },\n    desktopRow: {\n        minHeight: 0\n    },\n    desktopIcon: {\n        height: 32,\n        width: 32,\n        marginTop: 4\n    },\n    desktopRowContent: {\n        marginTop: 2,\n        marginBottom: 2,\n    },\n    desktopButton: {\n        paddingRight: 12,\n        paddingTop: 4,\n        paddingBottom: 4,\n        paddingLeft: 4,\n    }\n});\n\nconst arrayLogLevel = ['silly', 'debug', 'info', 'warn', 'error'];\nconst arrayTier = [{ value: 1, desc: '1: Logic adapters' }, { value: 2, desc: '2: Data provider adapters' }, { value: 3, desc: '3: Other adapters' }];\n\nconst InstanceRow = ({\n    adminInstance,\n    classes,\n    maxCompactGroupNumber,\n    deletedInstances,\n    expanded,\n    expertMode,\n    extendObject,\n    getInstanceStatus,\n    getMemory,\n    getModeIcon,\n    getRestartSchedule,\n    getSchedule,\n    onExpandRow,\n    hosts,\n    id,\n    idx,\n    instance,\n    key,\n    openConfig,\n    setCompact,\n    setCompactGroup,\n    setHost,\n    setLogLevel,\n    setMemoryLimitMB,\n    setName,\n    setRestartSchedule,\n    setSchedule,\n    setSentry,\n    setTier,\n    t,\n    themeType,\n    deleting,\n    item,\n}) => {\n    const [openSelectCompactGroup, setOpenSelectCompactGroup] = useState(false);\n    const [openDialogCron, setOpenDialogCron] = useState(false);\n    const [openDialogSchedule, setOpenDialogSchedule] = useState(false);\n    const [openDialogText, setOpenDialogText] = useState(false);\n    const [openDialogLogLevel, setOpenDialogLogLevel] = useState(false);\n    const [openDialogDelete, setOpenDialogDelete] = useState(false);\n    const [openDialogMemoryLimit, setOpenDialogMemoryLimit] = useState(false);\n    const [openDialogHost, setOpenDialogHost] = useState(false);\n    const [openDialogCompact, setOpenDialogCompact] = useState(false);\n    const [openDialogTier, setOpenDialogTier] = useState(false);\n\n    const [showStopAdminDialog, setShowStopAdminDialog] = useState(false);\n    const [showLinks, setShowLinks] = useState(false);\n\n    const [logLevelValue, setLogLevelValue] = useState(item.logLevel);\n    const [logOnTheFlyValue, setLogOnTheFlyValue] = useState(false);\n    const [compactValue, setCompactValue] = useState(item.compactGroup || 0);\n    const [maxCompactGroupNumberValue, setCompactGroupCountValue] = useState(maxCompactGroupNumber);\n    const [tierValue, setTierValue] = useState(item.tier);\n    const [hostValue, setHostValue] = useState(instance.host);\n\n    const [visibleEdit, handlerEdit] = useState(false);\n    const desktop = window.innerWidth > 1000;\n\n    let showModal = false;\n    let title;\n    let help = '';\n    if (openDialogText) {\n        title = t('Enter title for %s', instance.id);\n        showModal = true;\n    } else if (openDialogLogLevel) {\n        title = t('Edit log level rule for %s', instance.id);\n        showModal = true;\n    } else if (openDialogDelete) {\n        title = t('Please confirm');\n        showModal = true;\n    } else if (openDialogMemoryLimit) {\n        title = t('Edit memory limit rule for %s', instance.id);\n        help = t('Default V8 has a memory limit of 512mb on 32-bit systems, and 1gb on 64-bit systems. The limit can be raised by setting --max-old-space-size to a maximum of ~1gb (32-bit) and ~1.7gb (64-bit)');\n        showModal = true;\n    } else if (openDialogHost) {\n        title = t('Edit host for %s', instance.id);\n        showModal = true;\n    } else if (openDialogCompact) {\n        title = t('Edit compact groups for %s', instance.id);\n        showModal = true;\n    } else if (openDialogTier) {\n        title = t('Set tier for %s', instance.id);\n        help = t('Tiers define the order of adapters when the system starts.');\n        showModal = true;\n    }\n\n    const customModal = showModal ? <CustomModal\n        title={title}\n        help={help}\n        open={true}\n        applyDisabled={openDialogText || openDialogMemoryLimit}\n        textInput={openDialogText || openDialogMemoryLimit}\n        defaultValue={openDialogText ? item.name : openDialogMemoryLimit ? item.memoryLimitMB : ''}\n        onApply={value => {\n            if (openDialogLogLevel) {\n                setLogLevel(instance, logLevelValue, logOnTheFlyValue);\n                setOpenDialogLogLevel(false);\n            } else if (openDialogText) {\n                setName(instance, value);\n                setOpenDialogText(false);\n            } else if (openDialogDelete) {\n                setOpenDialogDelete(false);\n                deletedInstances(instance);\n            } else if (openDialogMemoryLimit) {\n                setMemoryLimitMB(instance, value);\n                setOpenDialogMemoryLimit(false);\n            } else if (openDialogCompact) {\n                setCompactGroup(instance, compactValue);\n                setOpenDialogCompact(false);\n            } else if (openDialogTier) {\n                setTier(instance, tierValue);\n                setOpenDialogTier(false);\n            } else if (openDialogHost) {\n                setHost(instance, hostValue);\n                setOpenDialogHost(false);\n            }\n        }}\n        onClose={() => {\n            if (openDialogLogLevel) {\n                setLogLevelValue(item.logLevel);\n                setLogOnTheFlyValue(false);\n                setOpenDialogLogLevel(false);\n            } else if (openDialogText) {\n                setOpenDialogText(false);\n            } else if (openDialogDelete) {\n                setOpenDialogDelete(false);\n            } else if (openDialogMemoryLimit) {\n                setOpenDialogMemoryLimit(false);\n            } else if (openDialogCompact) {\n                setCompactValue(item.compactGroup);\n                setCompactGroupCountValue(maxCompactGroupNumber);\n                setOpenDialogCompact(false);\n            } else if (openDialogTier) {\n                setTierValue(item.tier);\n                setOpenDialogTier(false);\n            } else if (openDialogHost) {\n                setHostValue(instance.host);\n                setOpenDialogHost(false);\n            }\n        }}>\n        {openDialogLogLevel && <FormControl className={classes.formControl} variant=\"outlined\" >\n            <InputLabel>{t('log level')}</InputLabel>\n            <Select\n                variant=\"standard\"\n                value={logLevelValue}\n                fullWidth\n                onChange={el => setLogLevelValue(el.target.value)}\n            >\n                {arrayLogLevel.map(el => <MenuItem key={el} value={el}>\n                    {t(el)}\n                </MenuItem>)}\n            </Select>\n        </FormControl>}\n        {openDialogLogLevel && <FormControl className={classes.formControl} variant=\"outlined\" >\n            <FormControlLabel\n                control={<Checkbox checked={logOnTheFlyValue} onChange={e => setLogOnTheFlyValue(e.target.checked)} />}\n                label={t('Without restart')}\n            />\n            <FormHelperText>{logOnTheFlyValue ? t('Will be reset to the saved log level after restart of adapter') : t('Log level will be saved permanently')}</FormHelperText>\n        </FormControl>}\n        {openDialogCompact && <FormControl className={classes.formControl2} variant=\"outlined\" >\n            <InputLabel>{t('compact groups')}</InputLabel>\n            <Select\n                variant=\"standard\"\n                autoWidth\n                onClose={e => setOpenSelectCompactGroup(false)}\n                onOpen={e => setOpenSelectCompactGroup(true)}\n                open={openSelectCompactGroup}\n                value={compactValue === 1 ? 'default' : compactValue === '0' || compactValue === 0 ? 'controller' : !compactValue ? 'default' : compactValue || 'default'}\n                onChange={el => setCompactValue(el.target.value)}\n            >\n                <div onClick={(e) => {\n                    e.preventDefault();\n                    e.stopPropagation();\n                }}\n                    className={classes.selectStyle}>\n                    <Button onClick={e => {\n                        setOpenSelectCompactGroup(false);\n                        setCompactValue(maxCompactGroupNumberValue + 1);\n                        setCompactGroupCountValue(maxCompactGroupNumberValue + 1);\n                    }} variant=\"outlined\" stylevariable='outlined'>{t('Add compact group')}</Button>\n                </div>\n                <MenuItem value=\"controller\">{t('with controller')}</MenuItem>\n                <MenuItem value=\"default\">{t('default group')}</MenuItem>\n                {Array(maxCompactGroupNumberValue - 1).fill().map((_, idx) => <MenuItem key={idx} value={idx + 2}>\n                    {idx + 2}\n                </MenuItem>)}\n            </Select>\n        </FormControl>}\n        {openDialogTier && <FormControl className={classes.formControl} variant=\"outlined\" >\n            <InputLabel>{t('Tiers')}</InputLabel>\n            <Select\n                variant=\"standard\"\n                value={tierValue}\n                fullWidth\n                onChange={el => setTierValue(el.target.value)}\n            >\n                {arrayTier.map(el => <MenuItem key={el.value} value={el.value}>\n                    {t(el.desc)}\n                </MenuItem>)}\n            </Select>\n        </FormControl>}\n        {openDialogDelete && t('Are you sure you want to delete the instance %s?', instance.id)}\n        {openDialogHost && <SelectWithIcon\n            themeType={themeType}\n            value={hostValue}\n            list={hosts}\n            removePrefix=\"system.host.\"\n            fullWidth\n            className={classes.formControl}\n            onChange={el => setHostValue(el)}\n        />}\n    </CustomModal> : null;\n\n    const status = getInstanceStatus(id);\n\n    const linksDialog = showLinks ? <LinksDialog\n        image={instance.image}\n        instanceId={instance.id}\n        links={instance.links}\n        onClose={() => setShowLinks(false)}\n        t={t}\n        themeType={themeType}\n    /> : null;\n\n    const stopAdminDialog = showStopAdminDialog ? <ConfirmDialog\n        title={t('Please confirm')}\n        text={t('stop_admin', adminInstance)}\n        ok={t('Stop admin')}\n        onClose={result => {\n            if (result) {\n                extendObject(showStopAdminDialog, { common: { enabled: false } });\n            }\n            setShowStopAdminDialog(false);\n        }}\n    /> : null;\n\n    const stateTooltip = [\n        instance.mode === 'daemon' ? <State key={1} state={item.connectedToHost} >{t('Connected to host')}</State> : '',\n        instance.mode === 'daemon' ? <State key={2} state={item.alive} >{t('Heartbeat')}</State> : '',\n        item.connected !== null ? <State key={3} state={!!item.connected}>\n            {typeof item.connected === 'string' ? t('Connected:') + ' ' + (item.connected || '-') : t('Connected to device or service')}\n        </State> : ''\n    ];\n\n    return <Accordion\n        key={key}\n        square\n        classes={{root: deleting ? classes.deleting : ''}}\n        expanded={expanded === instance.id && !deleting}\n        onChange={() => {\n            if (openDialogCron ||\n                openDialogSchedule ||\n                openDialogLogLevel ||\n                openDialogText ||\n                openDialogDelete ||\n                openDialogMemoryLimit ||\n                openDialogCompact ||\n                openDialogTier ||\n                openDialogHost) {\n                return;\n            }\n            onExpandRow(instance.id);\n        }}>\n        {linksDialog}\n        <AccordionSummary\n            classes={{\n                root: classes.row,\n                content:  desktop ? classes.desktopRowContent : undefined,\n                expandIcon: desktop ? classes.desktopButton : undefined,\n            }}\n            className={clsx(\n                (!item.running || instance.mode !== 'daemon') && (idx % 2 === 0 ? classes.instanceStateNotEnabled1 : classes.instanceStateNotEnabled2),\n                item.running && instance.mode === 'daemon' && (!item.connectedToHost || !item.alive) && (idx % 2 === 0 ? classes.instanceStateNotAlive1 : classes.instanceStateNotAlive2),\n                item.running && item.connectedToHost && item.alive && item.connected === false && (idx % 2 === 0 ? classes.instanceStateAliveNotConnected1 : classes.instanceStateAliveNotConnected2),\n                item.running && item.connectedToHost && item.alive && item.connected !== false && (idx % 2 === 0 ? classes.instanceStateAliveAndConnected1 : classes.instanceStateAliveAndConnected1),\n                desktop && classes.desktopRow\n            )}\n            expandIcon={<ExpandMoreIcon/>}>\n            {customModal}\n            {stopAdminDialog}\n            {(openDialogCron || openDialogSchedule) && <ComplexCron\n                title={\n                    (openDialogCron && t('Edit restart rule for %s', instance.id)) ||\n                    (openDialogSchedule && t('Edit schedule rule for %s', instance.id))\n                }\n                clearButton={true}\n                cron={openDialogCron ? getRestartSchedule(id) : getSchedule(id)}\n                language={I18n.getLanguage()}\n                onOk={cron => {\n                    if (openDialogCron) {\n                        setRestartSchedule(instance, cron);\n                    } else if (openDialogSchedule) {\n                        setSchedule(instance, cron);\n                    }\n                }}\n                onClose={() => {\n                    if (openDialogCron) {\n                        setOpenDialogCron(false);\n                    } else if (openDialogSchedule) {\n                        setOpenDialogSchedule(false);\n                    }\n                }}\n            />}\n            <Grid container spacing={1} alignItems=\"center\" direction=\"row\" wrap=\"nowrap\">\n                <div className={classes.gridStyle}>\n                    <Tooltip title={<span style={{ display: 'flex', flexDirection: 'column' }}>{stateTooltip}</span>}>\n                        <div\n                            className={clsx(\n                                classes.smallAvatar,\n                                classes.statusIndicator,\n                                instance.mode === 'daemon' || instance.mode === 'schedule' ? classes[status] : classes.transparent,\n                                item.connectedToHost && item.alive && item.connected === false && classes.orangeDevice\n                            )}>\n                            {getModeIcon(instance.mode, status, classes['statusIcon_' + status])}\n                        </div>\n                    </Tooltip>\n                    <Avatar\n                        variant=\"square\"\n                        alt={instance.id}\n                        src={instance.image}\n                        className={clsx(classes.instanceIcon, desktop && classes.desktopIcon)}\n                    />\n                    <div className={classes.instanceId}>{instance.id}</div>\n                </div>\n                <Tooltip title={t('Start/stop')}>\n                    <div>\n                        <IconButton\n                            size=\"small\"\n                            onClick={event => {\n                                event.stopPropagation();\n                                event.preventDefault();\n                                if (item.running && instance.id === adminInstance) {\n                                    setShowStopAdminDialog('system.adapter.' + instance.id);\n                                } else {\n                                    extendObject('system.adapter.' + instance.id, { common: { enabled: !item.running } });\n                                }\n                            }}\n                            onFocus={event => event.stopPropagation()}\n                            className={clsx(classes.button, instance.canStart ?\n                                (item.running ? classes.enabled : classes.disabled) : classes.hide)}\n                        >\n                            {item.running ? <PauseIcon /> : <PlayArrowIcon />}\n                        </IconButton>\n                    </div>\n                </Tooltip>\n                <IsVisible config={item} name=\"allowInstanceSettings\">\n                    <Hidden xsDown>\n                        <div>\n                            <Tooltip title={instance.config ? t('Settings') : ''}>\n                                <div>\n                                    <IconButton\n                                        disabled={!instance.config}\n                                        size=\"small\"\n                                        className={clsx(classes.button, !instance.config && classes.hiddenOpacity)}\n                                        onClick={() => openConfig(id)}\n                                    >\n                                        <BuildIcon />\n                                    </IconButton>\n                                </div>\n                            </Tooltip>\n                        </div>\n                    </Hidden>\n                </IsVisible>\n                <Tooltip title={t('Restart')}>\n                    <div>\n                        <IconButton\n                            size=\"small\"\n                            onClick={event => {\n                                extendObject('system.adapter.' + instance.id, {});\n                                event.stopPropagation();\n                            }}\n                            onFocus={event => event.stopPropagation()}\n                            className={clsx(classes.button, !instance.canStart && classes.hide)}\n                            disabled={!item.running}\n                        >\n                            <RefreshIcon />\n                        </IconButton>\n                    </div>\n                </Tooltip>\n                <IsVisible config={item} name=\"allowInstanceLink\">\n                    <Tooltip title={t('Instance link %s', instance.id)}>\n                        <div>\n                            <IconButton\n                                size=\"small\"\n                                className={clsx(classes.button, (!instance.links || !instance.links[0]) && classes.hide)}\n                                disabled={!item.running}\n                                onClick={event => {\n                                    event.stopPropagation();\n                                    if (instance.links.length === 1) {\n                                        window.open(instance.links[0].link, instance.id);\n                                    } else {\n                                        setShowLinks(true);\n                                    }\n                                }}\n                                onFocus={event => event.stopPropagation()}\n                            >\n                                <InputIcon />\n                            </IconButton>\n                        </div>\n                    </Tooltip>\n                </IsVisible>\n\n                <Typography className={clsx(classes.secondaryHeading, classes.hidden800)} component=\"div\">\n                    <div\n                        onMouseMove={() => handlerEdit(true)}\n                        onMouseEnter={() => handlerEdit(true)}\n                        onMouseLeave={() => handlerEdit(false)}\n                        className={classes.secondaryHeadingDiv}>\n                        <div className={classes.secondaryHeadingDivDiv}>{item.name}</div>\n                        <Tooltip title={t('Edit')}>\n                            <IconButton\n                                size=\"small\"\n                                className={clsx(classes.button, !visibleEdit && classes.hiddenOpacity)}\n                                onClick={event => {\n                                    setOpenDialogText(true);\n                                    event.stopPropagation();\n                                }}\n                            >\n                                <EditIcon />\n                            </IconButton>\n                        </Tooltip>\n                    </div>\n                </Typography>\n                {expertMode &&\n                    <div className={clsx(classes.hidden1250, (instance.mode !== 'daemon' || !item.running) && classes.invisible)} >\n                        <InstanceInfo\n                            icon={<ImportExportIcon />}\n                            tooltip={t('events')}\n                        >\n                            <div className={classes.displayFlex}>\n                                <Tooltip title={t('input events')}>\n                                    <div className={classes.marginRight}>⇥{item.inputOutput.stateInput}</div>\n                                </Tooltip>\n                                    /\n                                <Tooltip title={t('output events')}>\n                                    <div className={classes.marginLeft}>↦{item.inputOutput.stateOutput}</div>\n                                </Tooltip>\n                            </div>\n                        </InstanceInfo>\n                    </div>\n                }\n                {expertMode &&\n                    <Tooltip title={item.logLevelObject === item.logLevel ? `${t('loglevel')} ${item.logLevel}` : `${t('saved:')} ${item.logLevelObject} / ${t('actual:')} ${item.logLevel}`}>\n                        <Avatar className={clsx(classes.smallAvatar, classes.hidden380, classes[item.logLevel])}>\n                            {item.loglevelIcon}\n                        </Avatar>\n                    </Tooltip>\n                }\n                <Grid item className={clsx(classes.hidden1050, classes.width150, (instance.mode !== 'daemon' || !item.running) && classes.invisible)}>\n                    <InstanceInfo\n                        icon={<MemoryIcon />}\n                        tooltip={t('RAM usage')}\n                    >\n                        {(instance.mode === 'daemon' && item.running ? getMemory(id) : '-.--') + ' MB'}\n                    </InstanceInfo>\n                </Grid>\n                {hosts.length > 1 || (hosts.length && hosts[0].common?.name !== instance.host) ? <Grid item className={clsx(classes.hidden1230)}>\n                    {<TextWithIcon value={instance.host} list={hosts} removePrefix=\"system.host.\" themeType={themeType} />}\n                </Grid> : null}\n            </Grid>\n            <div className={classes.hidden570}>\n                <Tooltip title=\"sentry\">\n                    <IconButton\n                        size=\"small\"\n                        className={clsx(classes.button, expertMode && item.checkSentry ? null : classes.hide)}\n                        onClick={e => {\n                            e.stopPropagation();\n                            setSentry(instance);\n                        }}\n                    >\n                        <CardMedia\n                            className={clsx(classes.sentry, !item.sentry && classes.contrast0)}\n                            component=\"img\"\n                            image={sentry}\n                        />\n                    </IconButton>\n                </Tooltip>\n            </div>\n            {item.supportCompact ?\n                <div className={classes.hidden570}>\n                    <Tooltip title={t('compact groups')}>\n                        <IconButton\n                            size=\"small\"\n                            className={clsx(classes.button, expertMode && item.checkCompact ? null : classes.hide)}\n                            onClick={e => {\n                                e.stopPropagation();\n                                setCompact(instance);\n                            }}\n                        >\n                            <ViewCompactIcon color={!!item.compact ? 'primary' : 'inherit'} />\n                        </IconButton>\n                    </Tooltip>\n                </div> : null}\n        </AccordionSummary>\n        <AccordionDetails>\n            <Grid container direction=\"row\">\n                <Grid item container direction=\"row\" xs={10}>\n                    <Grid item container direction=\"column\" xs={12} sm={6} md={4}>\n                        <span className={classes.instanceName}>{instance.id}</span>\n                        {item.running && instance.mode === 'daemon' && <State state={item.connectedToHost} >{t('Connected to host')}</State>}\n                        {item.running && instance.mode === 'daemon' && <State state={item.alive} >{t('Heartbeat')}</State>}\n                        {item.running && item.connected !== null &&\n                            <State state={!!item.connected}>\n                                {typeof item.connected === 'string' ? t('Connected:') + ' ' + (item.connected || '-') : t('Connected to device or service')}\n                            </State>\n                        }\n                    </Grid>\n                    <Grid container item direction=\"column\" xs={12} sm={6} md={4}>\n                        <InstanceInfo tooltip={t('Installed')}>\n                            v{instance.version}\n                        </InstanceInfo>\n                    </Grid>\n                    <Grid container item direction=\"column\" xs={12} sm={6} md={4} className={classes.paddingRight200}>\n                        {expertMode && <div className={clsx(classes.displayFlex, classes.maxWidth300)}>\n                            <InstanceInfo icon={item.loglevelIcon} tooltip={item.logLevelObject === item.logLevel ? `${t('loglevel')} ${item.logLevel}` : `${t('saved:')} ${item.logLevelObject} / ${t('actual:')} ${item.logLevel}`}>\n                                {item.logLevelObject === item.logLevel ? item.logLevel : `${item.logLevelObject} / ${item.logLevel}`}\n                            </InstanceInfo>\n                            <Tooltip title={t('Edit')}>\n                                <IconButton\n                                    size=\"small\"\n                                    className={classes.button}\n                                    onClick={(event) => {\n                                        setOpenDialogLogLevel(true);\n                                        event.stopPropagation();\n                                    }}\n                                >\n                                    <EditIcon />\n                                </IconButton>\n                            </Tooltip>\n                        </div>}\n                        {item.running && expertMode &&\n                            <div className={classes.visible1250}>\n                                <InstanceInfo icon={<ImportExportIcon />} tooltip={t('events')}>\n                                    <div className={classes.displayFlex}>\n                                        <Tooltip title={t('input events')}>\n                                            <div className={classes.marginRight}>⇥{item.inputOutput.stateInput}</div>\n                                        </Tooltip>\n                                    /\n                                        <Tooltip title={t('output events')}>\n                                            <div className={classes.marginLeft}>↦{item.inputOutput.stateOutput}</div>\n                                        </Tooltip>\n                                    </div>\n                                </InstanceInfo>\n                            </div>\n                        }\n                        <Grid item className={classes.visible1050}>\n                            <InstanceInfo icon={<MemoryIcon />} tooltip={t('RAM usage')}>\n                                {(instance.mode === 'daemon' && item.running ? getMemory(id) : '-.--') + ' MB'}\n                            </InstanceInfo>\n                        </Grid>\n                        {item.modeSchedule && <div className={clsx(classes.displayFlex, classes.maxWidth300)}>\n                            <InstanceInfo icon={<ScheduleIcon />} tooltip={t('schedule_group')}>\n                                {getSchedule(id) || '-'}\n                            </InstanceInfo>\n                            <Tooltip title={t('Edit')}>\n                                <IconButton\n                                    size=\"small\"\n                                    className={classes.button}\n                                    onClick={(event) => {\n                                        setOpenDialogSchedule(true);\n                                        event.stopPropagation();\n                                    }}\n                                >\n                                    <EditIcon />\n                                </IconButton>\n                            </Tooltip>\n                        </div>}\n                        {expertMode && (instance.mode === 'daemon') &&\n                            <div className={clsx(classes.displayFlex, classes.maxWidth300)}>\n                                <InstanceInfo\n                                    icon={<ScheduleIcon className={classes.scheduleIcon} />}\n                                    tooltip={t('restart')}\n                                >\n                                    {getRestartSchedule(id) || '-'}\n                                </InstanceInfo>\n                                <Tooltip title={t('Edit')}>\n                                    <IconButton\n                                        size=\"small\"\n                                        className={classes.button}\n                                        onClick={(event) => {\n                                            setOpenDialogCron(true);\n                                            event.stopPropagation();\n                                        }}\n                                    >\n                                        <EditIcon />\n                                    </IconButton>\n                                </Tooltip>\n                            </div>\n                        }\n                        {expertMode &&\n                            <div className={clsx(classes.displayFlex, classes.maxWidth300)}>\n                                <InstanceInfo\n                                    icon={<MemoryIcon className={classes.ram} />}\n                                    tooltip={t('RAM limit')}\n                                >\n                                    {(item.memoryLimitMB ? item.memoryLimitMB : '-.--') + ' MB'}\n                                </InstanceInfo>\n                                <Tooltip title={t('Edit')}>\n                                    <IconButton\n                                        size=\"small\"\n                                        className={classes.button}\n                                        onClick={e => {\n                                            setOpenDialogMemoryLimit(true);\n                                            e.stopPropagation();\n                                        }}\n                                    >\n                                        <EditIcon />\n                                    </IconButton>\n                                </Tooltip>\n                            </div>\n                        }\n                        {expertMode && item.checkCompact && item.compact && item.supportCompact &&\n                            <div className={clsx(classes.displayFlex, classes.maxWidth300)}>\n                                <InstanceInfo icon={<ViewCompactIcon className={classes.marginRight} color=\"inherit\" />} tooltip={t('compact groups')}>\n                                    {item.compactGroup === 1 ? 'default' : item.compactGroup === '0' ? \"controller\" : !item.compactGroup ? 'default' : item.compactGroup || 'default'}\n                                </InstanceInfo>\n                                <Tooltip title={t('Edit')}>\n                                    <IconButton\n                                        size=\"small\"\n                                        className={classes.button}\n                                        onClick={e => {\n                                            setOpenDialogCompact(true);\n                                            e.stopPropagation();\n                                        }}\n                                    >\n                                        <EditIcon />\n                                    </IconButton>\n                                </Tooltip>\n                            </div>\n                        }\n                        {expertMode && <div className={clsx(classes.displayFlex, classes.maxWidth300)}>\n                            <InstanceInfo icon={<LowPriorityIcon className={classes.marginRight} color=\"inherit\" />} tooltip={t('Start order (tier)')}>\n                                {instance.adapter === 'admin' ? t('Always first') : (arrayTier.find(el => el.value === item.tier)?.desc || arrayTier[2])}\n                            </InstanceInfo>\n                            {instance.adapter !== 'admin' ? <Tooltip title={t('Edit start order (tier)')}>\n                                <IconButton\n                                    size=\"small\"\n                                    className={classes.button}\n                                    onClick={e => {\n                                        setOpenDialogTier(true);\n                                        e.stopPropagation();\n                                    }}\n                                >\n                                    <EditIcon />\n                                </IconButton>\n                            </Tooltip> : null}\n                        </div>}\n                        <div className={clsx(classes.maxWidth300, classes.visible800)}>\n                            <InstanceInfo >\n                                {item.name}\n                            </InstanceInfo>\n                            <Tooltip title={t('Edit')}>\n                                <IconButton\n                                    size=\"small\"\n                                    className={classes.button}\n                                    onClick={event => {\n                                        setOpenDialogText(true);\n                                        event.stopPropagation();\n                                    }}\n                                >\n                                    <EditIcon />\n                                </IconButton>\n                            </Tooltip>\n                        </div>\n                        {hosts.length > 1 || (hosts.length && hosts[0].common?.name !== instance.host) ? <div className={clsx(classes.displayFlex, classes.maxWidth300)}>\n                            <InstanceInfo icon={<HostIcon className={classes.marginRight} />} tooltip={t('Host for this instance')}>\n                                {<TextWithIcon value={instance.host} list={hosts} removePrefix=\"system.host.\" themeType={themeType} />}\n                            </InstanceInfo>\n                            <Tooltip title={t('Edit')}>\n                                <IconButton\n                                    size=\"small\"\n                                    className={classes.button}\n                                    onClick={event => {\n                                        setOpenDialogHost(true);\n                                        event.stopPropagation();\n                                    }}\n                                >\n                                    <EditIcon />\n                                </IconButton>\n                            </Tooltip>\n                        </div> : null}\n                    </Grid>\n                </Grid>\n                <div className={classes.displayFlex}>\n                    <IsVisible config={item} name=\"allowInstanceDelete\">\n                        <Hidden smUp>\n                            <Tooltip title={t('Settings')}>\n                                <IconButton\n                                    size=\"small\"\n                                    className={classes.button}\n                                    onClick={() => openConfig(id)}\n                                >\n                                    <BuildIcon />\n                                </IconButton>\n                            </Tooltip>\n                        </Hidden>\n                    </IsVisible>\n                    <IsVisible config={item} name=\"allowInstanceDelete\">\n                        <Tooltip title={t('Delete')}>\n                            <IconButton\n                                size=\"small\"\n                                className={classes.button}\n                                onClick={(event) => {\n                                    setOpenDialogDelete(true);\n                                    event.stopPropagation();\n                                }}\n                            >\n                                <DeleteIcon />\n                            </IconButton>\n                        </Tooltip>\n                    </IsVisible>\n                    <div className={classes.visible570}>\n                        <Tooltip title=\"sentry\">\n                            <IconButton\n                                size=\"small\"\n                                className={clsx(classes.button, expertMode && item.checkSentry ? null : classes.hide)}\n                                onClick={e => {\n                                    e.stopPropagation();\n                                    setSentry(instance);\n                                }}\n                            >\n                                <CardMedia\n                                    className={clsx(classes.sentry, !item.sentry && classes.contrast0)}\n                                    component=\"img\"\n                                    image={sentry}\n                                />\n                            </IconButton>\n                        </Tooltip>\n                    </div>\n                    {item.supportCompact ?\n                        <div className={classes.visible570}>\n                            <Tooltip title={t('compact groups')}>\n                                <IconButton\n                                    size=\"small\"\n                                    className={clsx(classes.button, expertMode && item.checkCompact ? null : classes.hide)}\n                                    onClick={e => {\n                                        e.stopPropagation();\n                                        setCompact(instance);\n                                    }}\n                                >\n                                    <ViewCompactIcon color={!!item.compact ? 'primary' : 'inherit'} />\n                                </IconButton>\n                            </Tooltip>\n                        </div> : null}\n                </div>\n            </Grid>\n        </AccordionDetails>\n    </Accordion>;\n}\n\nInstanceRow.propTypes = {\n    t: PropTypes.func,\n    themeType: PropTypes.string,\n    adminInstance: PropTypes.string,\n    hosts: PropTypes.array,\n    setHost: PropTypes.func,\n    instanceId: PropTypes.string,\n    deleting: PropTypes.bool,\n    onExpandRow: PropTypes.func,\n    item: PropTypes.object,\n};\n\n\nexport default withStyles(styles)(InstanceRow);","import React, { useState } from 'react';\nimport ReactDOM from 'react-dom';\n\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport { Avatar, Card, Checkbox, DialogTitle, FormControlLabel, makeStyles, MenuItem, Select, ThemeProvider } from '@material-ui/core';\n\nimport WarningIcon from '@material-ui/icons/Warning';\nimport ScheduleIcon from '@material-ui/icons/Schedule';\nimport SettingsIcon from '@material-ui/icons/Lens';\nimport IconCheck from '@material-ui/icons/Check';\nimport IconClose from '@material-ui/icons/Close';\n\nimport { green, grey, orange, red } from '@material-ui/core/colors';\n\nimport I18n from '@iobroker/adapter-react/i18n';\nimport theme from '@iobroker/adapter-react/Theme';\nimport Utils from '@iobroker/adapter-react/Components/Utils';\n\nimport filterIcon from '../../assets/filter.svg';\n\nlet node = null;\n\nconst useStyles = makeStyles(theme => ({\n    root: {\n        width: '100%',\n        padding: 10\n    },\n    paper: {\n        // maxWidth: 1000,\n        width: '100%',\n        maxHeight: 800,\n        // height: 'calc(100% - 32px)',\n    },\n    overflowHidden: {\n        display: 'flex',\n        overflow: 'hidden'\n    },\n    pre: {\n        overflow: 'auto',\n        whiteSpace: 'pre-wrap',\n        margin: 0\n    },\n    rowBlock: {\n        display: 'flex',\n        width: '100%',\n        justifyContent: 'space-between',\n        margin: '10px 0'\n    },\n    select: {\n        minWidth: 200\n    },\n    checkbox: {\n        minWidth: 160\n    },\n    statusIcon_1: { // circle\n        border: '2px solid grey',\n        borderRadius: 20,\n        color: 'grey'\n    },\n    statusIcon_2: { // square\n        border: '2px solid grey',\n        borderRadius: 20,\n        color: '#d32f2f'\n    },\n    statusIcon_3: { // triangle\n        border: 0,\n        borderRadius: 0,\n        color: '#ffa726'\n    },\n    statusIcon_4: { // watch\n        border: '2px solid grey',\n        borderRadius: 20,\n        color: '#0055a9'\n    },\n    statusIcon_5: { // circle ?\n        border: '2px solid grey',\n        borderRadius: 20,\n    },\n    statusIcon_6: { // circle ?\n        border: '2px solid grey',\n        borderRadius: 20,\n    },\n    menuWrapper: {\n        display: 'flex',\n        alignItems: 'center'\n    },\n    iconWrapper: {\n        marginRight: 10\n    },\n    textWrapper: {\n        whiteSpace: 'nowrap',\n        overflow: 'hidden',\n        textOverflow: 'ellipsis'\n    },\n    square: {\n        width: 24,\n        height: 24,\n        marginRight: 10,\n        filter: 'invert(0%) sepia(90%) saturate(300%) hue-rotate(-537deg) brightness(99%) contrast(97%)'\n    },\n    statusIcon_green: { // square\n        border: '2px solid grey',\n        borderRadius: 2,\n    },\n    statusIcon_red: { // circle\n        border: '2px solid grey',\n        borderRadius: 20,\n    },\n    statusIcon_orange: { // triangle\n        border: 0,\n        borderRadius: 0,\n    },\n    statusIcon_orangeDevice: { // triangle\n        border: 0,\n        borderRadius: 0,\n    },\n    statusIcon_blue: { // watch\n        border: '2px solid grey',\n        borderRadius: 20,\n    },\n    statusIcon_gray: { // circle ?\n        border: '2px solid grey',\n        borderRadius: 20,\n    },\n    statusIcon_grey: { // circle ?\n        border: '2px solid grey',\n        borderRadius: 20,\n    },\n    green: {\n        color: green[700]\n    },\n    red: {\n        color: red[700]\n    },\n    grey: {\n        color: grey[700]\n    },\n    blue: {\n        color: '#0055a9'\n    },\n    orange: {\n        color: orange[400],\n    },\n    orangeDevice: {\n        color: orange[300],\n    },\n    icon: {\n        width: 18,\n        height: 18,\n        marginRight: theme.spacing(1),\n        display: 'inline-block'\n    },\n    menuValue: {\n        whiteSpace: 'nowrap'\n    }\n}));\n\nconst modeArray = ['none', 'daemon', 'schedule', 'once'];\n// const statusArray = [\n//     'none',\n//     'disabled',\n//     'enabled, but not alive',\n//     'enabled, alive, but not connected to controller',\n//     'enabled, alive, connected, but not connected to device or service',\n//     'enabled and OK'\n// ];\n\nconst getModeIcon = (idx, className) => {\n    if (idx === 1) {\n        return <SettingsIcon className={className} />;\n    } else if (idx === 2) {\n        return <SettingsIcon className={className} />;\n    } else if (idx === 3) {\n        return <WarningIcon className={className} />;\n    } else if (idx === 4) {\n        return <ScheduleIcon className={className} />\n    } else if (idx === 5) {\n        return <div style={{\n            width: 20,\n            height: 20,\n            margin: 2,\n            borderRadius: 2,\n        }} className={className}><div style={{\n            width: 'calc(100% - 2px)',\n            height: 'calc(100% - 2px)',\n            borderRadius: 2,\n            margin: 1,\n            backgroundColor: '#66bb6a',\n        }} /></div>;\n    }\n    return null;\n}\n\nconst statusArray = {\n    none: { text: 'none', _class: '', status: '' },\n    disabled: { text: 'disabled', _class: 'statusIcon_grey', status: 'grey' },\n    not_alive: { text: 'enabled, but not alive', _class: 'statusIcon_red', status: 'red' },\n    alive_not_connected: { text: 'enabled, alive, but not connected to controller', _class: 'statusIcon_orange', status: 'orange' },\n    alive_no_device: { text: 'enabled, alive, but not connected to device or service', _class: 'statusIcon_orangeDevice', status: 'orange' },\n    ok: { text: 'enabled and OK', _class: 'statusIcon_green', status: 'green' }\n};\n\nconst InstanceFilterDialog = ({ cb, filterMode, filterStatus }) => {\n    const classes = useStyles();\n    const [open, setOpen] = useState(true);\n\n    const [modeCheck, setModeCheck] = useState(filterMode);\n    const [statusCheck, setStatusCheck] = useState(filterStatus);\n\n    const onClose = () => {\n        setOpen(false);\n        if (node) {\n            document.body.removeChild(node);\n            node = null;\n        }\n    }\n\n    return <ThemeProvider theme={theme(Utils.getThemeName())}>\n        <Dialog\n            onClose={onClose}\n            open={open}\n            classes={{ paper: classes.paper }}\n        >\n            <DialogTitle style={{ display: 'flex' }}>\n                <div style={{ display: 'flex' }}>\n                    <Avatar variant=\"square\" className={classes.square} src={filterIcon} />\n                    {I18n.t('Filter instances')}\n                </div>\n            </DialogTitle>\n            <DialogContent className={classes.overflowHidden} dividers>\n                <Card className={classes.root}>\n                    <div className={classes.rowBlock}>\n                        <FormControlLabel\n                            className={classes.checkbox}\n                            control={\n                                <Checkbox\n                                    checked={!!modeCheck}\n                                    onChange={(e) => e.target.checked ? setModeCheck('daemon') : setModeCheck(null)}\n                                />\n                            }\n                            label={I18n.t('Filter by mode')}\n                        />\n                        <Select\n                            disabled={!modeCheck}\n                            variant=\"standard\"\n                            value={modeCheck || 'none'}\n                            className={classes.select}\n                            onChange={el => {\n                                if (el.target.value === 'none') {\n                                    setModeCheck(null);\n                                } else {\n                                    setModeCheck(el.target.value);\n                                }\n                            }}\n                        >\n                            {modeArray.map(el => <MenuItem key={el} value={el}>\n                                {I18n.t(el)}\n                            </MenuItem>)}\n                        </Select>\n                    </div>\n                    <div className={classes.rowBlock}>\n                        <FormControlLabel\n                            className={classes.checkbox}\n                            control={\n                                <Checkbox\n                                    checked={!!statusCheck}\n                                    onChange={e => e.target.checked ? setStatusCheck('ok') : setStatusCheck(null)}\n                                />\n                            }\n                            label={I18n.t('Filter by status')}\n                        />\n                        <Select\n                            disabled={!statusCheck}\n                            variant=\"standard\"\n                            value={statusCheck || 'none'}\n                            className={classes.select}\n                            onChange={el => {\n                                if (el.target.value === 'none') {\n                                    setStatusCheck(null);\n                                } else {\n                                    setStatusCheck(el.target.value);\n                                }\n                            }}\n                        >\n                            {Object.keys(statusArray).map((name, idx) => <MenuItem key={name} value={name}>\n                                <div className={classes.menuWrapper}>\n                                    {statusArray[name].status ? <div className={classes.iconWrapper}>{getModeIcon(idx, classes[`statusIcon_${idx}`])}</div> : null}\n                                    <div className={classes.textWrapper}>{I18n.t(statusArray[name].text)}</div>\n                                </div>\n                            </MenuItem>)}\n                        </Select>\n                    </div>\n                </Card>\n            </DialogContent>\n            <DialogActions>\n                <Button\n                    variant=\"contained\"\n                    autoFocus\n                    disabled={modeCheck === filterMode && filterStatus === statusCheck}\n                    onClick={() => {\n                        onClose();\n                        cb && cb({\n                            filterMode: modeCheck,\n                            filterStatus: statusCheck\n                        });\n                    }}\n                    color=\"primary\"\n                    startIcon={<IconCheck />}\n                >\n                    {I18n.t('Apply')}\n                </Button>\n                <Button\n                    variant=\"contained\"\n                    onClick={() => {\n                        onClose();\n                        cb && cb(false);\n                    }}\n                    startIcon={<IconClose />}\n                >\n                    {I18n.t('Close')}\n                </Button>\n            </DialogActions>\n        </Dialog>\n    </ThemeProvider>;\n}\n\nexport const instanceFilterDialogCallback = (cb, filterMode, filterStatus, getModeIcon) => {\n    if (!node) {\n        node = document.createElement('div');\n        node.id = 'renderModal';\n        document.body.appendChild(node);\n    }\n    return ReactDOM.render(<InstanceFilterDialog cb={cb} getModeIcon={getModeIcon} filterMode={filterMode} filterStatus={filterStatus} />, node);\n}","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport {\n    Accordion, AccordionDetails, AccordionSummary,\n} from '@material-ui/core';\n\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport MaterialDynamicIcon from '../../helpers/MaterialDynamicIcon';\n\nconst boxShadow = '0 2px 2px 0 rgba(0, 0, 0, .14),0 3px 1px -2px rgba(0, 0, 0, .12),0 1px 5px 0 rgba(0, 0, 0, .2)';\nconst boxShadowHover = '0 8px 17px 0 rgba(0, 0, 0, .2),0 6px 20px 0 rgba(0, 0, 0, .19)';\n\nconst styles = theme => ({\n    root: {\n        position: 'relative',\n        margin: 10,\n        width: 300,\n        minHeight: 200,\n        background: theme.palette.background.default,\n        boxShadow,\n        display: 'flex',\n        flexDirection: 'column',\n        transition: 'box-shadow 0.5s',\n        '&:hover': {\n            boxShadow: boxShadowHover\n        }\n    },\n    row: {\n        paddingLeft: 8,\n        flexDirection: 'row-reverse',\n        minHeight: '48px !important',\n        height: 48,\n        fontWeight: 'bold',\n        fontSize: 16\n    },\n    iconStyle: {\n        marginRight: 10\n    },\n    wrapperName: {\n        margin: '0 10px',\n        display: 'flex',\n        alignItems: 'center'\n    },\n    wrapperChildren: {\n        width: '100%'\n    },\n    accordionDetails: {\n        padding: 0\n    },\n    accordion: {\n        margin: '1px 0 !important'\n    }\n});\n\nconst InstanceCategory = ({\n    name,\n    key,\n    children,\n    classes,\n    expanded,\n    onExpand,\n}) => {\n    return <Accordion\n        expanded={!!expanded}\n        onChange={() => onExpand(!expanded)}\n        classes={{ root: classes.accordion }} key={key} square>\n        <AccordionSummary\n            classes={{ root: classes.row }}\n            expandIcon={<ExpandMoreIcon />}>\n            <div className={classes.wrapperName}>\n                <MaterialDynamicIcon objIconBool iconName={name} className={classes.iconStyle} />{name}\n            </div>\n        </AccordionSummary>\n        <AccordionDetails className={classes.accordionDetails}>\n            <div className={classes.wrapperChildren}>\n                {children}\n            </div>\n        </AccordionDetails>\n    </Accordion>;\n}\n\nInstanceCategory.propTypes = {\n    t: PropTypes.func,\n    themeType: PropTypes.string,\n    adminInstance: PropTypes.string,\n    hosts: PropTypes.array,\n    setHost: PropTypes.func,\n    host: PropTypes.string,\n    instanceId: PropTypes.string,\n};\n\n\nexport default withStyles(styles)(InstanceCategory);","import { Component, createRef } from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\n\nimport withWidth from '@material-ui/core/withWidth';\nimport { withStyles } from '@material-ui/core/styles';\n\nimport IconButton from '@material-ui/core/IconButton';\nimport LinearProgress from '@material-ui/core/LinearProgress';\nimport TableCell from '@material-ui/core/TableCell';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport Paper from '@material-ui/core/Paper';\nimport { Hidden, InputAdornment, TextField } from '@material-ui/core';\n\nimport PlayArrowIcon from '@material-ui/icons/PlayArrow';\nimport RefreshIcon from '@material-ui/icons/Refresh';\nimport BugReportIcon from '@material-ui/icons/BugReport';\nimport InfoIcon from '@material-ui/icons/Info';\nimport WarningIcon from '@material-ui/icons/Warning';\nimport ErrorIcon from '@material-ui/icons/Error';\nimport DevicesIcon from '@material-ui/icons/Devices';\nimport ViewListIcon from '@material-ui/icons/ViewList';\nimport ViewModuleIcon from '@material-ui/icons/ViewModule';\nimport CloseIcon from '@material-ui/icons/Close';\nimport ViewCompactIcon from '@material-ui/icons/ViewCompact';\nimport ScheduleIcon from '@material-ui/icons/Schedule';\nimport SettingsIcon from '@material-ui/icons/Lens';\nimport FolderIcon from '@material-ui/icons/Folder';\nimport FolderOpenIcon from '@material-ui/icons/FolderOpen';\nimport ListIcon from '@material-ui/icons/List';\nimport {FaFilter as FilterListIcon} from 'react-icons/fa';\n\nimport amber from '@material-ui/core/colors/amber';\nimport blue from '@material-ui/core/colors/blue';\nimport green from '@material-ui/core/colors/green';\nimport grey from '@material-ui/core/colors/grey';\nimport red from '@material-ui/core/colors/red';\n\nimport Router from '@iobroker/adapter-react/Components/Router';\n\nimport Config from '../dialogs/Config';\nimport Utils from '../Utils';\nimport TabContainer from '../components/TabContainer';\nimport TabContent from '../components/TabContent';\nimport TabHeader from '../components/TabHeader';\nimport InstanceCard from '../components/Instances/InstanceCard';\nimport InstanceRow from '../components/Instances/InstanceRow';\nimport CustomSelectButton from '../components/CustomSelectButton';\nimport { instanceFilterDialogCallback } from '../components/Instances/InstanceFilterDialog';\nimport InstanceCategory from '../components/Instances/InstanceCategory';\n\nconst styles = theme => ({\n    table: {\n        minWidth: 650,\n    },\n    tableRow: {\n        '&:nth-of-type(odd)': {\n            backgroundColor: grey[300],\n        },\n        '&:nth-of-type(even)': {\n            backgroundColor: grey[200],\n        }\n    },\n    smallAvatar: {\n        width: theme.spacing(3),\n        height: theme.spacing(3)\n    },\n    button: {\n        padding: '5px'\n    },\n    enabled: {\n        color: green[400],\n        '&:hover': {\n            backgroundColor: green[200]\n        }\n    },\n    disabled: {\n        color: red[400],\n        '&:hover': {\n            backgroundColor: red[200]\n        }\n    },\n    hide: {\n        visibility: 'hidden'\n    },\n    state: {\n        width: theme.spacing(2),\n        height: theme.spacing(2),\n        borderRadius: '100%'\n    },\n    green: {\n        backgroundColor: green[700]\n    },\n    red: {\n        backgroundColor: red[700]\n    },\n    grey: {\n        backgroundColor: grey[700]\n    },\n    blue: {\n        backgroundColor: blue[700]\n    },\n    transparent: {\n        color: 'transparent',\n        backgroundColor: 'transparent'\n    },\n    paper: {\n        height: '100%'\n    },\n    iframe: {\n        height: '100%',\n        width: '100%',\n        backgroundColor: '#FFF',\n        color: '#000',\n        borderRadius: 4,\n        boxShadow: '0px 2px 1px -1px rgb(0 0 0 / 20%), 0px 1px 1px 0px rgb(0 0 0 / 14%), 0px 1px 3px 0px rgb(0 0 0 / 12%)',\n        border: '0px solid #888'\n    },\n    silly: {\n\n    },\n    debug: {\n        backgroundColor: grey[700]\n    },\n    info: {\n        backgroundColor: blue[700]\n    },\n    warn: {\n        backgroundColor: amber[700]\n    },\n    error: {\n        backgroundColor: red[700]\n    },\n    grow: {\n        flexGrow: 1\n    },\n    tableRender: {\n        tableLayout: 'fixed',\n        minWidth: 960,\n        '& td': {\n            whiteSpace: 'nowrap',\n            overflow: 'hidden',\n            textOverflow: 'ellipsis'\n        }\n    },\n    cards: {\n        display: 'flex',\n        flexFlow: 'wrap',\n        justifyContent: 'center',\n    },\n    sentry: {\n        width: 24,\n        height: 24,\n        objectFit: 'fill',\n        filter: 'invert(0%) sepia(90%) saturate(1267%) hue-rotate(-539deg) brightness(99%) contrast(97%)'\n    },\n    contrast0: {\n        filter: 'contrast(0%)'\n    },\n    compactButtons: {\n        display: 'inline-block',\n        borderRadius: 4,\n        border: '1px gray dotted'\n    },\n    okSymbol: {\n        width: 20,\n        height: 20,\n        margin: 2,\n        borderRadius: 2,\n        //border: '2px solid #00000000',\n    },\n    okSymbolInner: {\n        width: 'calc(100% - 2px)',\n        height: 'calc(100% - 2px)',\n        borderRadius: 2,\n        margin: 1,\n        backgroundColor: '#66bb6a',\n    },\n    square: {\n        width: 24,\n        height: 24,\n        filter: theme.palette.type === 'dark' ? 'brightness(0) invert(1)' : 'grayscale(100%)',\n        opacity: theme.palette.type === 'dark' ? 1 : 0.8\n    },\n    primary: {\n        filter: 'invert(0%) sepia(90%) saturate(300%) hue-rotate(-537deg) brightness(99%) contrast(97%)'\n    },\n    filterActive: {\n        color: theme.palette.primary.main\n    }\n});\n\n// every tab should get their data itself from server\nclass Instances extends Component {\n    constructor(props) {\n        super(props);\n\n        let expandedFolder = [];\n        if (window.localStorage.getItem('Instances.expandedFolder')) {\n            try {\n                expandedFolder = JSON.parse(window.localStorage.getItem('Instances.expandedFolder'))\n            } catch (e) {\n\n            }\n        }\n\n        this.state = {\n            expertMode: this.props.expertMode,\n            runningInstances: false,\n            dialog: null,\n            instances: null,\n            dialogProp: null,\n            states: null,\n            playArrow: false,\n            onlyCurrentHost: false,\n            viewMode: false,\n            viewCategory: false,\n            folderOpen: false,\n            hostData: null,\n            processes: null,\n            mem: null,\n            percent: null,\n            memFree: null,\n            filterText: window.localStorage.getItem('instances.filter') || '',\n            compact: false,\n            maxCompactGroupNumber: 1,\n            filterCompactGroup: 'All',\n            sentry: false,\n            deleting: null,\n\n            expandedFolder,\n\n            //filter\n            filterMode: window.localStorage.getItem('Instances.filterMode') ?\n                window.localStorage.getItem('Instances.filterMode') === 'null' ?\n                    null :\n                    window.localStorage.getItem('Instances.filterMode') : null,\n            filterStatus: window.localStorage.getItem('Instances.filterStatus') ?\n            window.localStorage.getItem('Instances.filterStatus') === 'null' ?\n                null :\n                window.localStorage.getItem('Instances.filterStatus') : null,\n        };\n\n        this.columns = {\n            instance: { onlyExpert: false },\n            actions: { onlyExpert: false },\n            title: { onlyExpert: false },\n            schedule: { onlyExpert: false },\n            restart: { onlyExpert: true },\n            log: { onlyExpert: true },\n            ramLimit: { onlyExpert: true },\n            events: { onlyExpert: true },\n            ram: { onlyExpert: false }\n        };\n\n        this.promises = {};\n        this.states = {};\n        this.adapters = [];\n        this.statesUpdateTimer = null;\n        this.wordCache = {};\n        this.oneReload = false;\n\n        this.t = this.translate;\n        this.inputRef = createRef();\n    }\n\n    translate = (word, arg1, arg2) => {\n        if (arg1 !== undefined) {\n            return this.props.t(word, arg1, arg2);\n        }\n\n        if (!this.wordCache[word]) {\n            this.wordCache[word] = this.props.t(word);\n        }\n\n        return this.wordCache[word];\n    }\n\n    async componentDidMount() {\n        await this.getParamsLocalAndPanel();\n        await this.props.instancesWorker.registerHandler(this.getInstances);\n        await this.getData();\n        await this.getHostsData();\n        await this.getInstances();\n    }\n\n    async componentWillUnmount() {\n        this.subscribeStates(true);\n        this.props.instancesWorker.unregisterHandler(this.getInstances);\n    }\n\n    getStates(update) {\n        if (update) {\n            this.promises.states = null;\n        }\n        this.promises.states = this.promises.states || this.props.socket.getForeignStates('system.adapter.*');\n\n        return this.promises.states;\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        const location = Router.getLocation();\n\n        const newState = {\n            dialog: location.dialog,\n            dialogProp: location.id\n        };\n\n        if (props.expertMode !== state.expertMode) {\n            newState.expertMode = props.expertMode;\n        }\n\n        return newState;\n    }\n\n    getInstances = async data => {\n        const start = Date.now();\n        let instances = [];\n        let instancesWorker = await this.props.instancesWorker.getInstances();\n\n        Object.keys(instancesWorker).forEach(el =>\n            instances.push(instancesWorker[el]));\n\n        let memRssId = `${this.props.currentHost}.memRss`;\n        this.states[memRssId] = this.states[memRssId] || (await this.props.socket.getState(memRssId));\n\n        const host = this.states[memRssId];\n        let processes = 1;\n        let mem = host ? host.val : 0;\n        for (let i = 0; i < instances.length; i++) {\n            let inst = instances[i];\n            if (!inst || !inst.common) {\n                return\n            }\n            /*if (inst.common.host !== this.props.currentHostName) {\n                return\n            }*/\n            if (inst.common.enabled && inst.common.mode === 'daemon') {\n                memRssId = inst._id + '.memRss';\n                this.states[memRssId] = this.states[memRssId] || (await this.props.socket.getState(memRssId));\n                const m = this.states[memRssId];\n                mem += m ? m.val : 0;\n                processes++;\n            }\n        }\n\n        const formatted = {};\n\n        instances.sort((a, b) => {\n            const pA = a._id.split('.');\n            const pB = b._id.split('.');\n            const numA = parseInt(pA[pA.length - 1], 10);\n            const numB = parseInt(pB[pB.length - 1], 10);\n            const nameA = pA[pA.length - 2];\n            const nameB = pB[pB.length - 2];\n\n            if (nameA === nameB) {\n                return numA > numB ? 1 : (numA < numB ? -1 : 0);\n            } else {\n                return nameA > nameB ? 1 : (nameA < nameB ? -1 : 0);\n            }\n        });\n\n        let maxCompactGroupNumber = 1;\n        const newState = {};\n\n        instances.forEach(obj => {\n            const common = obj ? obj.common : null;\n            const objId = obj._id.split('.');\n            const instanceId = objId[objId.length - 1];\n\n            if (common.compactGroup && typeof common.compactGroup === 'number' && maxCompactGroupNumber < common.compactGroup) {\n                maxCompactGroupNumber = common.compactGroup;\n            }\n\n            const instance = {};\n            instance.id = obj._id.replace('system.adapter.', '');\n            instance.obj = obj;\n            instance.compact = !!common.compact;\n            instance.host = common.host;\n            instance.name = common.titleLang ? common.titleLang[this.props.lang] || common.titleLang.en || common.title || '' : common.title;\n            instance.image = common.icon ? 'adapter/' + common.name + '/' + common.icon : 'img/no-image.png';\n            instance.enabled = common.enabled;\n\n            if (instance.name && typeof instance.name === 'object') {\n                instance.name = instance.name[this.props.lang] || instance.name.en || '';\n            }\n\n            let links = common.localLinks || common.localLink || '';\n            if (links && typeof links === 'string') {\n                links = { _default: links };\n            }\n\n            const names = links ? Object.keys(links) : [];\n\n            names.forEach(linkName => {\n                instance.links = instance.links || [];\n                let link = links[linkName];\n                if (typeof link === 'string') {\n                    link = { link };\n                }\n\n                const urls = Utils.replaceLink(link.link, common.name, instanceId, {\n                    objects: instancesWorker,\n                    hostname: this.props.hostname,\n                    protocol: this.props.protocol,\n                    port: this.props.port,\n                    hosts: this.props.hosts,\n                    adminInstance: this.props.adminInstance,\n                }) || [];\n\n                if (urls.length === 1) {\n                    instance.links.push({\n                        name: linkName === '_default' ? (names.length === 1 ? '' : this.t('default')) : this.t(linkName),\n                        link: urls[0].url,\n                        port: urls[0].port,\n                        color: link.color,\n                    });\n                } else if (urls.length > 1) {\n                    urls.forEach(item => {\n                        instance.links.push({\n                            name: linkName === '_default' ? (names.length === 1 ? '' : this.t('default')) : this.t(linkName),\n                            link: item.url,\n                            port: item.port,\n                            color: link.color,\n                        });\n                    });\n                }\n            });\n\n            instance.canStart = !common.onlyWWW;\n            instance.config = common.adminUI.config !== 'none';\n            instance.jsonConfig = common.adminUI.config === 'json';\n            instance.materialize = common.adminUI.config === 'materialize';\n            instance.compactMode = common.runAsCompactMode || false;\n            instance.mode = common.mode || null;\n            instance.loglevel = common.loglevel || null;\n            instance.adapter = common.name || null;\n            instance.version = common.version || null;\n\n            formatted[obj._id] = instance;\n        });\n\n        console.log('getInstances: ' + (Date.now() - start));\n\n        if (this.state.deleting && !formatted['system.adapter.' + this.state.deleting]) {\n            newState.deleting = null;\n        }\n\n        newState.maxCompactGroupNumber = maxCompactGroupNumber;\n        newState.processes = processes;\n        newState.mem = Math.round(mem);\n        newState.instances = formatted;\n\n        this._cacheList = null;\n        this.setState(newState);\n    }\n\n    getParamsLocalAndPanel = async () => {\n        const compact = await this.props.socket.readBaseSettings(this.props.currentHost)\n            .then(e => !!e.config?.system?.compact)\n            .catch(e => window.alert(`Cannot read compact mode by host \"${this.props.currentHost}\": ${e}`));\n\n        const onlyCurrentHost = JSON.parse(window.localStorage.getItem('Instances.onlyCurrentHost'));\n        const playArrow = JSON.parse(window.localStorage.getItem('Instances.playArrow'));\n        const viewMode = JSON.parse(window.localStorage.getItem('Instances.viewMode'));\n        const viewCategory = JSON.parse(window.localStorage.getItem('Instances.viewCategory'));\n        let filterCompactGroup = JSON.parse(window.localStorage.getItem('Instances.filterCompactGroup'));\n        if (!filterCompactGroup && filterCompactGroup !== 0) {\n            filterCompactGroup = 'All';\n        }\n\n        this._cacheList = null;\n        this.setState({\n            filterCompactGroup,\n            compact,\n            onlyCurrentHost,\n            playArrow,\n            viewMode,\n            viewCategory\n        });\n    }\n\n    async getData(update) {\n        try {\n            const adapters = this.props.socket.getAdapters(update);\n            const statesProm = this.getStates();\n\n            const [states, _adapters] = await Promise.all(\n                [\n                    statesProm,\n                    adapters\n                ]\n            );\n            this.adapters = _adapters || []\n            this.states = states || [];\n\n        } catch (error) {\n            console.log(error)\n        }\n\n        if (!this.states) {\n            return;\n        }\n\n        if (!this.subscribed) {\n            this.subscribed = true;\n            this.subscribeStates();\n        }\n    }\n\n    onStateChange = (id, state) => {\n        const oldState = this.states[id];\n        this.states[id] = state;\n        if ((!oldState && state) || (oldState && !state) || (oldState && state && oldState.val !== state.val)) {\n            if (this.state.dialog === 'config' && this.state.dialogProp) {\n                this.statesUpdateTimer && clearTimeout(this.statesUpdateTimer);\n                this.statesUpdateTimer = null;\n                this.shouldUpdateAfterDialogClosed = true;\n            } else {\n                if (!this.statesUpdateTimer) {\n                    this.statesUpdateTimer = setTimeout(() => {\n                        this.statesUpdateTimer = null;\n                        this._cacheList = null;\n                        this.forceUpdate();\n                    }, 1000);\n                }\n            }\n        }\n    };\n\n    subscribeStates(isUnsubscribe) {\n        const func = isUnsubscribe ? this.props.socket.unsubscribeState : this.props.socket.subscribeState;\n        // func('system.adapter.*', this.onStateChange);\n        func.call(this.props.socket, 'system.adapter.*.alive', this.onStateChange);\n        func.call(this.props.socket, 'system.adapter.*.connected', this.onStateChange);\n        func.call(this.props.socket, 'system.adapter.*.inputCount', this.onStateChange);\n        func.call(this.props.socket, 'system.adapter.*.memRss', this.onStateChange);\n        func.call(this.props.socket, 'system.adapter.*.outputCount', this.onStateChange);\n        func.call(this.props.socket, 'system.adapter.*.logLevel', this.onStateChange);\n        //func('system.host.*', this.onStateChange);\n        func.call(this.props.socket, 'system.host.*.diskFree', this.onStateChange);\n        func.call(this.props.socket, 'system.host.*.diskSize', this.onStateChange);\n        func.call(this.props.socket, 'system.host.*.diskWarning', this.onStateChange);\n        func.call(this.props.socket, 'system.host.*.freemem', this.onStateChange);\n        func.call(this.props.socket, '*.info.connection', this.onStateChange);\n    }\n\n    extendObject = (id, data) => {\n        this.props.socket.extendObject(id, data)\n            .catch(error => window.alert(error));\n    }\n\n    openConfig = (instance) => {\n        Router.doNavigate('tab-instances', 'config', instance);\n    }\n\n    // returns:\n    // grey   - daemon / disabled\n    // green  - daemon / run,connected,alive\n    // blue   - schedule\n    // orangeDevice - daemon / run, connected to controller, not connected to device\n    // orange - daemon / run,not connected\n    // red    - daemon / not run, not connected\n    getInstanceStatus = obj => {\n        const common = obj ? obj.common : null;\n        const mode = common?.mode || '';\n        let status = mode === 'daemon' ? 'green' : 'blue';\n\n        if (common && common.enabled && (!common.webExtension || !obj.native.webInstance || mode === 'daemon')) {\n            const alive = this.states[obj._id + '.alive'];\n            const connected = this.states[obj._id + '.connected'];\n            const connection = this.states[(obj._id).replace('system.adapter.', '') + '.info.connection'];\n\n            if (!connected?.val || !alive?.val) {\n                status = mode === 'daemon' ? 'red' : 'orangeDevice';\n            }\n            if (connection && !connection?.val && status !== 'red') {\n                status = 'orange';\n            }\n        } else {\n            status = mode === 'daemon' ? 'grey' : 'blue';\n        }\n\n        return status;\n    }\n\n    isRunning = obj => {\n        return (obj?.common?.onlyWWW || obj?.common?.enabled);\n    }\n\n    isCompactGroup = obj => {\n        return obj?.common?.compactGroup || null;\n    }\n\n    isCompact = obj => {\n        return obj?.common?.runAsCompactMode || false;\n    }\n\n    isCompactGroupCheck = id => {\n        const obj = this.adapters.find(({ _id }) => _id === `system.adapter.${id}`);\n        return obj?.common?.compact || false;\n    }\n\n    getSentrySettings = obj => {\n        return !!obj?.common?.plugins?.sentry || false;\n    }\n\n    isSentry = obj => {\n        return (!!obj?.common?.plugins?.sentry && !obj?.common?.disableDataReporting) || false;\n    }\n\n    getSchedule = obj => {\n        return obj?.common?.schedule ? obj.common.schedule : '';\n    }\n\n    getName = obj => {\n        if (!obj || !obj.common) {\n            return '';\n        }\n        if (obj.common.titleLang) {\n            if (typeof obj.common.titleLang === 'string') {\n                return obj.common.titleLang;\n            } else {\n                return obj.common.titleLang[this.props.lang] || obj.common.titleLang.en || '';\n            }\n        } else {\n            if (obj.common.title && typeof obj.common.title === 'object') {\n                return obj.common.title[this.props.lang] || obj.common.title.en || '';\n            } else {\n                return obj.common.title || '';\n            }\n        }\n    }\n\n    isModeSchedule = obj => {\n        return (obj?.common?.mode && obj?.common?.mode === 'schedule') || false;\n    }\n\n    getMemoryLimitMB = obj => {\n        return obj?.common?.memoryLimitMB;\n    }\n\n    getInstanceHost = obj => {\n        return obj?.common?.host;\n    }\n\n    getRestartSchedule = obj => {\n        return obj?.common?.restartSchedule ? obj.common.restartSchedule : '';\n    }\n\n    getMemory = id => {\n        const state = this.states[id + '.memRss'];\n        return state ? state?.val : 0;\n    }\n\n    getInputOutput = id => {\n        const stateInput = this.states[id + '.inputCount'];\n        const stateOutput = this.states[id + '.outputCount'];\n        return {\n            stateInput: stateInput?.val ? stateInput.val : 0,\n            stateOutput: stateOutput?.val ? stateOutput.val : 0\n        }\n    }\n\n    isAlive = id => {\n        const state = this.states[id + '.alive'];\n        return state ? state.val : false;\n    }\n\n    isConnectedToHost = id => {\n        const state = this.states[id + '.connected'];\n        return state ? state.val : false;\n    }\n\n    isConnected = id => {\n        const instance = this.state.instances[id];\n        return this.states[instance.id + '.info.connection'] ? this.states[instance.id + '.info.connection'].val : null;\n    }\n\n    getHeaders() {\n        const headers = [];\n        Object.keys(this.columns).forEach((column, index) => {\n            if (!column.onlyExpert || column.onlyExpert === this.state.expertMode) {\n                headers.push(<TableCell key={index}>{index}</TableCell>);\n            }\n        });\n\n        return headers;\n    }\n\n    getModeIcon = (mode, status, className) => {\n        if (mode === 'daemon') {\n            if (status === 'orange') {\n                return <WarningIcon className={className}/>;\n            } else if (status === 'green') {\n                return <div className={clsx(className, this.props.classes.okSymbol)}><div className={this.props.classes.okSymbolInner}/></div>;\n            } else {\n                return <SettingsIcon className={className} />;\n            }\n        } else if (mode === 'schedule') {\n            return <ScheduleIcon className={className} />\n        }\n        return null;\n    }\n\n    getStatusFilter = value => {\n        switch (value){\n            case 'not_alive':\n                return 'red';\n\n            case 'alive_no_device':\n                return 'orangeDevice';\n\n            case 'alive_not_connected':\n                return 'orange';\n\n            case 'ok':\n                return 'green';\n\n            case 'disabled':\n            default:\n                return 'grey';\n        }\n    };\n\n    getLogLevelIcon(level) {\n        if (level === 'debug') {\n            return <BugReportIcon />;\n        } else if (level === 'info') {\n            return <InfoIcon />;\n        } else if (level === 'warn') {\n            return <WarningIcon />;\n        } else if (level === 'error') {\n            return <ErrorIcon />;\n        }\n        return null;\n    }\n\n    setSentry = instance =>\n        this.extendObject('system.adapter.' + instance.id, { common: { disableDataReporting: !!this.isSentry(instance.obj) } });\n\n    setTier = (instance, value) =>\n        this.extendObject('system.adapter.' + instance.id, { common: { tier: value } });\n\n    setName = (instance, value) =>\n        this.extendObject('system.adapter.' + instance.id, { common: { titleLang: value } });\n\n    setLogLevel = (instance, value, logOnTheFlyValue) => {\n        if (logOnTheFlyValue) {\n            this.props.socket.setState(`system.adapter.${instance.id}.logLevel`, value);\n        } else {\n            this.extendObject('system.adapter.' + instance.id, { common: { loglevel: value } });\n        }\n    };\n\n    setSchedule = (instance, value) => {\n        if (value) {\n            this.extendObject('system.adapter.' + instance.id, { common: { schedule: value } });\n        } else {\n            this.props.socket.getObject('system.adapter.' + instance.id)\n                .then(obj => {\n                    if (obj.common.schedule) {\n                        delete obj.common.schedule;\n                        return this.props.socket.setObject(obj._id, obj);\n                    }\n                });\n        }\n    };\n\n    setMemoryLimitMB = (instance, value) =>\n        this.extendObject('system.adapter.' + instance.id, { common: { memoryLimitMB: value } });\n\n    deletedInstances = instance => {\n        this.setState({ deleting: instance.id }, () =>\n            this.props.executeCommand('del ' + instance.id));\n    }\n\n    setCompact = instance =>\n        this.extendObject('system.adapter.' + instance.id, { common: { runAsCompactMode: !this.isCompact(instance.obj) } });\n\n    setRestartSchedule = (instance, value) => {\n        if (value) {\n            this.extendObject('system.adapter.' + instance.id, { common: { restartSchedule: value } });\n        } else {\n            this.props.socket.getObject('system.adapter.' + instance.id)\n                .then(obj => {\n                    if (obj.common.restartSchedule) {\n                        delete obj.common.restartSchedule;\n                        return this.props.socket.setObject(obj._id, obj);\n                    }\n                });\n        }\n    };\n\n    setHost = (instance, value) =>\n        this.extendObject('system.adapter.' + instance.id, { common: { host: value } });\n\n    setCompactGroup = (instance, value) => {\n        this.extendObject('system.adapter.' + instance.id, {\n            common: {\n                compactGroup: value === 'controller' ? 0 :\n                    value === 'default' ? 1 : parseInt(value, 10)\n            }\n        });\n\n        if (this.state.maxCompactGroupNumber < value) {\n            this._cacheList = null;\n            this.setState({ maxCompactGroupNumber: value });\n        }\n    }\n\n    cacheInstances() {\n        const currentHostNoPrefix = this.props.currentHost.replace(/^system.host./, '');\n\n        this._cacheList = Object.keys(this.state.instances).map(id => {\n            const instance        = this.state.instances[id];\n            const running         = this.isRunning(instance.obj);\n            const compactGroup    = this.isCompactGroup(instance.obj);\n            const checkCompact    = this.isCompactGroupCheck(instance.adapter) && this.state.compact;\n            const alive           = this.isAlive(id);\n            const compact         = this.isCompact(instance.obj);\n            const supportCompact  = instance.compact || false;\n            const connectedToHost = this.isConnectedToHost(id);\n            const connected       = this.isConnected(id);\n            const name            = this.getName(instance.obj);\n            const logLevel        = this.states[`${id}.logLevel`]?.val || instance.loglevel;\n            const logLevelObject  = instance.loglevel;\n            const tier            = instance?.obj?.common?.tier || 3;\n            const loglevelIcon    = this.getLogLevelIcon(logLevel);\n            const inputOutput     = this.getInputOutput(id);\n            const modeSchedule    = this.isModeSchedule(instance.obj);\n            const memoryLimitMB   = this.getMemoryLimitMB(instance.obj);\n\n            const checkSentry     = this.getSentrySettings(instance.obj); // is it possible to enable/disable sentry for this adapter\n            const currentSentry   = this.isSentry(instance.obj);\n\n            return {\n                id,\n                running,\n                host: instance.host,\n                nameId: instance.id,\n                compactGroup,\n                checkCompact,\n                mode: instance.mode,\n                sentry: currentSentry,\n                category: instance.obj.common.type || 'other',\n                status: this.getInstanceStatus(instance.obj),\n                alive,\n                compact,\n                supportCompact,\n                connectedToHost,\n                connected,\n                name,\n                logLevel,\n                logLevelObject,\n                tier,\n                loglevelIcon,\n                inputOutput,\n                modeSchedule,\n                checkSentry,\n                memoryLimitMB,\n                allowInstanceSettings: this.props.repository[instance.adapter] ? this.props.repository[instance.adapter].allowInstanceSettings : true,\n                allowInstanceDelete: this.props.repository[instance.adapter] ? this.props.repository[instance.adapter].allowInstanceDelete : true,\n                allowInstanceLink: this.props.repository[instance.adapter] ? this.props.repository[instance.adapter].allowInstanceLink : true,\n            }\n        });\n\n        if (this.state.playArrow) {\n            this._cacheList = this._cacheList.filter(({ running }) => this.state.playArrow < 2 ? running : !running);\n        }\n\n        if (this.state.onlyCurrentHost) {\n            this._cacheList = this._cacheList.filter(({ host }) => host === currentHostNoPrefix);\n        }\n\n        if (this.state.filterText) {\n            const filterText = this.state.filterText.toLowerCase();\n            this._cacheList = this._cacheList.filter(({ name, nameId }) => name.toLowerCase().includes(filterText) || nameId.toLowerCase().includes(filterText));\n        }\n\n        if (this.props.expertMode && (this.state.filterCompactGroup || this.state.filterCompactGroup === 0) && this.state.compact) {\n            this._cacheList = this._cacheList.filter(({ compactGroup }) => compactGroup === this.state.filterCompactGroup ||\n                this.state.filterCompactGroup === 'All' ||\n                (this.state.filterCompactGroup === 'default' && (compactGroup === null || compactGroup === 1)) ||\n                (this.state.filterCompactGroup === 'controller' && compactGroup === '0'))\n        }\n        if (this.state.filterMode) {\n            this._cacheList = this._cacheList.filter(item => item.mode === this.state.filterMode);\n        }\n        if (this.state.filterStatus) {\n            const status = this.getStatusFilter(this.state.filterStatus)\n            this._cacheList = this._cacheList.filter(item => status === item.status);\n        }\n\n        return this._cacheList;\n    }\n\n    clearAllFilters() {\n        const state = {\n            playArrow: false,\n            onlyCurrentHost: false,\n            filterCompactGroup: 'All',\n            filterMode: null,\n            filterStatus: null,\n            filterText: ''\n        };\n        window.localStorage.removeItem('instances.filter');\n        window.localStorage.removeItem(`Instances.playArrow`);\n        window.localStorage.removeItem('Instances.onlyCurrentHost');\n        window.localStorage.removeItem('Instances.playArrow');\n        window.localStorage.removeItem('Instances.filterCompactGroup');\n        window.localStorage.removeItem('Instances.filterMode');\n        window.localStorage.removeItem('Instances.filterStatus');\n        this._cacheList = null;\n        this.setState(state, () => {\n            if (this.inputRef.current) {\n                this.inputRef.current.value = '';\n            }\n            this.cacheInstances();\n        });\n    }\n\n    getPanels() {\n        if (!this._cacheList) {\n            this.cacheInstances();\n        }\n\n        let list = this._cacheList.map((item, idx) => {\n            const id = item.id;\n            const instance = this.state.instances[id];\n\n            if (this.state.viewMode) {\n                return {\n                    category: item.category,\n                    render: <InstanceCard\n                        deleting={this.state.deleting === instance.id}\n                        adminInstance={this.props.adminInstance}\n                        maxCompactGroupNumber={this.state.maxCompactGroupNumber}\n                        deletedInstances={this.deletedInstances}\n                        expertMode={this.props.expertMode}\n                        extendObject={this.extendObject}\n                        getMemory={this.getMemory}\n                        getRestartSchedule={() => this.getRestartSchedule(instance.obj)}\n                        getSchedule={() => this.getSchedule(instance.obj)}\n                        hosts={this.props.hosts}\n                        id={id}\n\n                        instance={instance}\n                        key={instance.id}\n                        openConfig={this.openConfig}\n                        setCompact={this.setCompact}\n                        setCompactGroup={this.setCompactGroup}\n                        setHost={this.setHost}\n                        setLogLevel={this.setLogLevel}\n                        setMemoryLimitMB={this.setMemoryLimitMB}\n                        setName={this.setName}\n                        setRestartSchedule={this.setRestartSchedule}\n                        setSchedule={this.setSchedule}\n                        setSentry={this.setSentry}\n                        setTier={this.setTier}\n                        t={this.t}\n                        themeType={this.props.themeType}\n                        item={item}\n                    />\n                };\n            } else {\n                return {\n                    category: item.category,\n                    render: <InstanceRow\n                        deleting={this.state.deleting === instance.id}\n                        adminInstance={this.props.adminInstance}\n                        maxCompactGroupNumber={this.state.maxCompactGroupNumber}\n                        deletedInstances={this.deletedInstances}\n                        expanded={this.state.expanded}\n                        expertMode={this.props.expertMode}\n                        extendObject={this.extendObject}\n                        getInstanceStatus={() => this.getInstanceStatus(instance.obj)}\n                        getMemory={this.getMemory}\n                        getModeIcon={this.getModeIcon}\n                        getRestartSchedule={() => this.getRestartSchedule(instance.obj)}\n                        getSchedule={() => this.getSchedule(instance.obj)}\n                        onExpandRow={this.onExpandRow}\n                        hosts={this.props.hosts}\n                        id={id}\n                        idx={idx}\n\n                        instance={instance}\n                        key={instance.id}\n                        openConfig={this.openConfig}\n                        setCompact={this.setCompact}\n                        setCompactGroup={this.setCompactGroup}\n                        setHost={this.setHost}\n                        setLogLevel={this.setLogLevel}\n                        setMemoryLimitMB={this.setMemoryLimitMB}\n                        setName={this.setName}\n                        setRestartSchedule={this.setRestartSchedule}\n                        setSchedule={this.setSchedule}\n                        setSentry={this.setSentry}\n                        setTier={this.setTier}\n                        t={this.t}\n                        themeType={this.props.themeType}\n                        item={item}\n                    />\n                };\n            }\n        });\n\n        if (!list.length) {\n            return <div\n                title={this.t('Click to clear all filters')}\n                onClick={() => this.clearAllFilters()}\n                style={{\n                    margin: 20,\n                    fontSize: 26,\n                    textAlign: 'center',\n                    cursor: 'pointer',\n                }}\n            >{this.t('all items are filtered out')}</div>\n        }\n\n        if (!this.state.viewMode && this.state.viewCategory) {\n            let categoryArray = [];\n\n            list.forEach(({ category }) => !categoryArray.includes(category) && categoryArray.push(category));\n\n            categoryArray.sort((a, b) => {\n                if (a === 'general' && b !== 'general') {\n                    return -1;\n                } else if (a !== 'general' && b === 'general') {\n                    return 1;\n                } else if (a > b) {\n                    return 1;\n                } else if (a < b) {\n                    return -1;\n                } else {\n                    return 0;\n                }\n            });\n\n            return categoryArray.map(name => <InstanceCategory\n                    key={name}\n                    name={name}\n                    expanded={this.state.expandedFolder.includes(name)}\n                    onExpand={expanded => {\n                        const expandedFolder = [...this.state.expandedFolder];\n                        const pos = expandedFolder.indexOf(name);\n                        if (expanded) {\n                            if (pos === -1) {\n                                expandedFolder.push(name);\n                                expandedFolder.sort();\n                            }\n                        } else {\n                            if (pos !== -1) {\n                                expandedFolder.splice(pos, 1);\n                            }\n                        }\n                        window.localStorage.setItem('Instances.expandedFolder', JSON.stringify(expandedFolder));\n                        this.setState({expandedFolder});\n                    }}\n                >\n                    {list.filter(({ category }) => category === name).map(({ render }) => render)}\n                </InstanceCategory>);\n        }\n\n        return list.map(({ render }) => render);\n    }\n\n    onExpandRow = panel => {\n        this.setState(prevState => ({expanded: prevState.expanded !== panel ? panel : null}));\n    }\n\n    async getHostsData() {\n        this.props.socket.getHostInfo(this.props.currentHost, false, 10000)\n            .catch(error => {\n                if (!error.toString().includes('May not read')) {\n                    window.alert('Cannot read host information: ' + error);\n                }\n                return {};\n            })\n            .then(hostData => {\n                this._cacheList = null;\n                this.setState({ hostData })\n            });\n\n        let memState;\n        let memAvailable = await this.props.socket.getState(`${this.props.currentHost}.memAvailable`)\n        let freemem = await this.props.socket.getState(`${this.props.currentHost}.freemem`)\n        let object = await this.props.socket.getObject(`${this.props.currentHost}`)\n        if (memAvailable) {\n            memState = memAvailable;\n        } else if (freemem) {\n            memState = freemem;\n        }\n        if (memState) {\n            const totalmem = (object?.native.hardware.totalmem / (1024 * 1024));\n            const percent = Math.round((memState.val / totalmem) * 100);\n            this._cacheList = null;\n            this.setState({\n                percent,\n                memFree: memState.val\n            });\n        }\n    }\n\n    changeSetStateBool = value =>\n        this.setState(state => {\n            window.localStorage.setItem(`Instances.${value}`, JSON.stringify(!state[value]));\n            return ({ [value]: !state[value] });\n        });\n\n    changeSetState = (name,value) =>\n        this.setState(state => {\n            window.localStorage.setItem(`Instances.${name}`, value);\n            return ({ [name]: value });\n        });\n\n    changeStartedStopped = value => {\n        this._cacheList = null;\n        this.setState(state => {\n            const newValue = !state.playArrow ? 1 : state.playArrow < 2 ? 2 : false;\n            window.localStorage.setItem(`Instances.playArrow`, JSON.stringify(newValue));\n            return {playArrow: newValue};\n        });\n    };\n\n    changeCompactGroup = filterCompactGroup => {\n        this._cacheList = null;\n        window.localStorage.setItem(`Instances.filterCompactGroup`, JSON.stringify(filterCompactGroup));\n        this.setState({ filterCompactGroup });\n    };\n\n    handleFilterChange(event) {\n        this.typingTimer && clearTimeout(this.typingTimer);\n\n        this.typingTimer = setTimeout(value => {\n            this.typingTimer = null;\n            this._cacheList = null;\n            this.setState({ filterText: value });\n            window.localStorage.setItem('instances.filter', value);\n        }, 300, event.target.value);\n    }\n\n    render() {\n        if (!this.state.instances) {\n            return <LinearProgress />;\n        }\n        const { classes } = this.props;\n\n        if (this.state.dialog === 'config' && this.state.dialogProp) {\n            const instance = this.state.instances[this.state.dialogProp] || null;\n            if (instance) {\n                return <Paper className={classes.paper}>\n                    <Config\n                        adapter={instance.id.split('.')[0]}\n                        className={classes.iframe}\n                        configStored={this.props.configStored}\n                        dateFormat={this.props.dateFormat}\n                        icon={instance.image}\n                        instance={parseInt(instance.id.split('.')[1])}\n                        isFloatComma={this.props.isFloatComma}\n                        jsonConfig={instance.jsonConfig}\n                        lang={this.props.lang}\n                        materialize={instance.materialize}\n                        menuPadding={this.props.menuPadding}\n                        socket={this.props.socket}\n                        t={this.t}\n                        theme={this.props.theme}\n                        themeName={this.props.themeName}\n                        themeType={this.props.themeType}\n                        width={this.props.width}\n\n                        onRegisterIframeRef={ref => this.props.onRegisterIframeRef(ref)}\n                        onUnregisterIframeRef={ref => this.props.onUnregisterIframeRef(ref)}\n                    />\n                </Paper>;\n            }\n        }\n\n        if (this.shouldUpdateAfterDialogClosed) {\n            this.shouldUpdateAfterDialogClosed = false;\n            if (!this.statesUpdateTimer) {\n                if (!this.statesUpdateTimer) {\n                    this.statesUpdateTimer = setTimeout(() => {\n                        this.statesUpdateTimer = null;\n                        this.forceUpdate();\n                    }, 300);\n                }\n            }\n        }\n\n        return <TabContainer>\n            <TabHeader>\n                <Tooltip title={this.t('Show / hide List')}>\n                    <IconButton onClick={() => this.changeSetStateBool('viewMode')}>\n                        {this.state.viewMode ? <ViewModuleIcon /> : <ViewListIcon />}\n                    </IconButton>\n                </Tooltip>\n\n                {!this.state.viewMode && <Tooltip title={this.t('Category')}>\n                    <IconButton onClick={() => this.changeSetStateBool('viewCategory')}>\n                        <ListIcon color={this.state.viewCategory ? 'primary' : 'inherit'} />\n                    </IconButton>\n                </Tooltip>}\n\n                {!this.state.viewMode && this.state.viewCategory && <><Tooltip title={this.t('expand all')}>\n                    <IconButton onClick={() => {\n                        // all folders\n                        let expandedFolder = [];\n                        this._cacheList.forEach(({ category }) => !expandedFolder.includes(category) && expandedFolder.push(category));\n                        expandedFolder.sort();\n                        window.localStorage.setItem('Instances.expandedFolder', JSON.stringify(expandedFolder));\n                        this.setState({ expandedFolder })\n                    }}>\n                        <FolderOpenIcon />\n                    </IconButton>\n                </Tooltip>\n                    <Tooltip title={this.t('collapse all')}>\n                        <IconButton onClick={() => {\n                            window.localStorage.removeItem('Instances.expandedFolder');\n                            this.setState({ expandedFolder: [] })\n                        }}>\n                            <FolderIcon />\n                        </IconButton>\n                    </Tooltip>\n                </>}\n                <Tooltip title={this.t('Reload')}>\n                    <IconButton onClick={() => this.getData(true)}>\n                        <RefreshIcon />\n                    </IconButton>\n                </Tooltip>\n                {this.props.hosts.length > 1 ? <Tooltip title={this.t('Show instances only for current host')}>\n                    <IconButton onClick={() => this.changeSetStateBool('onlyCurrentHost')}>\n                        <DevicesIcon color={this.state.onlyCurrentHost ? 'primary' : 'inherit'} />\n                    </IconButton>\n                </Tooltip> : null}\n                <Tooltip title={this.t(!this.state.playArrow ?\n                    'Show running or stopped instances' :\n                    this.state.playArrow < 2 ?\n                        'Showed only running instances' :\n                        'Showed only stopped instances')}>\n                    <IconButton onClick={() => this.changeStartedStopped(this.state.playArrow)}>\n                        <PlayArrowIcon style={this.state.playArrow === 2 ? {color: 'red'} : null}\n                                       color={this.state.playArrow && this.state.playArrow < 2 ? 'primary' : 'inherit'} />\n                    </IconButton>\n                </Tooltip>\n                <Tooltip title={this.t('Filter instances')}>\n                    <IconButton onClick={() =>\n                        instanceFilterDialogCallback(newState => {\n                            if (newState) {\n                                this._cacheList = null;\n                                this.setState(newState);\n                                this.changeSetState('filterMode', newState.filterMode);\n                                this.changeSetState('filterStatus', newState.filterStatus);\n                            }\n                        }, this.state.filterMode, this.state.filterStatus, this.getModeIcon)}>\n                        <FilterListIcon style={{width: 16, height: 16}} className={this.state.filterMode || this.state.filterStatus ? classes.filterActive : ''}/>\n                    </IconButton>\n                </Tooltip>\n                {/*this.props.expertMode && <Tooltip title=\"sentry\">\n                    <IconButton\n                        size=\"small\"\n                        className={classes.button}\n                        onClick={() => this.changeSetStateBool('sentry')}\n                    >\n                        <CardMedia\n                            className={clsx(classes.sentry, !this.state.sentry && classes.contrast0)}\n                            component=\"img\"\n                            image={sentry}\n                        />\n                    </IconButton>\n                </Tooltip>*/}\n                {this.props.expertMode && this.state.compact ?\n                    <CustomSelectButton\n                        title={this.t('Filter specific compact group')}\n                        t={this.t}\n                        arrayItem={[\n                            { name: 'All' },\n                            { name: 'controller' },\n                            { name: 'default' },\n                            ...Array(this.state.maxCompactGroupNumber - 1).fill().map((_, idx) => ({ name: idx + 2 }))\n                        ]}\n                        buttonIcon={<ViewCompactIcon style={{ marginRight: 4 }} color=\"primary\" />}\n                        onClick={value => this.changeCompactGroup(value)}\n                        value={this.state.filterCompactGroup} />\n                    : null}\n                <div className={classes.grow} />\n                <TextField\n                    inputRef={this.inputRef}\n                    label={this.t('Filter')}\n                    style={{ margin: '5px 0' }}\n                    defaultValue={this.state.filterText}\n                    onChange={event => this.handleFilterChange(event)}\n                    InputProps={{\n                        endAdornment: (\n                            this.state.filterText ? <InputAdornment position=\"end\">\n                                <IconButton\n                                    size=\"small\"\n                                    onClick={() => {\n                                        this.inputRef.current.value = '';\n                                        this._cacheList = null;\n                                        this.setState({ filterText: '' });\n                                        window.localStorage.setItem('instances.filter', '');\n                                    }}\n                                >\n                                    <CloseIcon />\n                                </IconButton>\n                            </InputAdornment> : null\n                        ),\n                    }}\n                />\n                <div className={classes.grow} />\n                <Hidden xsDown>\n                    {this.state.hostData &&\n                        `${this.t('Disk free')}: ${Math.round(this.state.hostData['Disk free'] / (this.state.hostData['Disk size'] / 100))}%, ${this.t('Total RAM usage')}: ${this.state.mem} Mb / ${this.t('Free')}: ${this.state.percent}% = ${this.state.memFree} Mb [${this.t('Host')}: ${this.props.currentHostName} - ${this.state.processes} ${this.t('processes')}]`}\n                </Hidden>\n            </TabHeader>\n            <TabContent overflow=\"auto\">\n                <div className={this.state.viewMode ? classes.cards : ''}>\n                    {this.getPanels(classes)}\n                </div>\n            </TabContent>\n        </TabContainer>;\n    }\n}\n\nInstances.propTypes = {\n    ready: PropTypes.bool,\n    t: PropTypes.func,\n    lang: PropTypes.string,\n    expertMode: PropTypes.bool,\n    instancesWorker: PropTypes.object,\n\n    hostname: PropTypes.string,\n    hosts: PropTypes.array,\n    protocol: PropTypes.string,\n    adminInstance: PropTypes.string,\n    repository: PropTypes.object,\n\n    socket: PropTypes.object,\n    themeName: PropTypes.string,\n    themeType: PropTypes.string,\n    theme: PropTypes.object,\n    systemLang: PropTypes.string,\n    width: PropTypes.string,\n    menuPadding: PropTypes.number,\n    isFloatComma: PropTypes.bool,\n    dateFormat: PropTypes.string,\n\n    onRegisterIframeRef: PropTypes.func,\n    onUnregisterIframeRef: PropTypes.func,\n};\n\nexport default withWidth()(withStyles(styles)(Instances));\n"],"sourceRoot":""}