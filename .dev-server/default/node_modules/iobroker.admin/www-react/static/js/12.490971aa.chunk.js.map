{"version":3,"sources":["../node_modules/@material-ui/icons/Pause.js","../node_modules/@material-ui/icons/SaveAlt.js","../node_modules/@material-ui/icons/ErrorOutline.js","tabs/Logs.js"],"names":["_interopRequireDefault","require","_interopRequireWildcard","Object","defineProperty","exports","value","default","React","_default","createElement","d","COLORS_LIGHT","COLORS_DARK","padding2","num","s","toString","length","padding3","Logs","props","logHandler","newLogs","size","ignoreNextLogs","logs","state","concat","splice","sources","logWarnings","logErrors","lastOdd","color","keys","COLORS","themeType","forEach","item","undefined","odd","time","date","Date","ts","getFullYear","getMonth","getDate","getHours","getMinutes","getSeconds","getMilliseconds","severity","icon","adapterName","from","replace","adapters","startsWith","hosts","common","JSON","parse","stringify","active","newState","logSize","estimatedSize","setState","source","window","localStorage","getItem","message","logDeleteDialog","logDownloadDialog","logFiles","pause","pauseCount","pid","colors","currentHost","severities","t","words","force","cb","this","logsWorker","getLogs","then","results","values","sort","id","i","socket","getLogsFiles","list","reverse","file","name","fileName","split","pop","push","path","enableCountErrors","registerHandler","clearErrors","getCompactAdapters","getCompactHosts","_hosts","Promise","resolve","_id","readLogFiles","readLogs","unregisterHandler","clearLines","event","setItem","target","currentTarget","delLogs","clearLog","closeLogDelete","catch","error","alert","open","focus","classes","map","entry","className","downloadEntry","onClick","openTab","closeLogDownload","downloadLogSize","variant","Utils","formatBytes","unshift","style","backgroundColor","src","iconSelect","rows","filterMessage","toLowerCase","sourceFilter","includes","previousKey","row","regExp","RegExp","matches","match","isHidden","original","key","clsx","rowOdd","hidden","lastRowRender","updatedRow","hover","cell","cellName","iconAndName","title","parts","text","now","lastRowRenderTimeout","setTimeout","onClose","closeButton","dividers","gutterBottom","autoFocus","handleLogDelete","startIcon","readLogsInProcess","pauseChild","pauseButton","handleLogPause","openLogDelete","changePid","pidSize","badgeContent","badge","badgeError","badgeWarn","grow","openLogDownload","anchorEl","keepMounted","Boolean","getLogFiles","logEstimated","container","stickyHeader","table","formControl","labelId","onChange","handleSourceChange","getSources","disabled","label","header","timestamp","handleSeverityChange","getSeverities","messageText","handleMessageChange","InputProps","endAdornment","e","getRows","renderClearDialog","Component","withWidth","withStyles","theme","height","tableLayout","minWidth","padding","overflow","whiteSpace","textOverflow","palette","background","verticalAlign","lineHeight","animation","width","light_error","red","light_warn","amber","light_debug","grey","light_silly","dark_error","dark_warn","dark_debug","dark_silly","display","flexGrow","marginRight","marginLeft","fontStyle","position","right","spacing","top","primary","content","borderBottom","justifyContent","fontSize","alignItems","emptyButton","marginTop"],"mappings":"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","file":"static/js/12.490971aa.chunk.js","sourcesContent":["\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar React = _interopRequireWildcard(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M6 19h4V5H6v14zm8-14v14h4V5h-4z\"\n}), 'Pause');\n\nexports.default = _default;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar React = _interopRequireWildcard(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M19 12v7H5v-7H3v7c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2v-7h-2zm-6 .67l2.59-2.58L17 11.5l-5 5-5-5 1.41-1.41L11 12.67V3h2z\"\n}), 'SaveAlt');\n\nexports.default = _default;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar React = _interopRequireWildcard(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M11 15h2v2h-2zm0-8h2v6h-2zm.99-5C6.47 2 2 6.48 2 12s4.47 10 9.99 10C17.52 22 22 17.52 22 12S17.52 2 11.99 2zM12 20c-4.42 0-8-3.58-8-8s3.58-8 8-8 8 3.58 8 8-3.58 8-8 8z\"\n}), 'ErrorOutline');\n\nexports.default = _default;","import React, { Component } from 'react';\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\n\nimport withWidth from '@material-ui/core/withWidth';\nimport { withStyles } from '@material-ui/core/styles';\n\nimport Button from '@material-ui/core/Button';\nimport IconButton from '@material-ui/core/IconButton';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport TextField from '@material-ui/core/TextField';\nimport Typography from '@material-ui/core/Typography';\nimport Menu from '@material-ui/core/Menu';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport Badge from '@material-ui/core/Badge';\nimport LinearProgress from '@material-ui/core/LinearProgress';\n\nimport InputLabel from '@material-ui/core/InputLabel';\nimport FormControl from '@material-ui/core/FormControl';\nimport Select from '@material-ui/core/Select';\nimport { Tooltip } from '@material-ui/core';\n\nimport CloseIcon from '@material-ui/icons/Close';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport DeleteForeverIcon from '@material-ui/icons/DeleteForever';\nimport PauseIcon from '@material-ui/icons/Pause';\nimport RefreshIcon from '@material-ui/icons/Refresh';\nimport ClearIcon from '@material-ui/icons/Close';\nimport SaveAltIcon from '@material-ui/icons/SaveAlt';\nimport ErrorIcon from '@material-ui/icons/ErrorOutline';\nimport WarningIcon from '@material-ui/icons/Warning';\nimport CheckIcon from '@material-ui/icons/Check';\nimport {FaPalette as ColorsIcon} from 'react-icons/fa';\n\nimport amber from '@material-ui/core/colors/amber';\nimport grey from '@material-ui/core/colors/grey';\nimport red from '@material-ui/core/colors/red';\n\nimport Icon from '@iobroker/adapter-react/Components/Icon';\n\nimport Utils from '../Utils';\nimport TabContainer from '../components/TabContainer';\nimport TabContent from '../components/TabContent';\nimport TabHeader from '../components/TabHeader';\n\nconst MAX_LOGS = 3000;\n\nconst styles = theme => ({\n    container: {\n        height: '100%'\n    },\n    table: {\n        tableLayout: 'fixed',\n        minWidth: 960,\n        '& td,th': {\n            padding: '3px 4px'\n        },\n        '& td:nth-of-type(5)': {\n            overflow: 'hidden',\n            whiteSpace: 'nowrap',\n            textOverflow: 'ellipsis'\n        }\n    },\n    row: {\n    },\n    rowOdd: {\n        backgroundColor: theme.palette.background.default,\n    },\n    cell: {\n        verticalAlign: 'top'\n    },\n    cellName: {\n        lineHeight: '14px',\n    },\n    updatedRow: {\n        animation: 'updated 1s',\n    },\n    formControl: {\n        width: '100%'\n    },\n    light_error: {\n        color: red[800]\n    },\n    light_warn: {\n        color: amber[800]\n    },\n    light_debug: {\n        color: grey[800]\n    },\n    light_silly: {\n        color: grey[700]\n    },\n    dark_error: {\n        color: red[200]\n    },\n    dark_warn: {\n        color: amber[200]\n    },\n    dark_debug: {\n        color: grey[300]\n    },\n    dark_silly: {\n        color: grey[200]\n    },\n    source: {\n        width: 200\n    },\n    pid: {\n        width: 55\n    },\n    timestamp: {\n        width: 175\n    },\n    severity: {\n        width: 80\n    },\n    message: {\n        minWidth: 300\n    },\n    hidden: {\n        display: 'none'\n    },\n    grow: {\n        flexGrow: 1\n    },\n    logSize: {\n        marginRight: '1rem',\n        marginLeft: '1rem'\n    },\n    logEstimated: {\n        fontStyle: 'italic',\n    },\n    closeButton: {\n        position: 'absolute',\n        right: theme.spacing(1),\n        top: theme.spacing(1),\n        color: theme.palette.grey[500],\n    },\n    header: {\n        '& .MuiFormLabel-root.Mui-disabled': {\n            color: theme.palette.text.primary\n        },\n        '& .MuiInput-underline::before': {\n            content: '',\n            borderBottom: 'none'\n        }\n    },\n    pauseButton: {\n        minWidth: theme.spacing(6)\n    },\n    pauseCount: {\n        color: amber[500]\n    },\n    downloadLogSize: {\n        color: grey[500],\n        marginLeft: theme.spacing(2)\n    },\n    downloadEntry: {\n        display: 'flex',\n        justifyContent: 'space-between'\n    },\n    pidSize: {\n        fontSize: 14,\n        width: 24,\n        height: 24,\n        display: 'flex',\n        alignItems: 'center'\n    },\n    '@media screen and (max-width: 450px)': {\n        row: {\n            '& > *': {\n                fontSize: 8\n            }\n        },\n        source: {\n            width: 120\n        },\n        pid: {\n            width: 40\n        },\n        timestamp: {\n            width: 100\n        },\n        severity: {\n            width: 61,\n        },\n        message: {\n            minWidth: 150\n        },\n        formControl: {\n            '& > *': {\n                fontSize: '10px !important'\n            }\n        },\n        header: {\n            '& > *': {\n                fontSize: '10px !important'\n            }\n        },\n        messageText: {\n            '& > *': {\n                fontSize: '10px !important'\n            }\n        }\n    },\n    badge: {\n        top: 10,\n        right: 10,\n    },\n    badgeError: {\n        //color: red[500]\n    },\n    badgeWarn: {\n        backgroundColor: amber[500]\n    },\n    emptyButton: {\n        width: 48\n    },\n    icon: {\n        width: 16,\n        height: 16,\n    },\n    iconSelect: {\n        width: 24,\n        height: 25,\n        marginRight: 4,\n    },\n    name: {\n        verticalAlign: 'top',\n        display: 'inline-block',\n        marginTop: 1,\n        marginLeft: 2,\n        overflow: 'hidden',\n        whiteSpace: 'nowrap',\n        width: '100%',\n        textOverflow: 'ellipsis'\n    },\n    iconAndName:{\n        whiteSpace: 'nowrap',\n        display: 'flex'\n    }\n});\n\nconst COLORS_LIGHT = [\n    '#ffadad30',\n    '#ffd6a530',\n    '#fdffb630',\n    '#caffbf30',\n    '#9bf6ff30',\n    '#a0c4ff30',\n    '#bdb2ff30',\n    '#ffc6ff30',\n    '#fffffc30',\n];\n\nconst COLORS_DARK = [\n    'rgba(255,109,109,0.2)',\n    'rgba(253,173,84,0.2)',\n    'rgba(241,255,88,0.2)',\n    'rgba(115,253,81,0.2)',\n    'rgba(71,235,255,0.2)',\n    'rgba(74,145,255,0.2)',\n    'rgba(108,85,255,0.2)',\n    'rgba(250,77,250,0.2)',\n    'rgba(255,255,105,0.2)',\n];\n\n\n// Number prototype is read only, properties should not be added\nfunction padding2(num) {\n    let s = num.toString();\n    if (s.length < 2) {\n        s = '0' + s;\n    }\n    return s;\n}\nfunction padding3(num) {\n    let s = num.toString();\n    if (s.length < 2) {\n        s = '00' + s;\n    } else\n        if (s.length < 3) {\n            s = '0' + s;\n        }\n    return s;\n}\n\nclass Logs extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            source: window.localStorage.getItem('Log.source') || '1',\n            severity: window.localStorage.getItem('Log.severity') || 'debug',\n            message: window.localStorage.getItem('Log.message') || '',\n            logDeleteDialog: false,\n            logDownloadDialog: null,\n            logFiles: [],\n            logs: null,\n            logSize: null,\n            logErrors: 0,\n            logWarnings: 0,\n            estimatedSize: true,\n            pause: 0,\n            pauseCount: 0,\n            pid: JSON.parse(window.localStorage.getItem('Logs.pid')) || false,\n            colors: window.localStorage.getItem('Logs.colors') === 'true',\n            adapters: {},\n            sources: {},\n            currentHost: this.props.currentHost,\n            hosts: null,\n        };\n\n        this.severities = {\n            'silly': 0,\n            'debug': 1,\n            'info': 2,\n            'warn': 3,\n            'error': 4\n        };\n\n        this.t = props.t;\n\n        this.words = {};\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        if (props.currentHost !== state.currentHost) {\n            //this.ignoreNextLogs = true;\n            return{currentHost: props.currentHost, logs: [], logFiles: null};\n        } else {\n            return null;\n        }\n    }\n\n    readLogs(force, logFiles, cb) {\n        if (this.props.logsWorker && this.state.hosts) {\n            this.props.logsWorker.getLogs(force)\n                .then(results => {\n                    if (!results) {\n                        return;\n                    }\n                    const logs = [...results.logs];\n                    const logSize = results.logSize;\n\n                    let logWarnings = 0;\n                    let logErrors = 0;\n                    let lastOdd = true;\n                    let sources = JSON.parse(JSON.stringify(this.state.sources));\n                    Object.values(sources).forEach(source => source.active = false);\n\n                    logs.forEach(item => {\n                        lastOdd = !lastOdd;\n                        item.odd = lastOdd;\n\n                        if (!item.time) {\n                            const date = new Date(item.ts);\n                            item.time = `${date.getFullYear()}-${padding2(date.getMonth() + 1)}-${padding2(date.getDate())} ` +\n                                `${padding2(date.getHours())}:${padding2(date.getMinutes())}:${padding2(date.getSeconds())}.${padding3(date.getMilliseconds())}`;\n                        }\n                        if (item.severity === 'error') {\n                            logErrors++;\n                        } else if (item.severity === 'warn') {\n                            logWarnings++;\n                        }\n\n                        let adapterName = item.from.replace(/\\.\\d+$/, '');\n                        let icon = this.state.adapters[adapterName]?.icon;\n                        if (icon) {\n                            if (!icon.startsWith('data:image')) {\n                                icon = `./files/${adapterName}.admin/${icon}`;\n                            }\n                        } else {\n                            icon = this.state.hosts['system.' + item.from]?.common?.icon;\n                        }\n                        item.icon = icon || null;\n\n                        if (!sources[item.from]) {\n                            sources[item.from] = {active: true, icon: item.icon};\n                        } else {\n                            sources[item.from].active = true;\n                        }\n                    });\n\n                    let color = 0;\n                    let COLORS = this.props.themeType === 'dark' ? COLORS_DARK : COLORS_LIGHT;\n                    Object.keys(sources).sort().forEach((id, i) => {\n                        sources[id].color = COLORS[color % COLORS.length];\n                        color++;\n                    });\n\n                    if (logFiles) {\n                        this.setState({ logFiles, logs, logSize, estimatedSize: false, logErrors, logWarnings, sources }, () => cb && cb());\n                    } else {\n                        this.setState({ logs, logSize, estimatedSize: false, logErrors, logWarnings, sources }, () => cb && cb());\n                    }\n                });\n        } else if (logFiles) {\n            this.setState({ logFiles }, () => cb && cb());\n        }\n    }\n\n    readLogFiles() {\n        return this.props.socket.getLogsFiles(this.state.currentHost)\n            .then(list => {\n                if (list && list.length) {\n                    const logFiles = [];\n\n                    list.reverse();\n                    // first 2018-01-01\n                    list.forEach(file => {\n                        const parts = file.fileName.split('/');\n                        const name = parts.pop().replace(/iobroker\\.?/, '').replace('.log', '');\n\n                        if (name[0] <= '9') {\n                            logFiles.push({\n                                path: file,\n                                name: name\n                            });\n                        }\n                    });\n\n                    // then restart.log ans so on\n                    list.sort();\n                    list.forEach(file => {\n                        const parts = file.fileName.split('/');\n                        const name = parts.pop().replace(/iobroker\\.?/, '').replace('.log', '');\n\n                        if (name[0] > '9') {\n                            logFiles.push({\n                                path: file,\n                                name\n                            });\n                        }\n                    });\n\n                    return logFiles;\n                } else {\n                    return [];\n                }\n            });\n    }\n\n    componentDidMount() {\n        this.props.logsWorker && this.props.logsWorker.enableCountErrors(false);\n        this.props.logsWorker.registerHandler(this.logHandler);\n        this.props.clearErrors();\n\n        this.props.socket.getCompactAdapters()\n            .then(adapters =>\n                this.props.socket.getCompactHosts()\n                    .then(_hosts => new Promise(resolve => {\n                        const hosts = {};\n                        _hosts.forEach(item => hosts[item._id] = item);\n\n                        this.setState({ adapters, hosts }, () =>\n                            resolve());\n                    }))\n                    .then(() => this.readLogFiles())\n                    .then(logFiles => this.readLogs(true, logFiles)));\n    }\n\n    componentWillUnmount() {\n        this.props.logsWorker && this.props.logsWorker.enableCountErrors(true);\n        this.props.logsWorker.unregisterHandler(this.logHandler);\n        this.props.clearErrors();\n    }\n\n    logHandler = (newLogs, size) => {\n        if (this.ignoreNextLogs) {\n            this.ignoreNextLogs = false;\n            return;\n        }\n\n        const oldLogs = this.state.logs || [];\n        const logs = oldLogs.concat(newLogs);\n\n        if (logs.length > MAX_LOGS) {\n            logs.splice(0, logs.length - MAX_LOGS);\n        }\n\n        let logWarnings = 0;\n        let logErrors = 0;\n        let lastOdd = false;\n        let sources;\n        let color = Object.keys(this.state.sources);\n        let COLORS = this.props.themeType === 'dark' ? COLORS_DARK : COLORS_LIGHT;\n\n        logs.forEach(item => {\n            if (item.odd !== undefined) {\n                lastOdd = item.odd;\n            } else {\n                lastOdd = !lastOdd;\n                item.odd = lastOdd;\n            }\n            if (!item.time) {\n                const date = new Date(item.ts);\n                item.time = `${date.getFullYear()}-${padding2(date.getMonth() + 1)}-${padding2(date.getDate())} ` +\n                    `${padding2(date.getHours())}:${padding2(date.getMinutes())}:${padding2(date.getSeconds())}.${padding3(date.getMilliseconds())}`;\n            }\n            if (item.severity === 'error') {\n                logErrors++;\n            } else if (item.severity === 'warn') {\n                logWarnings++;\n            }\n            if (item.icon === undefined) {\n                let adapterName = item.from.replace(/\\.\\d+$/, '');\n                let icon = this.state.adapters[adapterName]?.icon;\n                if (icon) {\n                    if (!icon.startsWith('data:image')) {\n                        icon = `./files/${adapterName}.admin/${icon}`;\n                    }\n                } else if (this.state.hosts) {\n                    icon = this.state.hosts['system.' + item.from]?.common?.icon;\n                }\n                item.icon = icon || null;\n            }\n\n            if (!this.state.sources[item.from]) {\n                sources = sources || JSON.parse(JSON.stringify(this.state.sources));\n                sources[item.from] = {\n                    active: true,\n                    color: COLORS[color % COLORS.length],\n                    icon: item.icon\n                };\n                color++;\n            } else {\n                sources = sources || JSON.parse(JSON.stringify(this.state.sources));\n                sources[item.from].active = true;\n            }\n        });\n\n        const newState = { logs, logSize: this.state.logSize + size, estimatedSize: true, logWarnings, logErrors };\n        if (sources) {\n            newState.sources = sources;\n        }\n\n        this.setState(newState);\n    }\n\n    clearLog() {\n        this.props.logsWorker && this.props.logsWorker.clearLines();\n        this.props.clearErrors();\n        this.setState({ logs: [], logSize: null, logErrors: 0, logWarnings: 0 });\n    }\n\n    handleMessageChange(event) {\n        window.localStorage.setItem('Log.message', event.target.value);\n        this.setState({ message: event.target.value });\n    }\n\n    handleSourceChange(event) {\n        window.localStorage.setItem('Log.source', event.target.value);\n        this.setState({ source: event.target.value });\n    }\n\n    handleSeverityChange(event) {\n        window.localStorage.setItem('Log.severity', event.target.value);\n        this.setState({ severity: event.target.value });\n    }\n\n    openLogDownload(event) {\n        this.setState({ logDownloadDialog: event.currentTarget });\n    }\n\n    closeLogDownload() {\n        this.setState({ logDownloadDialog: null });\n    }\n\n    openLogDelete() {\n        this.setState({ logDeleteDialog: true });\n    }\n\n    closeLogDelete() {\n        this.setState({ logDeleteDialog: false });\n    }\n\n    handleLogDelete() {\n        this.props.socket.delLogs(this.state.currentHost)\n            .then(() => this.clearLog())\n            .then(() => this.readLogs(true, null, () => this.closeLogDelete()))\n            .catch(error => {\n                this.closeLogDelete();\n                window.alert(error);\n            });\n    }\n\n    handleLogPause() {\n        this.setState({ pause: this.state.pause ? 0 : this.state.logs.length });\n    }\n\n    openTab(path) {\n        const tab = window.open(path, '_blank');\n        tab.focus();\n    }\n\n    getLogFiles() {\n        const { classes } = this.props;\n\n        return this.state.logFiles.map(entry => {\n            return <MenuItem\n                className={classes.downloadEntry}\n                key={entry.name}\n                onClick={() => {\n                    this.openTab(entry.path.fileName);\n                    this.closeLogDownload();\n                }}\n            >\n                {entry.name}\n                <Typography\n                    className={classes.downloadLogSize}\n                    variant=\"caption\"\n                >\n                    {Utils.formatBytes(entry.path.size) || '-'}\n                </Typography>\n            </MenuItem>;\n        });\n    }\n\n    getSeverities() {\n        const severities = [];\n\n        for (const i in this.severities) {\n            severities.push(<MenuItem value={i} key={i}>{i}</MenuItem>);\n        }\n\n        return severities;\n    }\n\n    getSources() {\n        const sources = Object.keys(this.state.sources).sort();\n        sources.unshift('1');\n\n        return sources.map(id =>\n            <MenuItem\n                value={id}\n                key={id}\n                style={{backgroundColor: id === '1' ? undefined : this.state.sources[id].color}}\n            >\n                {id === '1' ?\n                    null :\n                    <Icon src={this.state.sources[id].icon} className={this.props.classes.iconSelect}/>\n                }\n                {id === '1' ?\n                    this.t('Source') :\n                    id\n                }\n            </MenuItem>);\n    }\n\n    getRows() {\n        const rows = [];\n        const { classes } = this.props;\n        const filterMessage = this.state.message.toLowerCase();\n        let sourceFilter = this.state.source;\n        const sources = Object.keys(this.state.sources).sort();\n        sources.unshift('1');\n        if (!sources.includes(sourceFilter)) {\n            sourceFilter = '1';\n        }\n\n        let previousKey = 0;\n        for (let i = this.state.pause > 0 ? this.state.pause - 1 : this.state.logs.length - 1; i >= 0; i--) {\n            const row = this.state.logs[i];\n            if (!row) {\n                continue;\n            }\n            const severity = row.severity;\n\n            let message = row.message || '';\n            let id = '';\n\n            if (typeof message !== 'object') {\n                const regExp = new RegExp(row.from.replace('.', '\\\\.').replace(')', '\\\\)').replace('(', '\\\\(') + ' \\\\(\\\\d+\\\\) ', 'g');\n                const matches = message.match(regExp);\n\n                if (matches) {\n                    message = message.replace(matches[0], '');\n                    id = matches[0].split(' ')[1].match(/\\d+/g)[0];\n                } else {\n                    message = message.replace(row.from + ' ', '');\n                }\n            }\n\n            const isFrom = sourceFilter !== '1' && sourceFilter !== row.from;\n\n            let isHidden = isFrom || this.severities[severity] < this.severities[this.state.severity];\n            if (!isHidden && filterMessage) {\n                if (typeof message === 'object') {\n                    isHidden = !message.original.toLowerCase().includes(filterMessage);\n                } else {\n                    isHidden = !message.toLowerCase().includes(filterMessage);\n                }\n            }\n\n            const key = previousKey === row.key ? i : row.key;\n            previousKey = row.key;\n\n            rows.push(<TableRow\n                    className={clsx(classes.row, row.odd && classes.rowOdd, isHidden && classes.hidden, this.lastRowRender && row.ts > this.lastRowRender && classes.updatedRow)}\n                    style={this.state.colors ? {backgroundColor: this.state.sources[row.from]?.color || undefined} : {}}\n                    key={key}\n                    hover\n                >\n                    <TableCell className={clsx(classes.cell, classes.cellName)}>\n                        <div className={classes.iconAndName}>\n                            {<Icon src={row.icon} className={classes.icon} />}<div className={classes.name}>{row.from}</div>\n                        </div>\n                    </TableCell>\n                    {this.state.pid && <TableCell className={clsx(classes.cell, classes[this.props.themeType + '_' + severity])}>\n                        {id}\n                    </TableCell>}\n                    <TableCell className={clsx(classes.cell, classes[this.props.themeType + '_' + severity])}>\n                        {row.time}\n                    </TableCell>\n                    <TableCell className={clsx(classes.cell, classes[this.props.themeType + '_' + severity])}>\n                        {row.severity}\n                    </TableCell>\n                    <TableCell\n                        className={clsx(classes.cell, classes[this.props.themeType + '_' + severity])}\n                        title={typeof message === 'object' ? message.original : message}\n                    >\n                        {typeof message === 'object' ? message.parts.map((item, i) => <span key={i} style={item.style}>{item.text}</span>): message}\n                    </TableCell>\n                </TableRow>\n            );\n\n        }\n\n        if (!this.lastRowRender || Date.now() - this.lastRowRender > 1000) {\n            if (!this.lastRowRenderTimeout) {\n                this.lastRowRenderTimeout = setTimeout(() => {\n                    this.lastRowRenderTimeout = null;\n                    this.lastRowRender = Date.now();\n                }, 1000);\n            }\n        }\n\n        return rows;\n    }\n\n    renderClearDialog() {\n        const { classes } = this.props;\n\n        return <Dialog onClose={() => this.closeLogDelete()} open={this.state.logDeleteDialog}>\n            <DialogTitle>\n                {this.t('Please confirm')}\n                <IconButton className={classes.closeButton} onClick={() => this.closeLogDelete()}>\n                    <CloseIcon />\n                </IconButton>\n            </DialogTitle>\n            <DialogContent dividers>\n                <Typography gutterBottom>\n                    {this.t('Log file will be deleted. Are you sure?')}\n                </Typography>\n            </DialogContent>\n            <DialogActions>\n                <Button variant=\"contained\" autoFocus onClick={() => this.handleLogDelete()} color=\"primary\" startIcon={<CheckIcon />}>\n                    {this.t('Ok')}\n                </Button>\n                <Button variant=\"contained\" onClick={() => this.closeLogDelete()} startIcon={<CloseIcon />}>\n                    {this.t('Cancel')}\n                </Button>\n            </DialogActions>\n        </Dialog>;\n    }\n\n    changePid() {\n        let pid = !this.state.pid;\n        window.localStorage.setItem('Logs.pid', JSON.stringify(pid));\n        this.setState({ pid });\n    }\n\n    render() {\n        if (!this.state.logs) {\n            return <LinearProgress />;\n        }\n        const { classes } = this.props;\n\n        if (this.state.logFiles === null && !this.readLogsInProcess) {\n            this.readLogsInProcess = true;\n            setTimeout(() =>\n                this.readLogFiles()\n                    .then(logFiles => {\n                        this.readLogsInProcess = false;\n                        this.setState({logFiles});\n                    }), 100);\n        }\n\n        const sources = Object.keys(this.state.sources).sort();\n        sources.unshift('1');\n\n        const pauseChild = !this.state.pause ? <PauseIcon /> :\n            <Typography className={classes.pauseCount}>{this.state.logs.length - this.state.pause}</Typography>;\n\n        return <TabContainer>\n            <TabHeader>\n                <Tooltip title={this.props.t('Refresh log')}>\n                    <IconButton onClick={() => this.readLogs(true)}>\n                        <RefreshIcon />\n                    </IconButton>\n                </Tooltip>\n                <Tooltip title={this.props.t('Pause output')}>\n                    <IconButton\n                        className={classes.pauseButton}\n                        onClick={() => this.handleLogPause()}\n                    >\n                        {pauseChild}\n                    </IconButton>\n                </Tooltip>\n                <Tooltip title={this.props.t('Clear log')}>\n                    <IconButton onClick={() => this.clearLog()}>\n                        <DeleteIcon />\n                    </IconButton>\n                </Tooltip>\n                <Tooltip title={this.props.t('Clear on disk permanent')}>\n                    <IconButton onClick={() => this.openLogDelete()}>\n                        <DeleteForeverIcon />\n                    </IconButton>\n                </Tooltip>\n                <Tooltip title={this.props.t('Show/hide PID')}>\n                    <IconButton\n                        onClick={() => this.changePid()}\n                        color={!this.state.pid ? 'default' : 'primary'}\n                    >\n                        <div className={classes.pidSize}>{this.props.t('PID')}</div>\n                    </IconButton>\n                </Tooltip>\n                <Tooltip title={this.props.t('Show/hide colors')}>\n                    <IconButton\n                        onClick={() => {\n                            window.localStorage.setItem('Logs.colors', this.state.colors ? 'false' : 'true');\n                            this.setState({colors: !this.state.colors});\n                        }}\n                        color={!this.state.colors ? 'default' : 'primary'}\n                    >\n                        <ColorsIcon />\n                    </IconButton>\n                </Tooltip>\n                <Tooltip title={this.props.t('Show errors')}>\n                    <Badge\n                        badgeContent={this.state.logErrors}\n                        color=\"error\"\n                        classes={{ badge: clsx(classes.badge, classes.badgeError) }}\n                    >\n                        <IconButton\n                            onClick={() => {\n                                if (this.state.severity === 'error') {\n                                    this.setState({ severity: 'debug' });\n                                } else {\n                                    this.setState({ severity: 'error', logErrors: 0 })\n                                }\n                            }} color={this.state.severity === 'error' ? 'primary' : 'default'}\n                        >\n                            <ErrorIcon />\n                        </IconButton>\n                    </Badge>\n                </Tooltip>\n                <Tooltip title={this.props.t('Show errors and warnings')}>\n                    <Badge\n                        badgeContent={this.state.logWarnings}\n                        color=\"default\"\n                        classes={{ badge: clsx(classes.badge, classes.badgeWarn) }}\n                    >\n                        <IconButton\n                            onClick={() => {\n                                if (this.state.severity === 'warn') {\n                                    this.setState({ severity: 'debug' });\n                                } else {\n                                    this.setState({ severity: 'warn', logWarnings: 0 })\n                                }\n                            }}\n                            color={this.state.severity === 'warn' ? 'primary' : 'default'}\n                        >\n                            <WarningIcon />\n                        </IconButton>\n                    </Badge>\n                </Tooltip>\n                <div className={classes.grow} />\n                {this.state.logFiles?.length > 0 &&\n                    <div>\n                        <Button\n                            variant=\"contained\"\n                            color=\"primary\"\n                            startIcon={<SaveAltIcon />}\n                            onClick={event => this.openLogDownload(event)}\n                        >\n                            {this.t('Download log')}\n                        </Button>\n                        <Menu\n                            id=\"simple-menu\"\n                            anchorEl={this.state.logDownloadDialog}\n                            keepMounted\n                            open={Boolean(this.state.logDownloadDialog)}\n                            onClose={() => this.closeLogDownload()}\n                        >\n                            {this.getLogFiles()}\n                        </Menu>\n                    </div>\n                }\n                <div className={classes.grow} />\n                <Typography\n                    variant=\"body2\"\n                    title={this.state.estimatedSize ? this.props.t('Estimated size') : ''}\n                    className={classes.logSize}\n                >\n                    {this.t('Log size:')} <span className={this.state.estimatedSize ? classes.logEstimated : ''}>{this.state.logSize === null ? '-' : Utils.formatBytes(this.state.logSize)}</span>\n                </Typography>\n            </TabHeader>\n            <TabContent>\n                <TableContainer className={classes.container}>\n                    <Table stickyHeader size=\"small\" className={classes.table}>\n                        <TableHead>\n                            <TableRow>\n                                <TableCell className={classes.source}>\n                                    <FormControl className={classes.formControl}>\n                                        <InputLabel id=\"source-label\" />\n                                        <Select\n                                            labelId=\"source-label\"\n                                            value={sources.includes(this.state.source) ? this.state.source : '1' }\n                                            onChange={event => this.handleSourceChange(event)}\n                                        >\n                                            {this.getSources()}\n                                        </Select>\n                                    </FormControl>\n                                </TableCell>\n                                {this.state.pid && <TableCell className={classes.pid}>\n                                    <TextField disabled label={this.t('PID')} className={classes.header} />\n                                </TableCell>}\n                                <TableCell className={classes.timestamp}>\n                                    <TextField disabled label={this.t('Time')} className={classes.header} />\n                                </TableCell>\n                                <TableCell className={classes.severity}>\n                                    <FormControl className={classes.formControl}>\n                                        <InputLabel id=\"severity-label\" />\n                                        <Select\n                                            labelId=\"severity-label\"\n                                            value={this.state.severity}\n                                            onChange={event => this.handleSeverityChange(event)}\n                                        >\n                                            {this.getSeverities()}\n                                        </Select>\n                                    </FormControl>\n                                </TableCell>\n                                <TableCell className={classes.message}>\n                                    <FormControl className={classes.formControl}>\n                                        <TextField\n                                            className={classes.messageText}\n                                            label={this.t('Message')}\n                                            onChange={event => this.handleMessageChange(event)}\n                                            value={this.state.message}\n                                            InputProps={{\n                                                endAdornment:\n                                                    this.state.message ? <IconButton\n                                                        size=\"small\"\n                                                        onClick={e => {\n                                                            this.setState({ message: '' });\n                                                        }}>\n                                                        <ClearIcon />\n                                                    </IconButton> : null,\n                                            }}\n                                        />\n                                    </FormControl>\n                                </TableCell>\n                            </TableRow>\n                        </TableHead>\n                        <TableBody>\n                            {this.getRows()}\n                        </TableBody>\n                    </Table>\n                </TableContainer>\n            </TabContent>\n            {this.renderClearDialog()}\n        </TabContainer>;\n    }\n}\n\nLogs.propTypes = {\n    socket: PropTypes.object,\n    currentHost: PropTypes.string,\n    clearErrors: PropTypes.func,\n    logsWorker: PropTypes.object,\n    hostsWorker: PropTypes.object,\n    lang: PropTypes.string,\n    themeType: PropTypes.string,\n    t: PropTypes.func,\n};\n\nexport default withWidth()(withStyles(styles)(Logs));"],"sourceRoot":""}